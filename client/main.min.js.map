{"version":3,"sources":["node_modules/browser-pack/_prelude.js","client/app.js","main.min.js","client/app/common/controller/HomeController.js","client/app/common/controller/LoginController.js","client/app/common/controller/ProfileEditController.js","client/app/common/controller/RegisterController.js","client/app/common/drawbook.common.js","client/app/directives/blur.js","client/app/draw/DrawController.js","client/app/services/CommentService.js","client/app/services/ImageService.js","client/app/services/LikeService.js","client/app/services/UserService.js","client/app/user/controller/UserController.js","client/app/user/controller/UserGalleryController.js","client/app/user/controller/UserImageController.js","client/app/user/drawbook.user.js"],"names":[],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nimport commonModule from './app/common/drawbook.common';\r\nimport userModule from './app/user/drawbook.user';\r\n\r\nimport DrawController from './app/draw/DrawController';\r\nimport UserService from './app/services/UserService';\r\nimport ImageService from './app/services/ImageService';\r\nimport CommentService from './app/services/CommentService';\r\nimport LikeService from './app/services/LikeService';\r\nimport BlurDirective from './app/directives/blur';\r\n\r\nangular\r\n    .module('drawbook', [\r\n        'ngAnimate',\r\n        'ui.router',\r\n        'mgcrea.ngStrap',\r\n        'satellizer',\r\n        'LocalStorageModule',\r\n        'ngFileUpload',\r\n        'bsLoadingOverlay',\r\n        'bsLoadingOverlayHttpInterceptor',\r\n        commonModule.name,\r\n        userModule.name\r\n    ])\r\n    .constant('server', {url: 'http://localhost:5000/api/'})\r\n    .controller('DrawController', DrawController)\r\n\r\n    // Services, factories\r\n    .factory('UserService', UserService)\r\n    .factory('ImageService', ImageService)\r\n    .factory('CommentService', CommentService)\r\n    .factory('LikeService', LikeService)\r\n\r\n    // Directives\r\n    .directive('blur', BlurDirective)\r\n\r\n    // Routes config\r\n    .config(['$stateProvider', '$urlRouterProvider', '$locationProvider', ($stateProvider, $urlRouterProvider, $locationProvider) => {\r\n        $locationProvider.html5Mode(true);\r\n        $stateProvider\r\n            .state('draw', {\r\n                    url: '/draw',\r\n                    templateUrl: '/app/draw/draw.tpl.html',\r\n                    controller: DrawController,\r\n                    controllerAs: 'vm'\r\n            });\r\n        $urlRouterProvider.otherwise(\"/\");\r\n    }])\r\n\r\n    // Auth config\r\n    .config(['$authProvider', 'server', ($authProvider, server) => {\r\n            $authProvider.baseUrl = server.url;\r\n            $authProvider.signupUrl = '/users/register';\r\n            $authProvider.loginUrl = '/users/login';\r\n    }])\r\n\r\n    .factory('allHttpInterceptor', bsLoadingOverlayHttpInterceptorFactoryFactory => bsLoadingOverlayHttpInterceptorFactoryFactory())\r\n    .config(['$httpProvider', ($httpProvider) => {\r\n        $httpProvider.interceptors.push('allHttpInterceptor');\r\n    }])\r\n\r\n    .run(bsLoadingOverlayService => {\r\n        bsLoadingOverlayService.setGlobalConfig({\r\n            delay: 500,\r\n            activeClass: undefined,\r\n            templateUrl: 'loading-overlay-template.html',\r\n            templateOptions: undefined\r\n        })\r\n    });\r\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _drawbook = require('./app/common/drawbook.common');var _drawbook2 = _interopRequireDefault(_drawbook);\nvar _drawbook3 = require('./app/user/drawbook.user');var _drawbook4 = _interopRequireDefault(_drawbook3);\n\nvar _DrawController = require('./app/draw/DrawController');var _DrawController2 = _interopRequireDefault(_DrawController);\nvar _UserService = require('./app/services/UserService');var _UserService2 = _interopRequireDefault(_UserService);\nvar _ImageService = require('./app/services/ImageService');var _ImageService2 = _interopRequireDefault(_ImageService);\nvar _CommentService = require('./app/services/CommentService');var _CommentService2 = _interopRequireDefault(_CommentService);\nvar _LikeService = require('./app/services/LikeService');var _LikeService2 = _interopRequireDefault(_LikeService);\nvar _blur = require('./app/directives/blur');var _blur2 = _interopRequireDefault(_blur);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nangular.\nmodule('drawbook', [\n'ngAnimate',\n'ui.router',\n'mgcrea.ngStrap',\n'satellizer',\n'LocalStorageModule',\n'ngFileUpload',\n'bsLoadingOverlay',\n'bsLoadingOverlayHttpInterceptor',\n_drawbook2.default.name,\n_drawbook4.default.name]).\n\nconstant('server', { url: 'http://localhost:5000/api/' }).\ncontroller('DrawController', _DrawController2.default)\n\n// Services, factories\n.factory('UserService', _UserService2.default).\nfactory('ImageService', _ImageService2.default).\nfactory('CommentService', _CommentService2.default).\nfactory('LikeService', _LikeService2.default)\n\n// Directives\n.directive('blur', _blur2.default)\n\n// Routes config\n.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', function ($stateProvider, $urlRouterProvider, $locationProvider) {\n    $locationProvider.html5Mode(true);\n    $stateProvider.\n    state('draw', {\n        url: '/draw',\n        templateUrl: '/app/draw/draw.tpl.html',\n        controller: _DrawController2.default,\n        controllerAs: 'vm' });\n\n    $urlRouterProvider.otherwise(\"/\");\n}])\n\n// Auth config\n.config(['$authProvider', 'server', function ($authProvider, server) {\n    $authProvider.baseUrl = server.url;\n    $authProvider.signupUrl = '/users/register';\n    $authProvider.loginUrl = '/users/login';\n}]).\n\nfactory('allHttpInterceptor', function (bsLoadingOverlayHttpInterceptorFactoryFactory) {return bsLoadingOverlayHttpInterceptorFactoryFactory();}).\nconfig(['$httpProvider', function ($httpProvider) {\n    $httpProvider.interceptors.push('allHttpInterceptor');\n}]).\n\nrun(function (bsLoadingOverlayService) {\n    bsLoadingOverlayService.setGlobalConfig({\n        delay: 500,\n        activeClass: undefined,\n        templateUrl: 'loading-overlay-template.html',\n        templateOptions: undefined });\n\n});\n\n},{\"./app/common/drawbook.common\":6,\"./app/directives/blur\":7,\"./app/draw/DrawController\":8,\"./app/services/CommentService\":9,\"./app/services/ImageService\":10,\"./app/services/LikeService\":11,\"./app/services/UserService\":12,\"./app/user/drawbook.user\":16}],2:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nHomeController;HomeController.$inject = ['$auth', 'localStorageService', 'UserService']; /* @ngInject */function HomeController($auth, localStorageService, UserService) {\n    var vm = this;\n    vm.title = 'HomeController';\n    vm.user = localStorageService.get(\"currentUser\");\n\n    vm.isAuthenticated = isAuthenticated;\n    vm.logout = logout;\n\n    if (isAuthenticated()) init();\n\n    ////////////////////////////////////////////\n\n    function init() {\n        UserService.get().\n        then(function (res) {\n            vm.users = res;\n        });\n    }\n\n    function isAuthenticated() {\n        return $auth.isAuthenticated();\n    }\n\n    function logout() {\n        $auth.logout();\n        localStorageService.remove(\"currentUser\");\n    }\n}\n\n},{}],3:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nLoginController;LoginController.$inject = ['$state', '$auth', 'localStorageService']; /* @ngInject */function LoginController($state, $auth, localStorageService) {\n    var vm = this;\n\n    vm.title = 'LoginController';\n    vm.incorrectLogin = false;\n\n    vm.login = login;\n\n    //////////////////////////////////////\n\n    function login() {\n\n        var user = {\n            username: vm.user.name,\n            password: vm.user.password };\n\n\n        $auth.login(user).\n        then(function (res) {\n            localStorageService.set(\"currentUser\", res.data.user);\n            $state.go('home');\n        }).\n        catch(function (res) {\n            console.log('Error: ' + res);\n            vm.incorrectLogin = true;\n        });\n    }\n}\n\n},{}],4:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nProfileEditController;ProfileEditController.$inject = ['$state', 'localStorageService', 'UserService', 'Upload', 'server']; /* @ngInject */function ProfileEditController($state, localStorageService, UserService, Upload, server) {\n    var vm = this;\n    vm.title = 'ProfileEditController';\n    vm.genders = ['Male', 'Female'];\n\n    vm.edit = edit;\n    vm.upload = upload;\n\n    var username = localStorageService.get('currentUser').username;\n\n    init();\n\n    ////////////////////////////////////////////\n\n    function init() {\n        UserService.get(username).\n        then(function (res) {\n            vm.user = res.user;\n            vm.avatarPath = vm.user.avatarPath || 'img/default-avatar.jpg';\n        }).\n        catch(function (res) {});\n    }\n\n    function edit() {\n        UserService.update(vm.user);\n        upload();\n        $state.go('home');\n    }\n\n    function upload() {\n        var file = vm.file;\n\n        if (file) {\n\n            file.upload = Upload.upload({\n                url: server.url + '/users/' + vm.user.username + '/images/avatar',\n                data: { file: file } });\n\n\n            file.upload.then(function (res) {\n                file.result = res;\n            }, function (res) {\n                if (res.status > 0) {\n                    vm.errorMsg = res.status + ': ' + res.data;\n                }\n            });\n        }\n    }\n}\n\n},{}],5:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nRegisterController;RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService']; /* @ngInject */function RegisterController($state, $auth, UserService, localStorageService) {\n    var vm = this;\n\n    vm.title = 'RegisterController';\n    vm.genders = ['Male', 'Female'];\n    vm.takenUsername = false;\n\n    vm.checkUsername = checkUsername;\n    vm.register = register;\n\n    ////////////////////////////////////////////\n\n    function checkUsername() {\n        UserService.get(vm.user.username).\n        then(function (res) {\n            vm.takenUsername = res.user != null;\n        }).\n        catch(function (res) {});\n    }\n\n    function register() {\n        var user = {\n            username: vm.user.username,\n            password: vm.user.password,\n            firstName: vm.user.firstName,\n            lastName: vm.user.lastName,\n            age: vm.user.age,\n            gender: vm.user.gender };\n\n        $auth.signup(user).\n        then(function (res) {\n            localStorageService.set(\"currentUser\", res.data.user);\n            $auth.login(user).\n            then(function (res) {\n                $state.go('home');\n            }).\n            catch(function (res) {});\n        }).\n        catch(function (res) {});\n    }\n\n}\n\n},{}],6:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });\n\nvar _HomeController = require('./controller/HomeController');var _HomeController2 = _interopRequireDefault(_HomeController);\nvar _LoginController = require('./controller/LoginController');var _LoginController2 = _interopRequireDefault(_LoginController);\nvar _RegisterController = require('./controller/RegisterController');var _RegisterController2 = _interopRequireDefault(_RegisterController);\nvar _ProfileEditController = require('./controller/ProfileEditController');var _ProfileEditController2 = _interopRequireDefault(_ProfileEditController);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}exports.default =\n\nangular.module('drawbook.common', []).\ncontroller(_HomeController2.default).\ncontroller(_LoginController2.default).\ncontroller(_RegisterController2.default).\ncontroller(_ProfileEditController2.default).\nconfig(['$stateProvider', function ($stateProvider) {\n    $stateProvider.state('home', {\n        url: '/',\n        templateUrl: '/app/common/tpl/home.tpl.html',\n        controller: _HomeController2.default,\n        controllerAs: 'vm' }).\n\n    state('register', {\n        url: '/register',\n        templateUrl: '/app/common/tpl/register.tpl.html',\n        controller: _RegisterController2.default,\n        controllerAs: 'vm' }).\n\n    state('login', {\n        url: '/login',\n        templateUrl: '/app/common/tpl/login.tpl.html',\n        controller: _LoginController2.default,\n        controllerAs: 'vm' }).\n\n    state('edit', {\n        url: '/edit',\n        templateUrl: '/app/common/tpl/profile-edit.tpl.html',\n        controller: _ProfileEditController2.default,\n        controllerAs: 'vm' });\n\n}]);\n\n},{\"./controller/HomeController\":2,\"./controller/LoginController\":3,\"./controller/ProfileEditController\":4,\"./controller/RegisterController\":5}],7:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = blur;function blur() {\n    return {\n        restrict: 'A',\n        link: function link(scope, element) {\n            element.on('click', function () {element.blur();});\n        } };\n\n}\n\n},{}],8:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nDrawController;DrawController.$inject = ['$state', 'localStorageService', 'ImageService']; /* @ngInject */function DrawController($state, localStorageService, ImageService) {\n    var vm = this;\n    vm.title = 'DrawController';\n\n    vm.saveImage = saveImage;\n\n    ///////////////////////////////\n\n    function saveImage() {\n\n        var tmpcanvas = $('<canvas>').attr({ width: 600, height: 600 });\n        var tmpcontext = tmpcanvas[0].getContext('2d');\n        var arr = [];\n\n        $('.canvas').each(function () {\n            arr.push({\n                canvas: $(this),\n                zindex: parseInt($(this).css(\"z-index\")) });\n\n        });\n\n        arr.sort(function (a, b) {return a.zindex - b.zindex;});\n\n        for (var i = 0; i < arr.length; i++) {\n            tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);\n        }\n\n        var img = tmpcanvas[0].toDataURL();\n        var username = localStorageService.get(\"currentUser\").username;\n\n        ImageService.post(username, img, vm.imagetitle || 'Untitled').\n        then(function (res) {\n            $state.go('home');\n        }).\n        catch(function (res) {});\n    }\n\n}\n\n},{}],9:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nCommentService;CommentService.$inject = ['$q', '$http', 'server']; /* @ngInject */function CommentService($q, $http, server) {\n    return {\n        post: function post(username, imageid, comment, currentUser) {return $http.post(server.url + '/users/' + username + '/images/' + imageid + '/comments/', {\n                author: currentUser.username,\n                authorAvatar: currentUser.avatarPath,\n                comment: comment }).\n            then(function (res) {return res.data;});},\n        get: function get(user, imageid) {return $http.get(server.url + '/users/' + user.username + '/images/' + imageid).then(function (res) {return res;});},\n        delete: function _delete(user, imageid, commentid) {return $http.delete(server.url + '/users/' + user.username + '/images/' + imageid + '/comments/' + commentid).then(function (res) {return res;});} };\n\n}\n\n},{}],10:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nImageService;ImageService.$inject = ['$http', 'server']; /* @ngInject */function ImageService($http, server) {\n    return {\n        get: function get(username, id) {return $http({\n                method: 'GET',\n                url: server.url + 'users/' + username + '/images/' + id,\n                headers: { 'Content-Type': 'images/png' } }).\n            then(function (res) {return { data: res, id: id };});},\n\n        post: function post(username, img, title) {return $http.post(server.url + 'users/' + username + '/images/', {\n                \"title\": title,\n                \"image\": img }).\n            then(function (res) {return res.data;});},\n\n        delete: function _delete(id, username) {return $http.delete(server.url + 'users/' + username + '/images/' + id).then(function (res) {return res.data;});} };\n\n}\n\n},{}],11:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nLikeService;LikeService.$inject = ['$q', '$http', 'server']; /* @ngInject */function LikeService($q, $http, server) {\n    return {\n        post: function post(username, id, author) {return $http.post(server.url + '/users/' + username + '/images/' + id + '/likes/', { author: author }).then(function (res) {return res;});},\n        get: function get(username, id) {return $http.get(server.url + '/users/' + username + '/images/' + id + '/likes/').then(function (res) {return res;});},\n        delete: function _delete(username, id, author) {return $http.delete(server.url + '/users/' + username + '/images/' + id + '/likes/' + author).then(function (res) {return res;});} };\n\n}\n\n},{}],12:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nUserService;UserService.$inject = ['$http', 'server']; /* @ngInject */function UserService($http, server) {\n    return {\n        get: function get(username) {\n            var url = username ? server.url + 'users/' + username : server.url + 'users/';\n            return $http.get(url).then(function (res) {return res.data;});\n        },\n        update: function update(user) {return $http.patch(server.url + 'users/' + user.username, { user: user }).\n            then(function (res) {return res.data;});} };\n\n}\n\n},{}],13:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nUserController;UserController.$inject = ['$stateParams', 'UserService', 'ImageService', 'user']; /* @ngInject */function UserController($stateParams, UserService, ImageService, user) {\n    var vm = this;\n    vm.title = 'UserController';\n    vm.images = [];\n    vm.user = user.user;\n\n    ////////////////\n\n    /*function deleteImage(_id, index) {\r\n        ImageService.delete(_id, vm.user.username)\r\n            .then(function (res){\r\n                delete vm.user.images[index];\r\n            })\r\n            .catch(function (res){});\r\n    }*/\n}\n\n},{}],14:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nUserGalleryController;UserGalleryController.$inject = ['user', 'ImageService', 'localStorageService']; /* @ngInject */function UserGalleryController(user, ImageService, localStorageService) {\n    var vm = this;\n    vm.title = 'UserGalleryController';\n    vm.user = user.user;\n    vm.images = [];\n\n    var limit = 12;\n\n    vm.loadMore = loadMore;\n    vm.deleteImage = deleteImage;\n\n    init();\n\n    ////////////////////\n\n    function init() {\n        vm.currentUser = localStorageService.get('currentUser');\n\n        vm.loaded = vm.user.images.length < limit ? vm.user.images.length : limit;\n        for (var i = 0; i < vm.loaded; i++) {\n            ImageService.get(vm.user.username, vm.user.images[i]._id).\n            then(function (res) {\n                vm.images.push(res.data.data);\n            }).\n            catch(function (res) {});\n        }\n    }\n\n    function loadMore() {\n        vm.current = vm.loaded;\n        vm.loaded = vm.user.images.length < vm.loaded + limit ? vm.user.images.length : vm.loaded + limit;\n\n        for (var i = vm.current; i < vm.loaded; i++) {\n            ImageService.get(vm.user.username, vm.user.images[i]._id).\n            then(function (res) {\n                vm.images.push(res.data.data);\n            }).\n            catch(function (res) {});\n        }\n    }\n\n    function deleteImage(id, index) {\n        console.log('images:' + vm.images);\n        console.log(index);\n        ImageService.delete(id, vm.user.username).\n        then(function (res) {vm.images.splice(index, 1);}).\n        catch(function (res) {});\n    }\n}\n\n},{}],15:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nUserImageController;UserImageController.$inject = ['$stateParams', 'ImageService', 'user', '$state', '$scope', 'CommentService', 'localStorageService', 'LikeService']; /* @ngInject */function UserImageController($stateParams, ImageService, user, $state, $scope, CommentService, localStorageService, LikeService) {\n\n    var vm = this;\n    vm.title = 'UserImageController';\n    vm.user = user.user;\n    vm.index = $stateParams.index;\n    vm.navigate = navigate;\n    vm.addComment = addComment;\n    vm.deleteComment = deleteComment;\n    vm.addLike = addLike;\n    vm.removeLike = removeLike;\n    vm.isLiked = isLiked;\n\n    vm.likes = [];\n\n    init();\n\n    ////////////////////////////////////\n\n    function init() {\n\n        vm.currentUser = localStorageService.get('currentUser');\n\n        $(window).on('click', function (event) {\n            if ($(event.target).is('.modal')) {\n                $state.go('user.gallery', { user: vm.username }).\n                then(function () {\n                    $scope.$hide();\n                });\n            }\n        });\n\n        if (vm.index === undefined || vm.index === null) {\n            vm.index = vm.user.images.map(function (e) {return e._id;}).indexOf($stateParams.id);\n        }\n\n        if (vm.user.images.length == 1) {\n            vm.prev = vm.next = undefined;\n        } else if (vm.index == 0) {\n            vm.next = vm.user.images[vm.index + 1]._id;\n            vm.prev = undefined;\n        } else if (vm.index > 0 && vm.index < vm.user.images.length - 1) {\n            vm.prev = vm.user.images[vm.index - 1]._id;\n            vm.next = vm.user.images[vm.index + 1]._id;\n        } else if (vm.index == vm.user.images.length - 1) {\n            vm.prev = vm.user.images[vm.index - 1]._id;\n            vm.next = undefined;\n        }\n\n        ImageService.get(vm.user.username, $stateParams.id).\n        then(function (res) {\n            vm.image = res.data.data;\n            vm.comments = vm.image.image.comments;\n        }).\n        catch(function (res) {});\n        loadLikes();\n    }\n\n    function loadComments() {\n        CommentService.get(vm.user.username, $stateParams.id).\n        then(function (res) {\n            vm.comments = res.image.comments;\n        }).\n        catch(function (res) {});\n    }\n\n    function loadLikes() {\n        LikeService.get(vm.user.username, $stateParams.id).\n        then(function (res) {\n            vm.likes = res.likes;\n        }).\n        catch(function (res) {});\n    }\n\n    function navigate(keyCode) {\n        if (vm.prev != undefined && keyCode == 37) {// left\n            $state.go('user.gallery.image', { id: vm.prev, index: vm.index - 1 }).\n            then(function () {\n                $scope.$hide();\n            });\n        } else if (vm.next != undefined && keyCode == 39) {// right\n            $state.go('user.gallery.image', { id: vm.next, index: vm.index + 1 }).\n            then(function () {\n                $scope.$hide();\n            });\n        } else if (keyCode == 27) {// escape\n            $state.go('user.gallery', { user: vm.username }).\n            then(function () {\n                $scope.$hide();\n            });\n        }\n    }\n\n\n    function addComment() {\n        CommentService.post(vm.user.username, $stateParams.id, vm.comment, vm.currentUser).\n        then(function (res) {\n            vm.comment = \"\";\n            loadComments();\n        }).\n        catch(function (res) {});\n    }\n\n    function deleteComment(commentid) {\n        CommentService.delete(vm.user.username, $stateParams.id, commentid).\n        then(function (res) {\n            loadComments();\n        }).\n        catch(function (res) {});\n    }\n\n    function addLike() {\n        LikeService.post(vm.user.username, $stateParams.id, vm.currentUser.username).\n        then(function (res) {\n            vm.likes.push(vm.currentUser.username);\n        }).\n        catch(function (res) {});\n    }\n\n    function removeLike() {\n        LikeService.delete(vm.user.username, $stateParams.id, vm.currentUser.username).\n        then(function (res) {\n            vm.likes.splice(vm.likes.indexOf(vm.currentUser.username), 1);\n        }).\n        catch(function (res) {});\n    }\n\n    function isLiked() {\n        return vm.likes.find(function (x) {return x == vm.currentUser.username;}) != undefined;\n    }\n}\n\n},{}],16:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });\n\nvar _UserController = require('./controller/UserController');var _UserController2 = _interopRequireDefault(_UserController);\nvar _UserGalleryController = require('./controller/UserGalleryController');var _UserGalleryController2 = _interopRequireDefault(_UserGalleryController);\nvar _UserImageController = require('./controller/UserImageController');var _UserImageController2 = _interopRequireDefault(_UserImageController);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}exports.default =\n\nangular.module('drawbook.user', [])\n\n// Controllers\n.controller(_UserController2.default).\ncontroller(_UserGalleryController2.default).\ncontroller(_UserImageController2.default)\n// States config\n.config(['$stateProvider', function ($stateProvider) {\n    $stateProvider.\n    state('user', {\n        abstract: true,\n        url: '/:username',\n        templateUrl: '/app/user/tpl/user.tpl.html',\n        controller: _UserController2.default,\n        controllerAs: 'vm',\n        resolve: {\n            user: ['$stateParams', 'UserService', function ($stateParams, UserService) {return UserService.get($stateParams.username);}] } }).\n\n\n\n    state('user.gallery', {\n        url: '/',\n        templateUrl: '/app/user/tpl/user.gallery.tpl.html',\n        controller: _UserGalleryController2.default,\n        controllerAs: 'vm' }).\n\n    state('user.gallery.image', {\n        url: 'image/:id',\n        params: { index: null },\n        onEnter: ['$modal', '$state', 'user', '$stateParams', function ($modal, $state, _user) {\n            $modal({\n                templateUrl: '/app/user/tpl/user.image.tpl.html',\n                controller: _UserImageController2.default,\n                controllerAs: 'vm',\n                resolve: {\n                    user: function user() {return _user;} },\n\n                container: 'body',\n                animation: 'am-fade',\n                backdropAnimation: 'backdrop-anim',\n                position: 'center',\n                keyboard: false,\n                backdrop: false });\n\n        }] });\n\n}]);\n\n},{\"./controller/UserController\":13,\"./controller/UserGalleryController\":14,\"./controller/UserImageController\":15}]},{},[1])\n\n","'use strict';\r\n\r\nHomeController.$inject = ['$auth', 'localStorageService', 'UserService'];\r\n\r\n/* @ngInject */\r\nexport default function HomeController($auth, localStorageService, UserService) {\r\n    const vm = this;\r\n    vm.title = 'HomeController';\r\n    vm.user = localStorageService.get(\"currentUser\");\r\n\r\n    vm.isAuthenticated = isAuthenticated;\r\n    vm.logout = logout;\r\n\r\n    if (isAuthenticated()) init();\r\n\r\n    ////////////////////////////////////////////\r\n\r\n    function init() {\r\n        UserService.get()\r\n            .then(res => {\r\n                vm.users = res;\r\n            })\r\n    }\r\n\r\n    function isAuthenticated() {\r\n        return $auth.isAuthenticated();\r\n    }\r\n\r\n    function logout() {\r\n        $auth.logout();\r\n        localStorageService.remove(\"currentUser\");\r\n    }\r\n}\r\n\r\n\r\n","'use strict';\r\n\r\nLoginController.$inject = ['$state', '$auth', 'localStorageService'];\r\n\r\n/* @ngInject */\r\nexport default function LoginController($state, $auth, localStorageService) {\r\n    const vm = this;\r\n\r\n    vm.title = 'LoginController';\r\n    vm.incorrectLogin = false;\r\n\r\n    vm.login = login;\r\n\r\n    //////////////////////////////////////\r\n\r\n    function login() {\r\n\r\n        let user = {\r\n            username: vm.user.name,\r\n            password: vm.user.password\r\n        };\r\n\r\n        $auth.login(user)\r\n            .then(function(res) {\r\n                localStorageService.set(\"currentUser\", res.data.user);\r\n                $state.go('home');\r\n            })\r\n            .catch(function(res) {\r\n                console.log('Error: ' + res);\r\n                vm.incorrectLogin = true;\r\n            });\r\n    }\r\n}\r\n\r\n","'use strict';\r\n\r\nProfileEditController.$inject = ['$state', 'localStorageService', 'UserService', 'Upload', 'server'];\r\n\r\n/* @ngInject */\r\nexport default function ProfileEditController($state, localStorageService, UserService, Upload, server) {\r\n    const vm = this;\r\n    vm.title = 'ProfileEditController';\r\n    vm.genders = ['Male', 'Female'];\r\n\r\n    vm.edit = edit;\r\n    vm.upload = upload;\r\n\r\n    const username = localStorageService.get('currentUser').username;\r\n\r\n    init();\r\n\r\n    ////////////////////////////////////////////\r\n\r\n    function init() {\r\n        UserService.get(username)\r\n            .then(res => {\r\n                vm.user = res.user;\r\n                vm.avatarPath = vm.user.avatarPath || 'img/default-avatar.jpg';\r\n            })\r\n            .catch(res => {});\r\n    }\r\n\r\n    function edit() {\r\n        UserService.update(vm.user);\r\n        upload();\r\n        $state.go('home');\r\n    }\r\n\r\n    function upload() {\r\n        const file = vm.file;\r\n\r\n        if (file) {\r\n\r\n            file.upload = Upload.upload({\r\n                url: `${server.url}/users/${vm.user.username}/images/avatar`,\r\n                data: {file}\r\n            });\r\n\r\n            file.upload.then(res => {\r\n                file.result = res;\r\n            }, res => {\r\n                if (res.status > 0) {\r\n                    vm.errorMsg = `${res.status}: ${res.data}`;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","'use strict';\r\n\r\nRegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\r\n\r\n/* @ngInject */\r\nexport default function RegisterController($state, $auth, UserService, localStorageService) {\r\n    const vm = this;\r\n\r\n    vm.title = 'RegisterController';\r\n    vm.genders = ['Male', 'Female'];\r\n    vm.takenUsername = false;\r\n\r\n    vm.checkUsername = checkUsername;\r\n    vm.register = register;\r\n\r\n    ////////////////////////////////////////////\r\n\r\n    function checkUsername() {\r\n        UserService.get(vm.user.username)\r\n            .then(res => {\r\n                vm.takenUsername = res.user != null;\r\n            })\r\n            .catch(res => {});\r\n    }\r\n\r\n    function register() {\r\n        const user = {\r\n            username: vm.user.username,\r\n            password: vm.user.password,\r\n            firstName: vm.user.firstName,\r\n            lastName: vm.user.lastName,\r\n            age: vm.user.age,\r\n            gender: vm.user.gender\r\n        };\r\n        $auth.signup(user)\r\n            .then(res => {\r\n                localStorageService.set(\"currentUser\", res.data.user);\r\n                $auth.login(user)\r\n                    .then(res => {\r\n                        $state.go('home');\r\n                    })\r\n                    .catch(res =>{});\r\n            })\r\n            .catch(res =>{});\r\n    }\r\n\r\n}\r\n\r\n","'use strict';\r\n\r\nimport HomeController from './controller/HomeController';\r\nimport LoginController from './controller/LoginController';\r\nimport RegisterController from './controller/RegisterController';\r\nimport ProfileEditController from './controller/ProfileEditController';\r\n\r\nexport default angular.module('drawbook.common', [])\r\n        .controller(HomeController)\r\n        .controller(LoginController)\r\n        .controller(RegisterController)\r\n        .controller(ProfileEditController)\r\n        .config(['$stateProvider', ($stateProvider) => {\r\n            $stateProvider.state('home', {\r\n                url: '/',\r\n                templateUrl: '/app/common/tpl/home.tpl.html',\r\n                controller: HomeController,\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('register', {\r\n                url: '/register',\r\n                templateUrl: '/app/common/tpl/register.tpl.html',\r\n                controller: RegisterController,\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('login', {\r\n                url: '/login',\r\n                templateUrl: '/app/common/tpl/login.tpl.html',\r\n                controller: LoginController,\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('edit', {\r\n                url: '/edit',\r\n                templateUrl: '/app/common/tpl/profile-edit.tpl.html',\r\n                controller: ProfileEditController,\r\n                controllerAs: 'vm'\r\n            });\r\n        }]);","export default function blur() {\r\n    return {\r\n        restrict: 'A',\r\n        link: (scope, element) => {\r\n            element.on('click', () => {element.blur();});\r\n        }\r\n    }\r\n}\r\n","'use strict';\r\n\r\nDrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\r\n\r\n/* @ngInject */\r\nexport default function DrawController($state, localStorageService, ImageService) {\r\n    const vm = this;\r\n    vm.title = 'DrawController';\r\n\r\n    vm.saveImage = saveImage;\r\n\r\n    ///////////////////////////////\r\n\r\n    function saveImage() {\r\n\r\n        let tmpcanvas = $('<canvas>').attr({width: 600, height: 600});\r\n        let tmpcontext = tmpcanvas[0].getContext('2d');\r\n        let arr = [];\r\n\r\n        $('.canvas').each(function () {\r\n            arr.push({\r\n                canvas: $(this),\r\n                zindex: parseInt($(this).css(\"z-index\"))\r\n            })\r\n        });\r\n\r\n        arr.sort((a, b) => a.zindex - b.zindex);\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);\r\n        }\r\n\r\n        let img = tmpcanvas[0].toDataURL();\r\n        let username = localStorageService.get(\"currentUser\").username;\r\n\r\n        ImageService.post(username, img, (vm.imagetitle || 'Untitled'))\r\n            .then(res => {\r\n                $state.go('home');\r\n            })\r\n            .catch(res => {});\r\n    }\r\n\r\n}\r\n","'use strict';\r\n\r\nCommentService.$inject = ['$q', '$http', 'server'];\r\n\r\n/* @ngInject */\r\nexport default function CommentService($q, $http, server) {\r\n    return {\r\n        post: (username, imageid, comment, currentUser) => $http.post(server.url + '/users/' + username + '/images/' + imageid + '/comments/', {\r\n            author: currentUser.username,\r\n            authorAvatar: currentUser.avatarPath,\r\n            comment: comment\r\n        }).then(res => res.data),\r\n        get: (user, imageid) => $http.get(server.url + '/users/' + user.username + '/images/' + imageid).then(res => res),\r\n        delete: (user, imageid, commentid) => $http.delete(server.url + '/users/' + user.username + '/images/' + imageid + '/comments/' + commentid).then(res => res)\r\n    };\r\n}\r\n\r\n","'use strict';\r\n\r\nImageService.$inject = ['$http', 'server'];\r\n\r\n/* @ngInject */\r\nexport default function ImageService($http, server) {\r\n    return {\r\n        get: (username, id) => $http({\r\n            method: 'GET',\r\n            url: server.url + 'users/' + username + '/images/' + id,\r\n            headers: {'Content-Type': 'images/png'}\r\n        }).then(res => ({data: res, id: id})),\r\n\r\n        post: (username, img, title) => $http.post(server.url + 'users/' + username + '/images/', {\r\n            \"title\": title,\r\n            \"image\": img\r\n        }).then(res => res.data),\r\n\r\n        delete: (id, username) => $http.delete(server.url + 'users/' + username + '/images/' + id).then(res => res.data)\r\n    };\r\n}\r\n","'use strict';\r\n\r\nLikeService.$inject = ['$q', '$http', 'server'];\r\n\r\n/* @ngInject */\r\nexport default function LikeService($q, $http, server) {\r\n    return {\r\n        post: (username, id, author) => $http.post(server.url + '/users/' + username + '/images/' + id + '/likes/', {author: author}).then(res => res),\r\n        get: (username, id) => $http.get(server.url + '/users/' + username + '/images/' + id + '/likes/').then(res => res),\r\n        delete: (username, id, author) => $http.delete(server.url + '/users/' + username + '/images/' + id + '/likes/' + author).then(res => res)\r\n    }\r\n}\r\n","'use strict';\r\n\r\nUserService.$inject = ['$http', 'server'];\r\n\r\n/* @ngInject */\r\nexport default function UserService($http, server) {\r\n    return {\r\n        get: (username) => {\r\n            var url = username ? server.url + 'users/' + username : server.url + 'users/';\r\n            return $http.get(url).then(res => res.data);\r\n        },\r\n        update: (user) => $http.patch(server.url + 'users/' + user.username, {user: user})\r\n                            .then(res => res.data)\r\n    };\r\n}\r\n","'use strict';\r\n\r\nUserController.$inject = ['$stateParams', 'UserService', 'ImageService', 'user'];\r\n\r\n/* @ngInject */\r\nexport default function UserController($stateParams, UserService, ImageService, user) {\r\n    var vm = this;\r\n    vm.title = 'UserController';\r\n    vm.images = [];\r\n    vm.user = user.user;\r\n\r\n    ////////////////\r\n\r\n    /*function deleteImage(_id, index) {\r\n        ImageService.delete(_id, vm.user.username)\r\n            .then(function (res){\r\n                delete vm.user.images[index];\r\n            })\r\n            .catch(function (res){});\r\n    }*/\r\n}\r\n\r\n\r\n\r\n","'use strict';\r\n\r\nUserGalleryController.$inject = ['user', 'ImageService', 'localStorageService'];\r\n\r\n/* @ngInject */\r\nexport default function UserGalleryController(user, ImageService, localStorageService) {\r\n    const vm = this;\r\n    vm.title = 'UserGalleryController';\r\n    vm.user = user.user;\r\n    vm.images = [];\r\n\r\n    const limit = 12;\r\n\r\n    vm.loadMore = loadMore;\r\n    vm.deleteImage = deleteImage;\r\n\r\n    init();\r\n\r\n    ////////////////////\r\n\r\n    function init(){\r\n        vm.currentUser = localStorageService.get('currentUser');\r\n\r\n        vm.loaded = vm.user.images.length < limit ? vm.user.images.length : limit;\r\n        for (var i = 0; i < vm.loaded; i++) {\r\n            ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                .then(res => {\r\n                    vm.images.push(res.data.data);\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n    }\r\n\r\n    function loadMore() {\r\n        vm.current = vm.loaded;\r\n        vm.loaded = vm.user.images.length < vm.loaded + limit ? vm.user.images.length : vm.loaded + limit;\r\n\r\n         for (var i = vm.current; i < vm.loaded; i++) {\r\n            ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                .then(function (res) {\r\n                    vm.images.push(res.data.data);\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n    }\r\n\r\n    function deleteImage(id, index) {\r\n        console.log('images:' + vm.images);\r\n        console.log(index);\r\n        ImageService.delete(id, vm.user.username)\r\n            .then(res => {vm.images.splice(index, 1);})\r\n            .catch(res => {})\r\n    }\r\n}","'use strict';\r\n\r\nUserImageController.$inject = ['$stateParams', 'ImageService', 'user', '$state', '$scope', 'CommentService', 'localStorageService', 'LikeService'];\r\n\r\n/* @ngInject */\r\nexport default function UserImageController($stateParams, ImageService, user, $state, $scope, CommentService, localStorageService, LikeService) {\r\n\r\n    const vm = this;\r\n    vm.title = 'UserImageController';\r\n    vm.user = user.user;\r\n    vm.index = $stateParams.index;\r\n    vm.navigate = navigate;\r\n    vm.addComment = addComment;\r\n    vm.deleteComment = deleteComment;\r\n    vm.addLike = addLike;\r\n    vm.removeLike = removeLike;\r\n    vm.isLiked = isLiked;\r\n\r\n    vm.likes = [];\r\n\r\n    init();\r\n\r\n    ////////////////////////////////////\r\n\r\n    function init() {\r\n\r\n        vm.currentUser = localStorageService.get('currentUser');\r\n\r\n        $(window).on('click', function(event) {\r\n            if ($(event.target).is('.modal')) {\r\n                $state.go('user.gallery', {user: vm.username})\r\n                    .then(function() {\r\n                        $scope.$hide();\r\n                    });\r\n            }\r\n        });\r\n\r\n        if (vm.index === undefined || vm.index === null) {\r\n            vm.index = vm.user.images.map(function (e) {return e._id}).indexOf($stateParams.id);\r\n        }\r\n\r\n        if (vm.user.images.length == 1) {\r\n            vm.prev = vm.next = undefined;\r\n        } else if (vm.index == 0) {\r\n            vm.next = vm.user.images[vm.index+1]._id;\r\n            vm.prev = undefined;\r\n        } else if (vm.index > 0 && vm.index < vm.user.images.length-1) {\r\n            vm.prev = vm.user.images[vm.index-1]._id;\r\n            vm.next = vm.user.images[vm.index+1]._id;\r\n        } else if (vm.index == vm.user.images.length-1) {\r\n            vm.prev = vm.user.images[vm.index-1]._id;\r\n            vm.next = undefined;\r\n        }\r\n\r\n        ImageService.get(vm.user.username, $stateParams.id)\r\n            .then(function (res) {\r\n                vm.image = res.data.data;\r\n                vm.comments = vm.image.image.comments;\r\n            })\r\n            .catch(function (res) {});\r\n        loadLikes();\r\n    }\r\n\r\n    function loadComments() {\r\n        CommentService.get(vm.user.username, $stateParams.id)\r\n            .then(function (res) {\r\n                vm.comments = res.image.comments;\r\n            })\r\n            .catch(function (res) {});\r\n    }\r\n\r\n    function loadLikes() {\r\n        LikeService.get(vm.user.username, $stateParams.id)\r\n            .then(res => {\r\n                vm.likes = res.likes;\r\n            })\r\n            .catch(res=>{});\r\n    }\r\n\r\n    function navigate(keyCode) {\r\n        if (vm.prev != undefined && keyCode == 37) { // left\r\n            $state.go('user.gallery.image', {id: vm.prev, index: vm.index-1})\r\n                .then(function() {\r\n                    $scope.$hide();\r\n                });\r\n        } else if (vm.next != undefined && keyCode == 39) { // right\r\n            $state.go('user.gallery.image', {id: vm.next, index: vm.index+1})\r\n                .then(function() {\r\n                    $scope.$hide();\r\n                });\r\n        } else if (keyCode == 27) { // escape\r\n            $state.go('user.gallery', {user: vm.username})\r\n                .then(function() {\r\n                    $scope.$hide();\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    function addComment() {\r\n        CommentService.post(vm.user.username, $stateParams.id, vm.comment, vm.currentUser)\r\n            .then(function (res) {\r\n                vm.comment = \"\";\r\n                loadComments();\r\n            })\r\n            .catch(function (res) {});\r\n    }\r\n\r\n    function deleteComment(commentid) {\r\n        CommentService.delete(vm.user.username, $stateParams.id, commentid)\r\n            .then(res => {\r\n                loadComments();\r\n            })\r\n            .catch(res=>{});\r\n    }\r\n\r\n    function addLike() {\r\n        LikeService.post(vm.user.username, $stateParams.id, vm.currentUser.username)\r\n            .then(res=> {\r\n                vm.likes.push(vm.currentUser.username);\r\n            })\r\n            .catch(res=> {});\r\n    }\r\n    \r\n    function removeLike() {\r\n        LikeService.delete(vm.user.username, $stateParams.id, vm.currentUser.username)\r\n            .then(res => {\r\n                vm.likes.splice(vm.likes.indexOf(vm.currentUser.username), 1);\r\n            })\r\n            .catch(res => {});\r\n    }\r\n\r\n    function isLiked() {\r\n        return vm.likes.find(x => x == vm.currentUser.username) != undefined;\r\n    }\r\n}","'use strict';\r\n\r\nimport UserController from './controller/UserController';\r\nimport UserGalleryController from './controller/UserGalleryController';\r\nimport UserImageController from './controller/UserImageController';\r\n\r\nexport default angular.module('drawbook.user', [])\r\n\r\n        // Controllers\r\n        .controller(UserController)\r\n        .controller(UserGalleryController)\r\n        .controller(UserImageController)\r\n        // States config\r\n        .config(['$stateProvider', ($stateProvider) => {\r\n            $stateProvider\r\n                .state('user', {\r\n                    abstract: true,\r\n                    url: '/:username',\r\n                    templateUrl: '/app/user/tpl/user.tpl.html',\r\n                    controller: UserController,\r\n                    controllerAs: 'vm',\r\n                    resolve: {\r\n                        user: ['$stateParams', 'UserService', ($stateParams, UserService) => UserService.get($stateParams.username)\r\n                        ]\r\n                    }\r\n                })\r\n                .state('user.gallery', {\r\n                    url: '/',\r\n                    templateUrl: '/app/user/tpl/user.gallery.tpl.html',\r\n                    controller: UserGalleryController,\r\n                    controllerAs: 'vm'\r\n                })\r\n                .state('user.gallery.image', {\r\n                    url: 'image/:id',\r\n                    params: {index: null},\r\n                    onEnter: ['$modal', '$state', 'user', '$stateParams', ($modal, $state, user) => {\r\n                        $modal({\r\n                            templateUrl: '/app/user/tpl/user.image.tpl.html',\r\n                            controller: UserImageController,\r\n                            controllerAs: 'vm',\r\n                            resolve: {\r\n                                user: () => user\r\n                            },\r\n                            container: 'body',\r\n                            animation: 'am-fade',\r\n                            backdropAnimation: 'backdrop-anim',\r\n                            position: 'center',\r\n                            keyboard: false,\r\n                            backdrop: false\r\n                        });\r\n                    }]\r\n                });\r\n        }]);\r\n"],"sourceRoot":"/source/"}