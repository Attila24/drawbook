{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/app.auth.js","main.min.js","app/app.constants.js","app/app.js","app/app.routes.js","app/app/common/HomeController.js","app/app/common/LoginController.js","app/app/common/ProfileEditController.js","app/app/common/RegisterController.js","app/app/common/UserController.js","app/app/draw/DrawController.js","app/app/services/ImageService.js","app/app/services/UserService.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","AuthConfig","$authProvider","server","baseUrl","url","signupUrl","loginUrl","$inject","2","3","angular","constant","factory","config","./app.auth","./app.constants","./app.routes","./app/services/ImageService","./app/services/UserService","4","DrawboookStates","$stateProvider","$urlRouterProvider","$locationProvider","state","templateUrl","controller","controllerAs","otherwise","html5Mode","./app/common/HomeController","./app/common/LoginController","./app/common/ProfileEditController","./app/common/RegisterController","./app/common/UserController","./app/draw/DrawController","5","HomeController","$auth","localStorageService","isAuthenticated","logout","remove","vm","this","title","user","get","6","LoginController","$state","login","username","name","password","then","res","set","data","go","console","log","incorrectLogin","7","ProfileEditController","UserService","init","edit","update","genders","8","RegisterController","checkUsername","takenUsername","register","firstName","lastName","age","gender","signup","9","UserController","$stateParams","ImageService","loadImages","images","_id","push","deleteImage","index","10","DrawController","saveImage","tmpcanvas","$","attr","width","height","tmpcontext","getContext","arr","each","canvas","zindex","parseInt","css","sort","b","drawImage","img","toDataURL","post","11","$q","$http","id","deferred","defer","method","headers","Content-Type","resolve","reject","promise","image","success","error","delete","12","patch"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function () {\r\n    'use strict';\r\n\r\n    AuthConfig.$inject = ['$authProvider', 'server'];\r\n\r\n\r\n    /* @ngInject */\r\n    function AuthConfig ($authProvider, server) {\r\n        $authProvider.baseUrl = server.url;\r\n\r\n        $authProvider.signupUrl = '/users/register';\r\n        $authProvider.loginUrl = '/users/login';\r\n    }\r\n\r\n    module.exports = AuthConfig;\r\n\r\n})();","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    AuthConfig.$inject = ['$authProvider', 'server'];\r\n\r\n\r\n    /* @ngInject */\r\n    function AuthConfig ($authProvider, server) {\r\n        $authProvider.baseUrl = server.url;\r\n\r\n        $authProvider.signupUrl = '/users/register';\r\n        $authProvider.loginUrl = '/users/login';\r\n    }\r\n\r\n    module.exports = AuthConfig;\r\n\r\n})();\n},{}],2:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    module.exports = {\r\n        url: 'http://localhost:5000/api/'\r\n    }\r\n\r\n})();\n},{}],3:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook', [\r\n            'ngAnimate',\r\n            'ui.router',\r\n            'mgcrea.ngStrap',\r\n            'satellizer',\r\n            'LocalStorageModule'\r\n        ])\r\n        .constant('server', require('./app.constants'))\r\n        .factory('UserService', require('./app/services/UserService'))\r\n        .factory('ImageService', require('./app/services/ImageService'))\r\n        .config(require('./app.routes'))\r\n        .config(require('./app.auth'));\r\n})();\n},{\"./app.auth\":1,\"./app.constants\":2,\"./app.routes\":4,\"./app/services/ImageService\":11,\"./app/services/UserService\":12}],4:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    DrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\r\n\r\n\r\n    /* @ngInject */\r\n    function DrawboookStates ($stateProvider, $urlRouterProvider, $locationProvider) {\r\n        $stateProvider.state('home', {\r\n                url: '/',\r\n                templateUrl: '/app/common/home.tpl.html',\r\n                controller: require('./app/common/HomeController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('register', {\r\n                url: '/register',\r\n                templateUrl: '/app/common/register.tpl.html',\r\n                controller: require('./app/common/RegisterController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('login', {\r\n                url: '/login',\r\n                templateUrl: '/app/common/login.tpl.html',\r\n                controller: require('./app/common/LoginController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('draw', {\r\n                url: '/draw',\r\n                templateUrl: '/app/draw/draw.tpl.html',\r\n                controller: require('./app/draw/DrawController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('edit', {\r\n                url: '/edit',\r\n                templateUrl: '/app/common/profile-edit.tpl.html',\r\n                controller: require('./app/common/ProfileEditController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user', {\r\n                url: '/:username',\r\n                templateUrl: '/app/common/user.tpl.html',\r\n                controller: require('./app/common/UserController'),\r\n                controllerAs: 'vm'\r\n            });\r\n\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        $locationProvider.html5Mode(true);\r\n\r\n    }\r\n\r\n    module.exports = DrawboookStates;\r\n\r\n})();\n},{\"./app/common/HomeController\":5,\"./app/common/LoginController\":6,\"./app/common/ProfileEditController\":7,\"./app/common/RegisterController\":8,\"./app/common/UserController\":9,\"./app/draw/DrawController\":10}],5:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function HomeController($auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'HomeController';\r\n\r\n        vm.user = localStorageService.get(\"currentUser\");\r\n\r\n        vm.isAuthenticated = isAuthenticated;\r\n        vm.logout = logout;\r\n        \r\n        function isAuthenticated() {\r\n            return $auth.isAuthenticated();\r\n        }\r\n\r\n        function logout() {\r\n            $auth.logout();\r\n            localStorageService.remove(\"currentUser\");\r\n        }\r\n    }\r\n\r\n    module.exports = HomeController;\r\n\r\n})();\r\n\r\n\n},{}],6:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$state', '$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function LoginController($state, $auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'LoginController';\r\n\r\n        vm.login = login;\r\n\r\n        vm.incorrectLogin = false;\r\n\r\n        function login() {\r\n\r\n            var user = {\r\n                username: vm.user.name,\r\n                password: vm.user.password\r\n            };\r\n\r\n            $auth.login(user)\r\n                .then(function(res) {\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    //$window.localStorage.currentUser = JSON.stringify(res.data.user);\r\n                    //$rootScope.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n                    $state.go('home');\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('error: ' + res);\r\n                    vm.incorrectLogin = true;\r\n                });\r\n        }\r\n    }\r\n    module.exports = LoginController;\r\n})();\r\n\r\n\n},{}],7:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('ProfileEditController', ProfileEditController);\r\n\r\n    ProfileEditController.$inject = ['$state', 'localStorageService', 'UserService'];\r\n\r\n    /* @ngInject */\r\n    function ProfileEditController($state, localStorageService, UserService) {\r\n        var vm = this;\r\n        vm.title = 'ProfileEditController';\r\n        vm.edit = edit;\r\n        vm.genders = ['Male', 'Female'];\r\n\r\n        ////////////////////////////////////////////\r\n\r\n        init();\r\n\r\n        function init() {\r\n            UserService.get(localStorageService.get('currentUser').username)\r\n                .then(function (res) {\r\n                    vm.user = res.user;\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function edit() {\r\n            UserService.update(vm.user);\r\n            $state.go('home');\r\n        }\r\n    }\r\n\r\n    module.exports = ProfileEditController;\r\n\r\n})();\r\n\r\n\n},{}],8:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function RegisterController($state, $auth, UserService, localStorageService) {\r\n        var vm = this;\r\n\r\n        vm.title = 'RegisterController';\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.takenUsername = false;\r\n\r\n        vm.checkUsername = checkUsername;\r\n        vm.register = register;\r\n\r\n        ////////////////\r\n\r\n        function checkUsername() {\r\n            UserService.get(vm.user.username)\r\n                .then(function (res) {\r\n                    vm.takenUsername = res.user != null;\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Server problem');\r\n                });\r\n        }\r\n\r\n        function register() {\r\n            var user = {\r\n                username: vm.user.username,\r\n                password: vm.user.password,\r\n                firstName: vm.user.firstName,\r\n                lastName: vm.user.lastName,\r\n                age: vm.user.age,\r\n                gender: vm.user.gender\r\n            };\r\n\r\n            $auth.signup(user)\r\n                .then(function(res) {\r\n                    console.log(res);\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    $auth.login(user)\r\n                        .then(function (res) {\r\n                            $state.go('home');\r\n                        })\r\n                        .catch(function (res) {\r\n                            console.log('Error ' + res);\r\n                        });\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Error ' + res);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    module.exports = RegisterController;\r\n\r\n})();\r\n\r\n\n},{}],9:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserController', UserController);\r\n\r\n    UserController.$inject = ['$stateParams', 'UserService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function UserController($stateParams, UserService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'UserController';\r\n        vm.images = [];\r\n\r\n        vm.init = init;\r\n        vm.deleteImage = deleteImage;\r\n\r\n        init();\r\n\r\n        ////////////////\r\n\r\n        function init() {\r\n            UserService.get($stateParams.username)\r\n                .then(function (res) {\r\n                    vm.user = res.user;\r\n                    console.log(vm.user);\r\n                    loadImages(vm.user.images);\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function loadImages(images) {\r\n            for (var i = 0; i < images.length; i++) {\r\n                ImageService.get(vm.user.username, images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push('data:image/png;base64,' + res.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n        }\r\n\r\n        function deleteImage(_id, index) {\r\n            ImageService.delete(_id, vm.user.username)\r\n                .then(function (res){\r\n                    delete vm.user.images[index];\r\n                })\r\n                .catch(function (res){});\r\n        }\r\n\r\n    }\r\n\r\n    module.exports = UserController;\r\n\r\n})();\r\n\r\n\n},{}],10:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('DrawController', DrawController);\r\n\r\n    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function DrawController($state, localStorageService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'DrawController';\r\n        \r\n        vm.saveImage = saveImage;\r\n        //var jq = $.noConflict();\r\n\r\n        ///////////////////////////////\r\n\r\n        function saveImage() {\r\n\r\n\r\n            var tmpcanvas = $('<canvas>').attr({width: 600, height: 600});\r\n            var tmpcontext = tmpcanvas[0].getContext(\"2d\");\r\n\r\n            var arr = [];\r\n\r\n            $('.canvas').each(function() {\r\n                arr.push({\r\n                    canvas: $(this),\r\n                    zindex: parseInt($(this).css(\"z-index\"))\r\n                })\r\n            });\r\n\r\n            arr.sort(function(a, b) {\r\n                return (a.zindex - b.zindex);\r\n            });\r\n\r\n            for (var i = 0; i < arr.length; i++) {\r\n                tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);\r\n            }\r\n\r\n            var img = tmpcanvas[0].toDataURL();\r\n            var username = localStorageService.get(\"currentUser\").username;\r\n\r\n            ImageService.post(username, img)\r\n                .then(function (res) {\r\n                    $state.go('home');\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = DrawController;\r\n\r\n})();\r\n\r\n\n},{}],11:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    ImageService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ImageService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username, id) {\r\n\r\n                var deferred = $q.defer();\r\n                $http({\r\n                        method: 'GET',\r\n                        url: server.url + 'users/' + username + '/images/' + id,\r\n                        headers: {'Content-Type': 'images/png'}\r\n                    })\r\n                    .then(function (data) {\r\n                        deferred.resolve(data);\r\n                    }, function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            post: function (username, img) {\r\n                var deferred = $q.defer();\r\n                $http.post(server.url + 'users/' + username + '/images/', {\r\n                        \"title\": \"teszt kep\",\r\n                        \"image\": img\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            delete: function (id, username) {\r\n                var deferred = $q.defer();\r\n                $http.delete(server.url + 'users/' + username + '/images/' + id)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = ImageService;\r\n\r\n})();\r\n\n},{}],12:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    UserService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function UserService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username) {\r\n                var deferred = $q.defer();\r\n                $http.get(server.url + 'users/' + username)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            update: function(user) {\r\n                var deferred = $q.defer;\r\n                $http.patch(server.url + 'users/' + user.username, {user: user})\r\n                    .success(function (data) {\r\n\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n\r\n    module.exports = UserService;\r\n\r\n})();\r\n\n},{}]},{},[3])\n\n","(function () {\r\n    'use strict';\r\n\r\n    module.exports = {\r\n        url: 'http://localhost:5000/api/'\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook', [\r\n            'ngAnimate',\r\n            'ui.router',\r\n            'mgcrea.ngStrap',\r\n            'satellizer',\r\n            'LocalStorageModule'\r\n        ])\r\n        .constant('server', require('./app.constants'))\r\n        .factory('UserService', require('./app/services/UserService'))\r\n        .factory('ImageService', require('./app/services/ImageService'))\r\n        .config(require('./app.routes'))\r\n        .config(require('./app.auth'));\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    DrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\r\n\r\n\r\n    /* @ngInject */\r\n    function DrawboookStates ($stateProvider, $urlRouterProvider, $locationProvider) {\r\n        $stateProvider.state('home', {\r\n                url: '/',\r\n                templateUrl: '/app/common/home.tpl.html',\r\n                controller: require('./app/common/HomeController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('register', {\r\n                url: '/register',\r\n                templateUrl: '/app/common/register.tpl.html',\r\n                controller: require('./app/common/RegisterController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('login', {\r\n                url: '/login',\r\n                templateUrl: '/app/common/login.tpl.html',\r\n                controller: require('./app/common/LoginController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('draw', {\r\n                url: '/draw',\r\n                templateUrl: '/app/draw/draw.tpl.html',\r\n                controller: require('./app/draw/DrawController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('edit', {\r\n                url: '/edit',\r\n                templateUrl: '/app/common/profile-edit.tpl.html',\r\n                controller: require('./app/common/ProfileEditController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user', {\r\n                url: '/:username',\r\n                templateUrl: '/app/common/user.tpl.html',\r\n                controller: require('./app/common/UserController'),\r\n                controllerAs: 'vm'\r\n            });\r\n\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        $locationProvider.html5Mode(true);\r\n\r\n    }\r\n\r\n    module.exports = DrawboookStates;\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function HomeController($auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'HomeController';\r\n\r\n        vm.user = localStorageService.get(\"currentUser\");\r\n\r\n        vm.isAuthenticated = isAuthenticated;\r\n        vm.logout = logout;\r\n        \r\n        function isAuthenticated() {\r\n            return $auth.isAuthenticated();\r\n        }\r\n\r\n        function logout() {\r\n            $auth.logout();\r\n            localStorageService.remove(\"currentUser\");\r\n        }\r\n    }\r\n\r\n    module.exports = HomeController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$state', '$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function LoginController($state, $auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'LoginController';\r\n\r\n        vm.login = login;\r\n\r\n        vm.incorrectLogin = false;\r\n\r\n        function login() {\r\n\r\n            var user = {\r\n                username: vm.user.name,\r\n                password: vm.user.password\r\n            };\r\n\r\n            $auth.login(user)\r\n                .then(function(res) {\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    //$window.localStorage.currentUser = JSON.stringify(res.data.user);\r\n                    //$rootScope.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n                    $state.go('home');\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('error: ' + res);\r\n                    vm.incorrectLogin = true;\r\n                });\r\n        }\r\n    }\r\n    module.exports = LoginController;\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('ProfileEditController', ProfileEditController);\r\n\r\n    ProfileEditController.$inject = ['$state', 'localStorageService', 'UserService'];\r\n\r\n    /* @ngInject */\r\n    function ProfileEditController($state, localStorageService, UserService) {\r\n        var vm = this;\r\n        vm.title = 'ProfileEditController';\r\n        vm.edit = edit;\r\n        vm.genders = ['Male', 'Female'];\r\n\r\n        ////////////////////////////////////////////\r\n\r\n        init();\r\n\r\n        function init() {\r\n            UserService.get(localStorageService.get('currentUser').username)\r\n                .then(function (res) {\r\n                    vm.user = res.user;\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function edit() {\r\n            UserService.update(vm.user);\r\n            $state.go('home');\r\n        }\r\n    }\r\n\r\n    module.exports = ProfileEditController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function RegisterController($state, $auth, UserService, localStorageService) {\r\n        var vm = this;\r\n\r\n        vm.title = 'RegisterController';\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.takenUsername = false;\r\n\r\n        vm.checkUsername = checkUsername;\r\n        vm.register = register;\r\n\r\n        ////////////////\r\n\r\n        function checkUsername() {\r\n            UserService.get(vm.user.username)\r\n                .then(function (res) {\r\n                    vm.takenUsername = res.user != null;\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Server problem');\r\n                });\r\n        }\r\n\r\n        function register() {\r\n            var user = {\r\n                username: vm.user.username,\r\n                password: vm.user.password,\r\n                firstName: vm.user.firstName,\r\n                lastName: vm.user.lastName,\r\n                age: vm.user.age,\r\n                gender: vm.user.gender\r\n            };\r\n\r\n            $auth.signup(user)\r\n                .then(function(res) {\r\n                    console.log(res);\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    $auth.login(user)\r\n                        .then(function (res) {\r\n                            $state.go('home');\r\n                        })\r\n                        .catch(function (res) {\r\n                            console.log('Error ' + res);\r\n                        });\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Error ' + res);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    module.exports = RegisterController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserController', UserController);\r\n\r\n    UserController.$inject = ['$stateParams', 'UserService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function UserController($stateParams, UserService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'UserController';\r\n        vm.images = [];\r\n\r\n        vm.init = init;\r\n        vm.deleteImage = deleteImage;\r\n\r\n        init();\r\n\r\n        ////////////////\r\n\r\n        function init() {\r\n            UserService.get($stateParams.username)\r\n                .then(function (res) {\r\n                    vm.user = res.user;\r\n                    console.log(vm.user);\r\n                    loadImages(vm.user.images);\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function loadImages(images) {\r\n            for (var i = 0; i < images.length; i++) {\r\n                ImageService.get(vm.user.username, images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push('data:image/png;base64,' + res.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n        }\r\n\r\n        function deleteImage(_id, index) {\r\n            ImageService.delete(_id, vm.user.username)\r\n                .then(function (res){\r\n                    delete vm.user.images[index];\r\n                })\r\n                .catch(function (res){});\r\n        }\r\n\r\n    }\r\n\r\n    module.exports = UserController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('DrawController', DrawController);\r\n\r\n    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function DrawController($state, localStorageService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'DrawController';\r\n        \r\n        vm.saveImage = saveImage;\r\n        //var jq = $.noConflict();\r\n\r\n        ///////////////////////////////\r\n\r\n        function saveImage() {\r\n\r\n\r\n            var tmpcanvas = $('<canvas>').attr({width: 600, height: 600});\r\n            var tmpcontext = tmpcanvas[0].getContext(\"2d\");\r\n\r\n            var arr = [];\r\n\r\n            $('.canvas').each(function() {\r\n                arr.push({\r\n                    canvas: $(this),\r\n                    zindex: parseInt($(this).css(\"z-index\"))\r\n                })\r\n            });\r\n\r\n            arr.sort(function(a, b) {\r\n                return (a.zindex - b.zindex);\r\n            });\r\n\r\n            for (var i = 0; i < arr.length; i++) {\r\n                tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);\r\n            }\r\n\r\n            var img = tmpcanvas[0].toDataURL();\r\n            var username = localStorageService.get(\"currentUser\").username;\r\n\r\n            ImageService.post(username, img)\r\n                .then(function (res) {\r\n                    $state.go('home');\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = DrawController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    ImageService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ImageService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username, id) {\r\n\r\n                var deferred = $q.defer();\r\n                $http({\r\n                        method: 'GET',\r\n                        url: server.url + 'users/' + username + '/images/' + id,\r\n                        headers: {'Content-Type': 'images/png'}\r\n                    })\r\n                    .then(function (data) {\r\n                        deferred.resolve(data);\r\n                    }, function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            post: function (username, img) {\r\n                var deferred = $q.defer();\r\n                $http.post(server.url + 'users/' + username + '/images/', {\r\n                        \"title\": \"teszt kep\",\r\n                        \"image\": img\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            delete: function (id, username) {\r\n                var deferred = $q.defer();\r\n                $http.delete(server.url + 'users/' + username + '/images/' + id)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = ImageService;\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    UserService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function UserService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username) {\r\n                var deferred = $q.defer();\r\n                $http.get(server.url + 'users/' + username)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            update: function(user) {\r\n                var deferred = $q.defer;\r\n                $http.patch(server.url + 'users/' + user.username, {user: user})\r\n                    .success(function (data) {\r\n\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n\r\n    module.exports = UserService;\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}