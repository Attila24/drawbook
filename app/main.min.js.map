{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/app.auth.js","main.min.js","app/app.constants.js","app/app.js","app/app.routes.js","app/app/common/HomeController.js","app/app/common/LoginController.js","app/app/common/ProfileEditController.js","app/app/common/RegisterController.js","app/app/draw/DrawController.js","app/app/services/CommentService.js","app/app/services/ImageService.js","app/app/services/UserService.js","app/app/user/UserController.js","app/app/user/UserGalleryController.js","app/app/user/UserImageController.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","AuthConfig","$authProvider","server","baseUrl","url","signupUrl","loginUrl","$inject","2","3","angular","constant","factory","config","./app.auth","./app.constants","./app.routes","./app/services/CommentService","./app/services/ImageService","./app/services/UserService","4","DrawboookStates","$stateProvider","$urlRouterProvider","$locationProvider","modal","state","templateUrl","controller","controllerAs","abstract","resolve","user","$stateParams","UserService","get","username","params","index","onEnter","$modal","$state","container","animation","backdropAnimation","position","keyboard","backdrop","otherwise","html5Mode","./app/common/HomeController","./app/common/LoginController","./app/common/ProfileEditController","./app/common/RegisterController","./app/draw/DrawController","./app/user/UserController","./app/user/UserGalleryController","./app/user/UserImageController","5","HomeController","$auth","localStorageService","init","then","res","vm","users","isAuthenticated","logout","remove","this","title","6","LoginController","login","name","password","set","data","go","console","log","incorrectLogin","7","ProfileEditController","Upload","avatarPath","edit","update","upload","file","result","status","errorMsg","evt","progress","Math","min","parseInt","loaded","total","genders","8","RegisterController","checkUsername","takenUsername","register","firstName","lastName","age","gender","signup","9","DrawController","ImageService","saveImage","tmpcanvas","$","attr","width","height","tmpcontext","getContext","arr","each","push","canvas","zindex","css","sort","b","drawImage","img","toDataURL","post","imagetitle","10","CommentService","$q","$http","imageid","comment","currentUser","deferred","defer","author","authorAvatar","success","error","reject","promise","11","id","method","headers","Content-Type","image","delete","12","patch","13","UserController","images","14","UserGalleryController","limit","_id","loadMore","current","15","UserImageController","$scope","window","on","event","target","is","$hide","undefined","map","indexOf","prev","next","loadComments","comments","navigate","keyCode","addComment"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function () {\r\n    'use strict';\r\n\r\n    AuthConfig.$inject = ['$authProvider', 'server'];\r\n\r\n\r\n    /* @ngInject */\r\n    function AuthConfig ($authProvider, server) {\r\n        $authProvider.baseUrl = server.url;\r\n\r\n        $authProvider.signupUrl = '/users/register';\r\n        $authProvider.loginUrl = '/users/login';\r\n    }\r\n\r\n    module.exports = AuthConfig;\r\n\r\n})();","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    AuthConfig.$inject = ['$authProvider', 'server'];\r\n\r\n\r\n    /* @ngInject */\r\n    function AuthConfig ($authProvider, server) {\r\n        $authProvider.baseUrl = server.url;\r\n\r\n        $authProvider.signupUrl = '/users/register';\r\n        $authProvider.loginUrl = '/users/login';\r\n    }\r\n\r\n    module.exports = AuthConfig;\r\n\r\n})();\n},{}],2:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    module.exports = {\r\n        url: 'http://localhost:5000/api/'\r\n    }\r\n\r\n})();\n},{}],3:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook', [\r\n            'ngAnimate',\r\n            'ui.router',\r\n            'mgcrea.ngStrap',\r\n            'satellizer',\r\n            'LocalStorageModule',\r\n            'ngFileUpload'\r\n        ])\r\n        .constant('server', require('./app.constants'))\r\n        .factory('UserService', require('./app/services/UserService'))\r\n        .factory('ImageService', require('./app/services/ImageService'))\r\n        .factory('CommentService', require('./app/services/CommentService'))\r\n        .config(require('./app.routes'))\r\n        .config(require('./app.auth'));\r\n})();\n},{\"./app.auth\":1,\"./app.constants\":2,\"./app.routes\":4,\"./app/services/CommentService\":10,\"./app/services/ImageService\":11,\"./app/services/UserService\":12}],4:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    DrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\r\n\r\n\r\n    /* @ngInject */\r\n    function DrawboookStates ($stateProvider, $urlRouterProvider, $locationProvider) {\r\n\r\n        var modal;\r\n\r\n        $stateProvider.state('home', {\r\n                url: '/',\r\n                templateUrl: '/app/common/home.tpl.html',\r\n                controller: require('./app/common/HomeController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('register', {\r\n                url: '/register',\r\n                templateUrl: '/app/common/register.tpl.html',\r\n                controller: require('./app/common/RegisterController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('login', {\r\n                url: '/login',\r\n                templateUrl: '/app/common/login.tpl.html',\r\n                controller: require('./app/common/LoginController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('draw', {\r\n                url: '/draw',\r\n                templateUrl: '/app/draw/draw.tpl.html',\r\n                controller: require('./app/draw/DrawController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('edit', {\r\n                url: '/edit',\r\n                templateUrl: '/app/common/profile-edit.tpl.html',\r\n                controller: require('./app/common/ProfileEditController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user', {\r\n                abstract: true,\r\n                url: '/:username',\r\n                templateUrl: '/app/user/user.tpl.html',\r\n                controller: require('./app/user/UserController'),\r\n                controllerAs: 'vm',\r\n                resolve: {\r\n                    user: ['$stateParams', 'UserService', function($stateParams, UserService) {\r\n                        return UserService.get($stateParams.username);\r\n                    }]\r\n                }\r\n            })\r\n            .state('user.gallery', {\r\n                url: '/',\r\n                templateUrl: '/app/user/user.gallery.tpl.html',\r\n                controller: require('./app/user/UserGalleryController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user.gallery.image', {\r\n                url: 'image/:id',\r\n                params: {\r\n                    index: null\r\n                },\r\n                onEnter: ['$modal', '$state', 'user', '$stateParams', function($modal, $state, user, $stateParams) {\r\n                    modal = $modal({\r\n                        templateUrl: '/app/user/user.image.tpl.html',\r\n                        controller: require('./app/user/UserImageController'),\r\n                        controllerAs: 'vm',\r\n                        resolve: {\r\n                            user: function(){return user;}\r\n                        },\r\n                        container: 'body',\r\n                        animation: 'am-fade',\r\n                        backdropAnimation: 'backdrop-anim',\r\n                        position: 'center',\r\n                        keyboard: false,\r\n                        backdrop: false\r\n                    });\r\n                }]\r\n            });\r\n\r\n        $urlRouterProvider.otherwise(\"/\");\r\n        $locationProvider.html5Mode(true);\r\n\r\n    }\r\n\r\n    module.exports = DrawboookStates;\r\n\r\n})();\n},{\"./app/common/HomeController\":5,\"./app/common/LoginController\":6,\"./app/common/ProfileEditController\":7,\"./app/common/RegisterController\":8,\"./app/draw/DrawController\":9,\"./app/user/UserController\":13,\"./app/user/UserGalleryController\":14,\"./app/user/UserImageController\":15}],5:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$auth', 'localStorageService', 'UserService'];\r\n\r\n    /* @ngInject */\r\n    function HomeController($auth, localStorageService, UserService) {\r\n        var vm = this;\r\n        vm.title = 'HomeController';\r\n\r\n        vm.user = localStorageService.get(\"currentUser\");\r\n\r\n        vm.isAuthenticated = isAuthenticated;\r\n        vm.logout = logout;\r\n\r\n        if (isAuthenticated())\r\n            init();\r\n\r\n        function init() {\r\n            UserService.get()\r\n                .then(function (res) {\r\n                    vm.users = res;\r\n                })\r\n        }\r\n\r\n        \r\n        function isAuthenticated() {\r\n            return $auth.isAuthenticated();\r\n        }\r\n\r\n        function logout() {\r\n            $auth.logout();\r\n            localStorageService.remove(\"currentUser\");\r\n        }\r\n    }\r\n\r\n    module.exports = HomeController;\r\n\r\n})();\r\n\r\n\n},{}],6:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$state', '$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function LoginController($state, $auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'LoginController';\r\n\r\n        vm.login = login;\r\n\r\n        vm.incorrectLogin = false;\r\n\r\n        function login() {\r\n\r\n            var user = {\r\n                username: vm.user.name,\r\n                password: vm.user.password\r\n            };\r\n\r\n            $auth.login(user)\r\n                .then(function(res) {\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    //$window.localStorage.currentUser = JSON.stringify(res.data.user);\r\n                    //$rootScope.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n                    $state.go('home');\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('error: ' + res);\r\n                    vm.incorrectLogin = true;\r\n                });\r\n        }\r\n    }\r\n    module.exports = LoginController;\r\n})();\r\n\r\n\n},{}],7:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('ProfileEditController', ProfileEditController);\r\n\r\n    ProfileEditController.$inject = ['$state', 'localStorageService', 'UserService', 'Upload', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ProfileEditController($state, localStorageService, UserService, Upload, server) {\r\n        var vm = this;\r\n        vm.title = 'ProfileEditController';\r\n        vm.edit = edit;\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.upload = upload;\r\n\r\n        var username = localStorageService.get('currentUser').username;\r\n\r\n        ////////////////////////////////////////////\r\n\r\n        init();\r\n\r\n        function init() {\r\n            UserService.get(username)\r\n                .then(function (res) {\r\n                    vm.user = res.user;\r\n                    vm.avatarPath = vm.user.avatarPath || 'img/default-avatar.jpg';\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function edit() {\r\n            UserService.update(vm.user);\r\n            upload();\r\n            $state.go('home');\r\n        }\r\n\r\n        function upload() {\r\n            /*console.log('file: '+ file);\r\n            console.log('vm.file: ' + vm.file);\r\n            vm.f = file;*/\r\n            //vm.errFile = errFiles && errFiles[0];\r\n\r\n            var file = vm.file;\r\n\r\n            if (file) {\r\n                file.upload = Upload.upload({\r\n                    url: server.url + '/users/' + vm.user.username + '/images/avatar',\r\n                    data: {file: file}\r\n                });\r\n\r\n\r\n                file.upload.then(function (res) {\r\n                    file.result = res;\r\n                }, function (res) {\r\n                    if (res.status > 0)\r\n                        vm.errorMsg = res.status + ': ' + res.data;\r\n                }, function (evt) {\r\n                    file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    module.exports = ProfileEditController;\r\n\r\n})();\r\n\r\n\n},{}],8:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function RegisterController($state, $auth, UserService, localStorageService) {\r\n        var vm = this;\r\n\r\n        vm.title = 'RegisterController';\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.takenUsername = false;\r\n\r\n        vm.checkUsername = checkUsername;\r\n        vm.register = register;\r\n\r\n        ////////////////\r\n\r\n        function checkUsername() {\r\n            UserService.get(vm.user.username)\r\n                .then(function (res) {\r\n                    vm.takenUsername = res.user != null;\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Server problem');\r\n                });\r\n        }\r\n\r\n        function register() {\r\n            var user = {\r\n                username: vm.user.username,\r\n                password: vm.user.password,\r\n                firstName: vm.user.firstName,\r\n                lastName: vm.user.lastName,\r\n                age: vm.user.age,\r\n                gender: vm.user.gender\r\n            };\r\n            $auth.signup(user)\r\n                .then(function(res) {\r\n                    console.log(res);\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    $auth.login(user)\r\n                        .then(function (res) {\r\n                            $state.go('home');\r\n                        })\r\n                        .catch(function (res) {\r\n                            console.log('Error ' + res);\r\n                        });\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Error ' + res);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    module.exports = RegisterController;\r\n\r\n})();\r\n\r\n\n},{}],9:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('DrawController', DrawController);\r\n\r\n    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function DrawController($state, localStorageService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'DrawController';\r\n        \r\n        vm.saveImage = saveImage;\r\n        //var jq = $.noConflict();\r\n\r\n        ///////////////////////////////\r\n\r\n        function saveImage() {\r\n\r\n\r\n            var tmpcanvas = $('<canvas>').attr({width: 600, height: 600});\r\n            var tmpcontext = tmpcanvas[0].getContext(\"2d\");\r\n\r\n            var arr = [];\r\n\r\n            $('.canvas').each(function() {\r\n                arr.push({\r\n                    canvas: $(this),\r\n                    zindex: parseInt($(this).css(\"z-index\"))\r\n                })\r\n            });\r\n\r\n            arr.sort(function(a, b) {\r\n                return (a.zindex - b.zindex);\r\n            });\r\n\r\n            for (var i = 0; i < arr.length; i++) {\r\n                tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);\r\n            }\r\n\r\n            var img = tmpcanvas[0].toDataURL();\r\n            var username = localStorageService.get(\"currentUser\").username;\r\n\r\n            ImageService.post(username, img, vm.imagetitle)\r\n                .then(function (res) {\r\n                    $state.go('home');\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = DrawController;\r\n\r\n})();\r\n\r\n\n},{}],10:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    CommentService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function CommentService($q, $http, server) {\r\n\r\n        return {\r\n            post: function (username, imageid, comment, currentUser) {\r\n\r\n                var deferred = $q.defer();\r\n\r\n                $http.post(\r\n                    server.url + '/users/' + username + '/images/' + imageid + '/comments/', {\r\n                        author: currentUser.username,\r\n                        authorAvatar: currentUser.avatarPath,\r\n                        comment: comment\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            get: function (user, imageid) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.get(server.url + '/users/' + user.username + '/images/' + imageid)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = CommentService;\r\n\r\n})();\r\n\n},{}],11:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    ImageService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ImageService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username, id) {\r\n\r\n                var deferred = $q.defer();\r\n                $http({\r\n                        method: 'GET',\r\n                        url: server.url + 'users/' + username + '/images/' + id,\r\n                        headers: {'Content-Type': 'images/png'}\r\n                    })\r\n                    .then(function (data) {\r\n                        deferred.resolve({data: data, id: id});\r\n                    }, function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            post: function (username, img, title) {\r\n                var deferred = $q.defer();\r\n                $http.post(server.url + 'users/' + username + '/images/', {\r\n                        \"title\": title,\r\n                        \"image\": img\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            delete: function (id, username) {\r\n                var deferred = $q.defer();\r\n                $http.delete(server.url + 'users/' + username + '/images/' + id)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = ImageService;\r\n\r\n})();\r\n\n},{}],12:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    UserService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function UserService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username) {\r\n                var deferred = $q.defer();\r\n                var url = username ? server.url + 'users/' + username : server.url + 'users/';\r\n                $http.get(url)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            update: function(user) {\r\n                var deferred = $q.defer;\r\n                $http.patch(server.url + 'users/' + user.username, {user: user})\r\n                    .success(function (data) {\r\n\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n\r\n    module.exports = UserService;\r\n\r\n})();\r\n\n},{}],13:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserController', UserController);\r\n\r\n    UserController.$inject = ['$stateParams', 'UserService', 'ImageService', 'user'];\r\n\r\n    /* @ngInject */\r\n    function UserController($stateParams, UserService, ImageService, user) {\r\n        var vm = this;\r\n        vm.title = 'UserController';\r\n        vm.images = [];\r\n        vm.user = user.user;\r\n\r\n\r\n        ////////////////\r\n\r\n        /*function deleteImage(_id, index) {\r\n            ImageService.delete(_id, vm.user.username)\r\n                .then(function (res){\r\n                    delete vm.user.images[index];\r\n                })\r\n                .catch(function (res){});\r\n        }*/\r\n    }\r\n\r\n    module.exports = UserController;\r\n\r\n})();\r\n\r\n\n},{}],14:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserGalleryController', UserGalleryController);\r\n\r\n    UserGalleryController.$inject = ['user', 'ImageService', '$state'];\r\n\r\n    /* @ngInject */\r\n    function UserGalleryController(user, ImageService, $state) {\r\n        var vm = this;\r\n        vm.title = 'UserGalleryController';\r\n        vm.user = user.user;\r\n        vm.images = [];\r\n\r\n        const limit = 12;\r\n\r\n        vm.loadMore = loadMore;\r\n\r\n        init();\r\n\r\n        ////////////////////\r\n\r\n        function init(){\r\n            vm.loaded = vm.user.images.length < limit ? vm.user.images.length : limit;\r\n            for (var i = 0; i < vm.loaded; i++) {\r\n                ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push(res.data.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n        }\r\n\r\n        function loadMore() {\r\n            vm.current = vm.loaded;\r\n            vm.loaded = vm.user.images.length < vm.loaded + limit ? vm.user.images.length : vm.loaded + limit;\r\n\r\n            console.log('current: ' + vm.current);\r\n            console.log('loaded: ' + vm.loaded);\r\n\r\n             for (var i = vm.current; i < vm.loaded; i++) {\r\n                ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push(res.data.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n            console.log(vm.images);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    module.exports = UserGalleryController;\r\n\r\n})();\r\n\r\n\n},{}],15:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserImageController', UserImageController);\r\n\r\n    UserImageController.$inject = ['$stateParams', 'ImageService', 'user', '$state', '$scope', 'CommentService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function UserImageController($stateParams, ImageService, user, $state, $scope, CommentService, localStorageService) {\r\n\r\n        var vm = this;\r\n        vm.title = 'UserImageController';\r\n        vm.user = user.user;\r\n        vm.index = $stateParams.index;\r\n        vm.navigate = navigate;\r\n        vm.addComment = addComment;\r\n\r\n        init();\r\n\r\n        ////////////////////////////////////\r\n\r\n        function init() {\r\n\r\n            $(window).on('click', function(event) {\r\n                if ($(event.target).is('.modal')) {\r\n                    $state.go('user.gallery', {user: vm.username})\r\n                        .then(function() {\r\n                            $scope.$hide();\r\n                        });\r\n                }\r\n            });\r\n\r\n            if (vm.index === undefined || vm.index === null) {\r\n                vm.index = vm.user.images.map(function (e) {return e._id}).indexOf($stateParams.id);\r\n            }\r\n\r\n            if (vm.user.images.length == 1) {\r\n                vm.prev = vm.next = undefined;\r\n            } else if (vm.index == 0) {\r\n                vm.next = vm.user.images[vm.index+1]._id;\r\n                vm.prev = undefined;\r\n            } else if (vm.index > 0 && vm.index < vm.user.images.length-1) {\r\n                vm.prev = vm.user.images[vm.index-1]._id;\r\n                vm.next = vm.user.images[vm.index+1]._id;\r\n            } else if (vm.index == vm.user.images.length-1) {\r\n                vm.prev = vm.user.images[vm.index-1]._id;\r\n                vm.next = undefined;\r\n            }\r\n\r\n            ImageService.get(vm.user.username, $stateParams.id)\r\n                .then(function (res) {\r\n                    vm.image = res.data.data;\r\n                })\r\n                .catch(function (res) {});\r\n\r\n            loadComments();\r\n\r\n        }\r\n\r\n        function loadComments() {\r\n            CommentService.get(vm.user.username, $stateParams.id)\r\n                .then(function (res) {\r\n                    vm.comments = res.image.comments;\r\n                    console.log(vm.comments);\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function navigate(keyCode) {\r\n            if (vm.prev != undefined && keyCode == 37) { // left\r\n                $state.go('user.gallery.image', {id: vm.prev, index: vm.index-1})\r\n                    .then(function() {\r\n                        $scope.$hide();\r\n                    });\r\n            } else if (vm.next != undefined && keyCode == 39) { // right\r\n                $state.go('user.gallery.image', {id: vm.next, index: vm.index+1})\r\n                    .then(function() {\r\n                        $scope.$hide();\r\n                    });\r\n            } else if (keyCode == 27) { // escape\r\n                $state.go('user.gallery', {user: vm.username})\r\n                    .then(function() {\r\n                        $scope.$hide();\r\n                    });\r\n            }\r\n        }\r\n\r\n\r\n        function addComment() {\r\n            CommentService.post(vm.user.username, $stateParams.id, vm.comment, localStorageService.get('currentUser'))\r\n                .then(function (res) {\r\n                    vm.comment = \"\";\r\n                    loadComments();\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n    }\r\n\r\n    module.exports = UserImageController;\r\n\r\n})();\r\n\r\n\n},{}]},{},[3])\n\n","(function () {\r\n    'use strict';\r\n\r\n    module.exports = {\r\n        url: 'http://localhost:5000/api/'\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook', [\r\n            'ngAnimate',\r\n            'ui.router',\r\n            'mgcrea.ngStrap',\r\n            'satellizer',\r\n            'LocalStorageModule',\r\n            'ngFileUpload'\r\n        ])\r\n        .constant('server', require('./app.constants'))\r\n        .factory('UserService', require('./app/services/UserService'))\r\n        .factory('ImageService', require('./app/services/ImageService'))\r\n        .factory('CommentService', require('./app/services/CommentService'))\r\n        .config(require('./app.routes'))\r\n        .config(require('./app.auth'));\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    DrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\r\n\r\n\r\n    /* @ngInject */\r\n    function DrawboookStates ($stateProvider, $urlRouterProvider, $locationProvider) {\r\n\r\n        var modal;\r\n\r\n        $stateProvider.state('home', {\r\n                url: '/',\r\n                templateUrl: '/app/common/home.tpl.html',\r\n                controller: require('./app/common/HomeController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('register', {\r\n                url: '/register',\r\n                templateUrl: '/app/common/register.tpl.html',\r\n                controller: require('./app/common/RegisterController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('login', {\r\n                url: '/login',\r\n                templateUrl: '/app/common/login.tpl.html',\r\n                controller: require('./app/common/LoginController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('draw', {\r\n                url: '/draw',\r\n                templateUrl: '/app/draw/draw.tpl.html',\r\n                controller: require('./app/draw/DrawController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('edit', {\r\n                url: '/edit',\r\n                templateUrl: '/app/common/profile-edit.tpl.html',\r\n                controller: require('./app/common/ProfileEditController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user', {\r\n                abstract: true,\r\n                url: '/:username',\r\n                templateUrl: '/app/user/user.tpl.html',\r\n                controller: require('./app/user/UserController'),\r\n                controllerAs: 'vm',\r\n                resolve: {\r\n                    user: ['$stateParams', 'UserService', function($stateParams, UserService) {\r\n                        return UserService.get($stateParams.username);\r\n                    }]\r\n                }\r\n            })\r\n            .state('user.gallery', {\r\n                url: '/',\r\n                templateUrl: '/app/user/user.gallery.tpl.html',\r\n                controller: require('./app/user/UserGalleryController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user.gallery.image', {\r\n                url: 'image/:id',\r\n                params: {\r\n                    index: null\r\n                },\r\n                onEnter: ['$modal', '$state', 'user', '$stateParams', function($modal, $state, user, $stateParams) {\r\n                    modal = $modal({\r\n                        templateUrl: '/app/user/user.image.tpl.html',\r\n                        controller: require('./app/user/UserImageController'),\r\n                        controllerAs: 'vm',\r\n                        resolve: {\r\n                            user: function(){return user;}\r\n                        },\r\n                        container: 'body',\r\n                        animation: 'am-fade',\r\n                        backdropAnimation: 'backdrop-anim',\r\n                        position: 'center',\r\n                        keyboard: false,\r\n                        backdrop: false\r\n                    });\r\n                }]\r\n            });\r\n\r\n        $urlRouterProvider.otherwise(\"/\");\r\n        $locationProvider.html5Mode(true);\r\n\r\n    }\r\n\r\n    module.exports = DrawboookStates;\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$auth', 'localStorageService', 'UserService'];\r\n\r\n    /* @ngInject */\r\n    function HomeController($auth, localStorageService, UserService) {\r\n        var vm = this;\r\n        vm.title = 'HomeController';\r\n\r\n        vm.user = localStorageService.get(\"currentUser\");\r\n\r\n        vm.isAuthenticated = isAuthenticated;\r\n        vm.logout = logout;\r\n\r\n        if (isAuthenticated())\r\n            init();\r\n\r\n        function init() {\r\n            UserService.get()\r\n                .then(function (res) {\r\n                    vm.users = res;\r\n                })\r\n        }\r\n\r\n        \r\n        function isAuthenticated() {\r\n            return $auth.isAuthenticated();\r\n        }\r\n\r\n        function logout() {\r\n            $auth.logout();\r\n            localStorageService.remove(\"currentUser\");\r\n        }\r\n    }\r\n\r\n    module.exports = HomeController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$state', '$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function LoginController($state, $auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'LoginController';\r\n\r\n        vm.login = login;\r\n\r\n        vm.incorrectLogin = false;\r\n\r\n        function login() {\r\n\r\n            var user = {\r\n                username: vm.user.name,\r\n                password: vm.user.password\r\n            };\r\n\r\n            $auth.login(user)\r\n                .then(function(res) {\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    //$window.localStorage.currentUser = JSON.stringify(res.data.user);\r\n                    //$rootScope.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n                    $state.go('home');\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('error: ' + res);\r\n                    vm.incorrectLogin = true;\r\n                });\r\n        }\r\n    }\r\n    module.exports = LoginController;\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('ProfileEditController', ProfileEditController);\r\n\r\n    ProfileEditController.$inject = ['$state', 'localStorageService', 'UserService', 'Upload', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ProfileEditController($state, localStorageService, UserService, Upload, server) {\r\n        var vm = this;\r\n        vm.title = 'ProfileEditController';\r\n        vm.edit = edit;\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.upload = upload;\r\n\r\n        var username = localStorageService.get('currentUser').username;\r\n\r\n        ////////////////////////////////////////////\r\n\r\n        init();\r\n\r\n        function init() {\r\n            UserService.get(username)\r\n                .then(function (res) {\r\n                    vm.user = res.user;\r\n                    vm.avatarPath = vm.user.avatarPath || 'img/default-avatar.jpg';\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function edit() {\r\n            UserService.update(vm.user);\r\n            upload();\r\n            $state.go('home');\r\n        }\r\n\r\n        function upload() {\r\n            /*console.log('file: '+ file);\r\n            console.log('vm.file: ' + vm.file);\r\n            vm.f = file;*/\r\n            //vm.errFile = errFiles && errFiles[0];\r\n\r\n            var file = vm.file;\r\n\r\n            if (file) {\r\n                file.upload = Upload.upload({\r\n                    url: server.url + '/users/' + vm.user.username + '/images/avatar',\r\n                    data: {file: file}\r\n                });\r\n\r\n\r\n                file.upload.then(function (res) {\r\n                    file.result = res;\r\n                }, function (res) {\r\n                    if (res.status > 0)\r\n                        vm.errorMsg = res.status + ': ' + res.data;\r\n                }, function (evt) {\r\n                    file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    module.exports = ProfileEditController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function RegisterController($state, $auth, UserService, localStorageService) {\r\n        var vm = this;\r\n\r\n        vm.title = 'RegisterController';\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.takenUsername = false;\r\n\r\n        vm.checkUsername = checkUsername;\r\n        vm.register = register;\r\n\r\n        ////////////////\r\n\r\n        function checkUsername() {\r\n            UserService.get(vm.user.username)\r\n                .then(function (res) {\r\n                    vm.takenUsername = res.user != null;\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Server problem');\r\n                });\r\n        }\r\n\r\n        function register() {\r\n            var user = {\r\n                username: vm.user.username,\r\n                password: vm.user.password,\r\n                firstName: vm.user.firstName,\r\n                lastName: vm.user.lastName,\r\n                age: vm.user.age,\r\n                gender: vm.user.gender\r\n            };\r\n            $auth.signup(user)\r\n                .then(function(res) {\r\n                    console.log(res);\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    $auth.login(user)\r\n                        .then(function (res) {\r\n                            $state.go('home');\r\n                        })\r\n                        .catch(function (res) {\r\n                            console.log('Error ' + res);\r\n                        });\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Error ' + res);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    module.exports = RegisterController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('DrawController', DrawController);\r\n\r\n    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function DrawController($state, localStorageService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'DrawController';\r\n        \r\n        vm.saveImage = saveImage;\r\n        //var jq = $.noConflict();\r\n\r\n        ///////////////////////////////\r\n\r\n        function saveImage() {\r\n\r\n\r\n            var tmpcanvas = $('<canvas>').attr({width: 600, height: 600});\r\n            var tmpcontext = tmpcanvas[0].getContext(\"2d\");\r\n\r\n            var arr = [];\r\n\r\n            $('.canvas').each(function() {\r\n                arr.push({\r\n                    canvas: $(this),\r\n                    zindex: parseInt($(this).css(\"z-index\"))\r\n                })\r\n            });\r\n\r\n            arr.sort(function(a, b) {\r\n                return (a.zindex - b.zindex);\r\n            });\r\n\r\n            for (var i = 0; i < arr.length; i++) {\r\n                tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);\r\n            }\r\n\r\n            var img = tmpcanvas[0].toDataURL();\r\n            var username = localStorageService.get(\"currentUser\").username;\r\n\r\n            ImageService.post(username, img, vm.imagetitle)\r\n                .then(function (res) {\r\n                    $state.go('home');\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = DrawController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    CommentService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function CommentService($q, $http, server) {\r\n\r\n        return {\r\n            post: function (username, imageid, comment, currentUser) {\r\n\r\n                var deferred = $q.defer();\r\n\r\n                $http.post(\r\n                    server.url + '/users/' + username + '/images/' + imageid + '/comments/', {\r\n                        author: currentUser.username,\r\n                        authorAvatar: currentUser.avatarPath,\r\n                        comment: comment\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            get: function (user, imageid) {\r\n                var deferred = $q.defer();\r\n\r\n                $http.get(server.url + '/users/' + user.username + '/images/' + imageid)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = CommentService;\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    ImageService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ImageService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username, id) {\r\n\r\n                var deferred = $q.defer();\r\n                $http({\r\n                        method: 'GET',\r\n                        url: server.url + 'users/' + username + '/images/' + id,\r\n                        headers: {'Content-Type': 'images/png'}\r\n                    })\r\n                    .then(function (data) {\r\n                        deferred.resolve({data: data, id: id});\r\n                    }, function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            post: function (username, img, title) {\r\n                var deferred = $q.defer();\r\n                $http.post(server.url + 'users/' + username + '/images/', {\r\n                        \"title\": title,\r\n                        \"image\": img\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            delete: function (id, username) {\r\n                var deferred = $q.defer();\r\n                $http.delete(server.url + 'users/' + username + '/images/' + id)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = ImageService;\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    UserService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function UserService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username) {\r\n                var deferred = $q.defer();\r\n                var url = username ? server.url + 'users/' + username : server.url + 'users/';\r\n                $http.get(url)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            update: function(user) {\r\n                var deferred = $q.defer;\r\n                $http.patch(server.url + 'users/' + user.username, {user: user})\r\n                    .success(function (data) {\r\n\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n\r\n    module.exports = UserService;\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserController', UserController);\r\n\r\n    UserController.$inject = ['$stateParams', 'UserService', 'ImageService', 'user'];\r\n\r\n    /* @ngInject */\r\n    function UserController($stateParams, UserService, ImageService, user) {\r\n        var vm = this;\r\n        vm.title = 'UserController';\r\n        vm.images = [];\r\n        vm.user = user.user;\r\n\r\n\r\n        ////////////////\r\n\r\n        /*function deleteImage(_id, index) {\r\n            ImageService.delete(_id, vm.user.username)\r\n                .then(function (res){\r\n                    delete vm.user.images[index];\r\n                })\r\n                .catch(function (res){});\r\n        }*/\r\n    }\r\n\r\n    module.exports = UserController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserGalleryController', UserGalleryController);\r\n\r\n    UserGalleryController.$inject = ['user', 'ImageService', '$state'];\r\n\r\n    /* @ngInject */\r\n    function UserGalleryController(user, ImageService, $state) {\r\n        var vm = this;\r\n        vm.title = 'UserGalleryController';\r\n        vm.user = user.user;\r\n        vm.images = [];\r\n\r\n        const limit = 12;\r\n\r\n        vm.loadMore = loadMore;\r\n\r\n        init();\r\n\r\n        ////////////////////\r\n\r\n        function init(){\r\n            vm.loaded = vm.user.images.length < limit ? vm.user.images.length : limit;\r\n            for (var i = 0; i < vm.loaded; i++) {\r\n                ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push(res.data.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n        }\r\n\r\n        function loadMore() {\r\n            vm.current = vm.loaded;\r\n            vm.loaded = vm.user.images.length < vm.loaded + limit ? vm.user.images.length : vm.loaded + limit;\r\n\r\n            console.log('current: ' + vm.current);\r\n            console.log('loaded: ' + vm.loaded);\r\n\r\n             for (var i = vm.current; i < vm.loaded; i++) {\r\n                ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push(res.data.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n            console.log(vm.images);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    module.exports = UserGalleryController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserImageController', UserImageController);\r\n\r\n    UserImageController.$inject = ['$stateParams', 'ImageService', 'user', '$state', '$scope', 'CommentService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function UserImageController($stateParams, ImageService, user, $state, $scope, CommentService, localStorageService) {\r\n\r\n        var vm = this;\r\n        vm.title = 'UserImageController';\r\n        vm.user = user.user;\r\n        vm.index = $stateParams.index;\r\n        vm.navigate = navigate;\r\n        vm.addComment = addComment;\r\n\r\n        init();\r\n\r\n        ////////////////////////////////////\r\n\r\n        function init() {\r\n\r\n            $(window).on('click', function(event) {\r\n                if ($(event.target).is('.modal')) {\r\n                    $state.go('user.gallery', {user: vm.username})\r\n                        .then(function() {\r\n                            $scope.$hide();\r\n                        });\r\n                }\r\n            });\r\n\r\n            if (vm.index === undefined || vm.index === null) {\r\n                vm.index = vm.user.images.map(function (e) {return e._id}).indexOf($stateParams.id);\r\n            }\r\n\r\n            if (vm.user.images.length == 1) {\r\n                vm.prev = vm.next = undefined;\r\n            } else if (vm.index == 0) {\r\n                vm.next = vm.user.images[vm.index+1]._id;\r\n                vm.prev = undefined;\r\n            } else if (vm.index > 0 && vm.index < vm.user.images.length-1) {\r\n                vm.prev = vm.user.images[vm.index-1]._id;\r\n                vm.next = vm.user.images[vm.index+1]._id;\r\n            } else if (vm.index == vm.user.images.length-1) {\r\n                vm.prev = vm.user.images[vm.index-1]._id;\r\n                vm.next = undefined;\r\n            }\r\n\r\n            ImageService.get(vm.user.username, $stateParams.id)\r\n                .then(function (res) {\r\n                    vm.image = res.data.data;\r\n                })\r\n                .catch(function (res) {});\r\n\r\n            loadComments();\r\n\r\n        }\r\n\r\n        function loadComments() {\r\n            CommentService.get(vm.user.username, $stateParams.id)\r\n                .then(function (res) {\r\n                    vm.comments = res.image.comments;\r\n                    console.log(vm.comments);\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function navigate(keyCode) {\r\n            if (vm.prev != undefined && keyCode == 37) { // left\r\n                $state.go('user.gallery.image', {id: vm.prev, index: vm.index-1})\r\n                    .then(function() {\r\n                        $scope.$hide();\r\n                    });\r\n            } else if (vm.next != undefined && keyCode == 39) { // right\r\n                $state.go('user.gallery.image', {id: vm.next, index: vm.index+1})\r\n                    .then(function() {\r\n                        $scope.$hide();\r\n                    });\r\n            } else if (keyCode == 27) { // escape\r\n                $state.go('user.gallery', {user: vm.username})\r\n                    .then(function() {\r\n                        $scope.$hide();\r\n                    });\r\n            }\r\n        }\r\n\r\n\r\n        function addComment() {\r\n            CommentService.post(vm.user.username, $stateParams.id, vm.comment, localStorageService.get('currentUser'))\r\n                .then(function (res) {\r\n                    vm.comment = \"\";\r\n                    loadComments();\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n    }\r\n\r\n    module.exports = UserImageController;\r\n\r\n})();\r\n\r\n"],"sourceRoot":"/source/"}