{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/app.auth.js","main.min.js","app/app.constants.js","app/app.js","app/app.routes.js","app/app/common/HomeController.js","app/app/common/LoginController.js","app/app/common/ProfileEditController.js","app/app/common/RegisterController.js","app/app/common/drawbook.common.js","app/app/draw/DrawController.js","app/app/services/CommentService.js","app/app/services/ImageService.js","app/app/services/UserService.js","app/app/user/UserController.js","app/app/user/UserGalleryController.js","app/app/user/UserImageController.js"],"names":[],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nAuthConfig.$inject = ['$authProvider', 'server'];\r\n\r\n/* @ngInject */\r\nexport default function AuthConfig ($authProvider, server) {\r\n    $authProvider.baseUrl = server.url;\r\n    $authProvider.signupUrl = '/users/register';\r\n    $authProvider.loginUrl = '/users/login';\r\n}","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nAuthConfig;AuthConfig.$inject = ['$authProvider', 'server']; /* @ngInject */function AuthConfig($authProvider, server) {\n    $authProvider.baseUrl = server.url;\n    $authProvider.signupUrl = '/users/register';\n    $authProvider.loginUrl = '/users/login';\n}\n\n},{}],2:[function(require,module,exports){\n\n'use strict';\n\nmodule.exports = {\n    url: 'http://localhost:5000/api/' };\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar _app = require('./app.routes');var _app2 = _interopRequireDefault(_app);\nvar _app3 = require('./app.auth');var _app4 = _interopRequireDefault(_app3);\n\nvar _drawbook = require('./app/common/drawbook.common');var _drawbook2 = _interopRequireDefault(_drawbook);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nangular.\nmodule('drawbook', [\n'ngAnimate',\n'ui.router',\n'mgcrea.ngStrap',\n'satellizer',\n'LocalStorageModule',\n'ngFileUpload',\n_drawbook2.default.name]).\n\nconstant('server', require('./app.constants')).\nfactory('UserService', require('./app/services/UserService')).\nfactory('ImageService', require('./app/services/ImageService')).\nfactory('CommentService', require('./app/services/CommentService')).\nconfig(_app2.default).\nconfig(_app4.default);\n\n},{\"./app.auth\":1,\"./app.constants\":2,\"./app.routes\":4,\"./app/common/drawbook.common\":9,\"./app/services/CommentService\":11,\"./app/services/ImageService\":12,\"./app/services/UserService\":13}],4:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\n\n\n\nDrawboookStates;var _HomeController = require('./app/common/HomeController');var _HomeController2 = _interopRequireDefault(_HomeController);var _LoginController = require('./app/common/LoginController');var _LoginController2 = _interopRequireDefault(_LoginController);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}DrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider']; /* @ngInject */function DrawboookStates($stateProvider, $urlRouterProvider, $locationProvider) {\n\n    $stateProvider.state('home', {\n        url: '/',\n        templateUrl: '/app/common/home.tpl.html',\n        controller: _HomeController2.default,\n        controllerAs: 'vm' }).\n\n    state('register', {\n        url: '/register',\n        templateUrl: '/app/common/register.tpl.html',\n        controller: require('./app/common/RegisterController'),\n        controllerAs: 'vm' }).\n\n    state('login', {\n        url: '/login',\n        templateUrl: '/app/common/login.tpl.html',\n        controller: _LoginController2.default,\n        controllerAs: 'vm' }).\n\n    state('draw', {\n        url: '/draw',\n        templateUrl: '/app/draw/draw.tpl.html',\n        controller: require('./app/draw/DrawController'),\n        controllerAs: 'vm' }).\n\n    state('edit', {\n        url: '/edit',\n        templateUrl: '/app/common/profile-edit.tpl.html',\n        controller: require('./app/common/ProfileEditController'),\n        controllerAs: 'vm' }).\n\n    state('user', {\n        abstract: true,\n        url: '/:username',\n        templateUrl: '/app/user/user.tpl.html',\n        controller: require('./app/user/UserController'),\n        controllerAs: 'vm',\n        resolve: {\n            user: ['$stateParams', 'UserService', function ($stateParams, UserService) {return UserService.get($stateParams.username);}] } }).\n\n\n\n    state('user.gallery', {\n        url: '/',\n        templateUrl: '/app/user/user.gallery.tpl.html',\n        controller: require('./app/user/UserGalleryController'),\n        controllerAs: 'vm' }).\n\n    state('user.gallery.image', {\n        url: 'image/:id',\n        params: { index: null },\n        onEnter: ['$modal', '$state', 'user', '$stateParams', function ($modal, $state, _user) {\n            $modal({\n                templateUrl: '/app/user/user.image.tpl.html',\n                controller: require('./app/user/UserImageController'),\n                controllerAs: 'vm',\n                resolve: {\n                    user: function user() {return _user;} },\n\n                container: 'body',\n                animation: 'am-fade',\n                backdropAnimation: 'backdrop-anim',\n                position: 'center',\n                keyboard: false,\n                backdrop: false });\n\n        }] });\n\n\n    $urlRouterProvider.otherwise(\"/\");\n    $locationProvider.html5Mode(true);\n}\n\n},{\"./app/common/HomeController\":5,\"./app/common/LoginController\":6,\"./app/common/ProfileEditController\":7,\"./app/common/RegisterController\":8,\"./app/draw/DrawController\":10,\"./app/user/UserController\":14,\"./app/user/UserGalleryController\":15,\"./app/user/UserImageController\":16}],5:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nHomeController;HomeController.$inject = ['$auth', 'localStorageService', 'UserService']; /* @ngInject */function HomeController($auth, localStorageService, UserService) {\n    var vm = this;\n    vm.title = 'HomeController';\n\n    vm.user = localStorageService.get(\"currentUser\");\n\n    vm.isAuthenticated = isAuthenticated;\n    vm.logout = logout;\n\n    if (isAuthenticated()) init();\n\n    function init() {\n        UserService.get().\n        then(function (res) {\n            vm.users = res;\n        });\n    }\n\n\n    function isAuthenticated() {\n        return $auth.isAuthenticated();\n    }\n\n    function logout() {\n        $auth.logout();\n        localStorageService.remove(\"currentUser\");\n    }\n}\n\n},{}],6:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });exports.default =\n\n\n\n\nLoginController;LoginController.$inject = ['$state', '$auth', 'localStorageService']; /* @ngInject */function LoginController($state, $auth, localStorageService) {\n    var vm = this;\n\n    vm.title = 'LoginController';\n    vm.incorrectLogin = false;\n\n    vm.login = login;\n\n    //////////////////////////////////////\n\n    function login() {\n\n        var user = {\n            username: vm.user.name,\n            password: vm.user.password };\n\n\n        $auth.login(user).\n        then(function (res) {\n            localStorageService.set(\"currentUser\", res.data.user);\n            $state.go('home');\n        }).\n        catch(function (res) {\n            console.log('Error: ' + res);\n            vm.incorrectLogin = true;\n        });\n    }\n}\n\n},{}],7:[function(require,module,exports){\n'use strict';(function () {\n    'use strict';\n\n    angular.\n    module('drawbook').\n    controller('ProfileEditController', ProfileEditController);\n\n    ProfileEditController.$inject = ['$state', 'localStorageService', 'UserService', 'Upload', 'server'];\n\n    /* @ngInject */\n    function ProfileEditController($state, localStorageService, UserService, Upload, server) {\n        var vm = this;\n        vm.title = 'ProfileEditController';\n        vm.genders = ['Male', 'Female'];\n\n        vm.edit = edit;\n        vm.upload = upload;\n\n        var username = localStorageService.get('currentUser').username;\n\n        init();\n\n        ////////////////////////////////////////////\n\n\n        function init() {\n            UserService.get(username).\n            then(function (res) {\n                vm.user = res.user;\n                vm.avatarPath = vm.user.avatarPath || 'img/default-avatar.jpg';\n            }).\n            catch(function (res) {});\n        }\n\n        function edit() {\n            UserService.update(vm.user);\n            upload();\n            $state.go('home');\n        }\n\n        function upload() {\n            var file = vm.file;\n\n            if (file) {\n\n                file.upload = Upload.upload({\n                    url: server.url + '/users/' + vm.user.username + '/images/avatar',\n                    data: { file: file } });\n\n\n                file.upload.then(function (res) {\n                    file.result = res;\n                }, function (res) {\n                    if (res.status > 0) {\n                        vm.errorMsg = res.status + ': ' + res.data;\n                    }\n                });\n            }\n        }\n    }\n\n    module.exports = ProfileEditController;\n\n})();\n\n},{}],8:[function(require,module,exports){\n'use strict';(function () {\n    'use strict';\n\n    angular.\n    module('drawbook').\n    controller('RegisterController', RegisterController);\n\n    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\n\n    /* @ngInject */\n    function RegisterController($state, $auth, UserService, localStorageService) {\n        var vm = this;\n\n        vm.title = 'RegisterController';\n        vm.genders = ['Male', 'Female'];\n        vm.takenUsername = false;\n\n        vm.checkUsername = checkUsername;\n        vm.register = register;\n\n        ////////////////\n\n        function checkUsername() {\n            UserService.get(vm.user.username).\n            then(function (res) {\n                vm.takenUsername = res.user != null;\n            }).\n            catch(function (res) {});\n        }\n\n        function register() {\n            var user = {\n                username: vm.user.username,\n                password: vm.user.password,\n                firstName: vm.user.firstName,\n                lastName: vm.user.lastName,\n                age: vm.user.age,\n                gender: vm.user.gender };\n\n            $auth.signup(user).\n            then(function (res) {\n                localStorageService.set(\"currentUser\", res.data.user);\n                $auth.login(user).\n                then(function (res) {\n                    $state.go('home');\n                }).\n                catch(function (res) {});\n            }).\n            catch(function (res) {});\n        }\n\n    }\n\n    module.exports = RegisterController;\n\n})();\n\n},{}],9:[function(require,module,exports){\n'use strict';Object.defineProperty(exports, \"__esModule\", { value: true });\n\nvar _HomeController = require('./HomeController');var _HomeController2 = _interopRequireDefault(_HomeController);\nvar _LoginController = require('./LoginController');var _LoginController2 = _interopRequireDefault(_LoginController);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nvar _module =\nangular.module('drawbook.common', []).\n\n\ncontroller(_HomeController2.default).\ncontroller(_LoginController2.default);exports.default =\n\n_module;\n\n},{\"./HomeController\":5,\"./LoginController\":6}],10:[function(require,module,exports){\n'use strict';(function () {\n    'use strict';\n\n    angular.\n    module('drawbook').\n    controller('DrawController', DrawController);\n\n    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\n\n    /* @ngInject */\n    function DrawController($state, localStorageService, ImageService) {\n        var vm = this;\n        vm.title = 'DrawController';\n\n        vm.saveImage = saveImage;\n\n        ///////////////////////////////\n\n        function saveImage() {var _this = this;\n\n            var tmpcanvas = $('<canvas>').attr({ width: 600, height: 600 });\n            var tmpcontext = tmpcanvas[0].getContext('2d');\n            var arr = [];\n\n            $('.canvas').each(function () {\n                arr.push({\n                    canvas: $(_this),\n                    zindex: parseInt($(_this).css(\"z-index\")) });\n\n            });\n\n            arr.sort(function (a, b) {return a.zindex - b.zindex;});\n\n            for (var i = 0; i < arr.length; i++) {\n                tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);\n            }\n\n            var img = tmpcanvas[0].toDataURL();\n            var username = localStorageService.get(\"currentUser\").username;\n\n            ImageService.post(username, img, vm.imagetitle).\n            then(function (res) {\n                $state.go('home');\n            }).\n            catch(function (res) {});\n        }\n\n    }\n\n    module.exports = DrawController;\n\n})();\n\n},{}],11:[function(require,module,exports){\n'use strict';(function () {\n    'use strict';\n\n    CommentService.$inject = ['$q', '$http', 'server'];\n\n    /* @ngInject */\n    function CommentService($q, $http, server) {\n\n        return {\n            post: function post(username, imageid, comment, currentUser) {\n                var deferred = $q.defer();\n\n                $http.post(server.url + '/users/' + username + '/images/' + imageid + '/comments/',\n                {\n                    author: currentUser.username,\n                    authorAvatar: currentUser.avatarPath,\n                    comment: comment }).\n\n                success(function (data) {deferred.resolve(data);}).\n                error(function (data) {deferred.reject(data);});\n\n                return deferred.promise;\n            },\n            get: function get(user, imageid) {\n                var deferred = $q.defer();\n\n                $http.get(server.url + '/users/' + user.username + '/images/' + imageid).\n                success(function (data) {deferred.resolve(data);}).\n                error(function (data) {deferred.reject(data);});\n                return deferred.promise;\n            } };\n\n    }\n    module.exports = CommentService;\n\n})();\n\n},{}],12:[function(require,module,exports){\n'use strict';(function () {\n    'use strict';\n\n    ImageService.$inject = ['$q', '$http', 'server'];\n\n    /* @ngInject */\n    function ImageService($q, $http, server) {\n\n        return {\n            get: function get(username, id) {\n\n                var deferred = $q.defer();\n                $http({\n                    method: 'GET',\n                    url: server.url + 'users/' + username + '/images/' + id,\n                    headers: { 'Content-Type': 'images/png' } }).\n\n                then(function (data) {\n                    deferred.resolve({ data: data, id: id });\n                }, function (data) {\n                    deferred.reject(data);\n                });\n\n                return deferred.promise;\n            },\n            post: function post(username, img, title) {\n                var deferred = $q.defer();\n                $http.post(server.url + 'users/' + username + '/images/', {\n                    \"title\": title,\n                    \"image\": img }).\n\n                success(function (data) {\n                    deferred.resolve(data);\n                }).\n                error(function (data) {\n                    deferred.reject('rejected: ' + data);\n                });\n                return deferred.promise;\n            },\n            delete: function _delete(id, username) {\n                var deferred = $q.defer();\n                $http.delete(server.url + 'users/' + username + '/images/' + id).\n                success(function (data) {\n                    deferred.resolve(data);\n                }).\n                error(function (data) {\n                    deferred.reject('rejected: ' + data);\n                });\n                return deferred.promise;\n            } };\n\n    }\n    module.exports = ImageService;\n\n})();\n\n},{}],13:[function(require,module,exports){\n'use strict';(function () {\n    'use strict';\n\n    UserService.$inject = ['$q', '$http', 'server'];\n\n    /* @ngInject */\n    function UserService($q, $http, server) {\n\n        return {\n            get: function get(username) {\n                var deferred = $q.defer();\n                var url = username ? server.url + 'users/' + username : server.url + 'users/';\n                $http.get(url).\n                success(function (data) {\n                    deferred.resolve(data);\n                }).\n                error(function (data) {\n                    deferred.reject('rejected: ' + data);\n                });\n\n                return deferred.promise;\n            },\n            update: function update(user) {\n                var deferred = $q.defer;\n                $http.patch(server.url + 'users/' + user.username, { user: user }).\n                success(function (data) {\n\n                }).\n                error(function (data) {\n                    deferred.reject('rejected: ' + data);\n                });\n                return deferred.promise;\n            } };\n\n    }\n\n    module.exports = UserService;\n\n})();\n\n},{}],14:[function(require,module,exports){\n'use strict';(function () {\n    'use strict';\n\n    angular.\n    module('drawbook').\n    controller('UserController', UserController);\n\n    UserController.$inject = ['$stateParams', 'UserService', 'ImageService', 'user'];\n\n    /* @ngInject */\n    function UserController($stateParams, UserService, ImageService, user) {\n        var vm = this;\n        vm.title = 'UserController';\n        vm.images = [];\n        vm.user = user.user;\n\n\n        ////////////////\n\n        /*function deleteImage(_id, index) {\r\n            ImageService.delete(_id, vm.user.username)\r\n                .then(function (res){\r\n                    delete vm.user.images[index];\r\n                })\r\n                .catch(function (res){});\r\n        }*/\n    }\n\n    module.exports = UserController;\n\n})();\n\n},{}],15:[function(require,module,exports){\n'use strict';(function () {\n    'use strict';\n\n    angular.\n    module('drawbook').\n    controller('UserGalleryController', UserGalleryController);\n\n    UserGalleryController.$inject = ['user', 'ImageService', '$state'];\n\n    /* @ngInject */\n    function UserGalleryController(user, ImageService, $state) {\n        var vm = this;\n        vm.title = 'UserGalleryController';\n        vm.user = user.user;\n        vm.images = [];\n\n        var limit = 12;\n\n        vm.loadMore = loadMore;\n\n        init();\n\n        ////////////////////\n\n        function init() {\n            vm.loaded = vm.user.images.length < limit ? vm.user.images.length : limit;\n            for (var i = 0; i < vm.loaded; i++) {\n                ImageService.get(vm.user.username, vm.user.images[i]._id).\n                then(function (res) {\n                    vm.images.push(res.data.data);\n                }).\n                catch(function (res) {});\n            }\n        }\n\n        function loadMore() {\n            vm.current = vm.loaded;\n            vm.loaded = vm.user.images.length < vm.loaded + limit ? vm.user.images.length : vm.loaded + limit;\n\n            console.log('current: ' + vm.current);\n            console.log('loaded: ' + vm.loaded);\n\n            for (var i = vm.current; i < vm.loaded; i++) {\n                ImageService.get(vm.user.username, vm.user.images[i]._id).\n                then(function (res) {\n                    vm.images.push(res.data.data);\n                }).\n                catch(function (res) {});\n            }\n            console.log(vm.images);\n        }\n\n\n\n    }\n\n    module.exports = UserGalleryController;\n\n})();\n\n},{}],16:[function(require,module,exports){\n'use strict';(function () {\n    'use strict';\n\n    angular.\n    module('drawbook').\n    controller('UserImageController', UserImageController);\n\n    UserImageController.$inject = ['$stateParams', 'ImageService', 'user', '$state', '$scope', 'CommentService', 'localStorageService'];\n\n    /* @ngInject */\n    function UserImageController($stateParams, ImageService, user, $state, $scope, CommentService, localStorageService) {\n\n        var vm = this;\n        vm.title = 'UserImageController';\n        vm.user = user.user;\n        vm.index = $stateParams.index;\n        vm.navigate = navigate;\n        vm.addComment = addComment;\n\n        init();\n\n        ////////////////////////////////////\n\n        function init() {\n\n            $(window).on('click', function (event) {\n                if ($(event.target).is('.modal')) {\n                    $state.go('user.gallery', { user: vm.username }).\n                    then(function () {\n                        $scope.$hide();\n                    });\n                }\n            });\n\n            if (vm.index === undefined || vm.index === null) {\n                vm.index = vm.user.images.map(function (e) {return e._id;}).indexOf($stateParams.id);\n            }\n\n            if (vm.user.images.length == 1) {\n                vm.prev = vm.next = undefined;\n            } else if (vm.index == 0) {\n                vm.next = vm.user.images[vm.index + 1]._id;\n                vm.prev = undefined;\n            } else if (vm.index > 0 && vm.index < vm.user.images.length - 1) {\n                vm.prev = vm.user.images[vm.index - 1]._id;\n                vm.next = vm.user.images[vm.index + 1]._id;\n            } else if (vm.index == vm.user.images.length - 1) {\n                vm.prev = vm.user.images[vm.index - 1]._id;\n                vm.next = undefined;\n            }\n\n            ImageService.get(vm.user.username, $stateParams.id).\n            then(function (res) {\n                vm.image = res.data.data;\n            }).\n            catch(function (res) {});\n\n            loadComments();\n\n        }\n\n        function loadComments() {\n            CommentService.get(vm.user.username, $stateParams.id).\n            then(function (res) {\n                vm.comments = res.image.comments;\n                console.log(vm.comments);\n            }).\n            catch(function (res) {});\n        }\n\n        function navigate(keyCode) {\n            if (vm.prev != undefined && keyCode == 37) {// left\n                $state.go('user.gallery.image', { id: vm.prev, index: vm.index - 1 }).\n                then(function () {\n                    $scope.$hide();\n                });\n            } else if (vm.next != undefined && keyCode == 39) {// right\n                $state.go('user.gallery.image', { id: vm.next, index: vm.index + 1 }).\n                then(function () {\n                    $scope.$hide();\n                });\n            } else if (keyCode == 27) {// escape\n                $state.go('user.gallery', { user: vm.username }).\n                then(function () {\n                    $scope.$hide();\n                });\n            }\n        }\n\n\n        function addComment() {\n            CommentService.post(vm.user.username, $stateParams.id, vm.comment, localStorageService.get('currentUser')).\n            then(function (res) {\n                vm.comment = \"\";\n                loadComments();\n            }).\n            catch(function (res) {});\n        }\n    }\n\n    module.exports = UserImageController;\n\n})();\n\n},{}]},{},[3])\n\n","\r\n'use strict';\r\n\r\nmodule.exports = {\r\n    url: 'http://localhost:5000/api/'\r\n}\r\n","'use strict';\r\n\r\nimport DrawbookStates from './app.routes';\r\nimport AuthConfig from './app.auth';\r\n\r\nimport common from './app/common/drawbook.common';\r\n\r\nangular\r\n    .module('drawbook', [\r\n        'ngAnimate',\r\n        'ui.router',\r\n        'mgcrea.ngStrap',\r\n        'satellizer',\r\n        'LocalStorageModule',\r\n        'ngFileUpload',\r\n         common.name\r\n    ])\r\n    .constant('server', require('./app.constants'))\r\n    .factory('UserService', require('./app/services/UserService'))\r\n    .factory('ImageService', require('./app/services/ImageService'))\r\n    .factory('CommentService', require('./app/services/CommentService'))\r\n    .config(DrawbookStates)\r\n    .config(AuthConfig);\r\n","'use strict';\r\n\r\nimport HomeController from './app/common/HomeController';\r\nimport LoginController from './app/common/LoginController';\r\n\r\nDrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\r\n\r\n/* @ngInject */\r\nexport default function DrawboookStates ($stateProvider, $urlRouterProvider, $locationProvider) {\r\n\r\n    $stateProvider.state('home', {\r\n            url: '/',\r\n            templateUrl: '/app/common/home.tpl.html',\r\n            controller: HomeController,\r\n            controllerAs: 'vm'\r\n        }).\r\n        state('register', {\r\n            url: '/register',\r\n            templateUrl: '/app/common/register.tpl.html',\r\n            controller: require('./app/common/RegisterController'),\r\n            controllerAs: 'vm'\r\n        }).\r\n        state('login', {\r\n            url: '/login',\r\n            templateUrl: '/app/common/login.tpl.html',\r\n            controller: LoginController,\r\n            controllerAs: 'vm'\r\n        })\r\n        .state('draw', {\r\n            url: '/draw',\r\n            templateUrl: '/app/draw/draw.tpl.html',\r\n            controller: require('./app/draw/DrawController'),\r\n            controllerAs: 'vm'\r\n        })\r\n        .state('edit', {\r\n            url: '/edit',\r\n            templateUrl: '/app/common/profile-edit.tpl.html',\r\n            controller: require('./app/common/ProfileEditController'),\r\n            controllerAs: 'vm'\r\n        })\r\n        .state('user', {\r\n            abstract: true,\r\n            url: '/:username',\r\n            templateUrl: '/app/user/user.tpl.html',\r\n            controller: require('./app/user/UserController'),\r\n            controllerAs: 'vm',\r\n            resolve: {\r\n                user: ['$stateParams', 'UserService', ($stateParams, UserService) => UserService.get($stateParams.username)\r\n                ]\r\n            }\r\n        })\r\n        .state('user.gallery', {\r\n            url: '/',\r\n            templateUrl: '/app/user/user.gallery.tpl.html',\r\n            controller: require('./app/user/UserGalleryController'),\r\n            controllerAs: 'vm'\r\n        })\r\n        .state('user.gallery.image', {\r\n            url: 'image/:id',\r\n            params: {index: null},\r\n            onEnter: ['$modal', '$state', 'user', '$stateParams', ($modal, $state, user) => {\r\n                $modal({\r\n                    templateUrl: '/app/user/user.image.tpl.html',\r\n                    controller: require('./app/user/UserImageController'),\r\n                    controllerAs: 'vm',\r\n                    resolve: {\r\n                        user: () => user\r\n                    },\r\n                    container: 'body',\r\n                    animation: 'am-fade',\r\n                    backdropAnimation: 'backdrop-anim',\r\n                    position: 'center',\r\n                    keyboard: false,\r\n                    backdrop: false\r\n                });\r\n            }]\r\n        });\r\n\r\n    $urlRouterProvider.otherwise(\"/\");\r\n    $locationProvider.html5Mode(true);\r\n}","'use strict';\r\n\r\nHomeController.$inject = ['$auth', 'localStorageService', 'UserService'];\r\n\r\n/* @ngInject */\r\nexport default function HomeController($auth, localStorageService, UserService) {\r\n    const vm = this;\r\n    vm.title = 'HomeController';\r\n\r\n    vm.user = localStorageService.get(\"currentUser\");\r\n\r\n    vm.isAuthenticated = isAuthenticated;\r\n    vm.logout = logout;\r\n\r\n    if (isAuthenticated()) init();\r\n\r\n    function init() {\r\n        UserService.get()\r\n            .then(res => {\r\n                vm.users = res;\r\n            })\r\n    }\r\n\r\n\r\n    function isAuthenticated() {\r\n        return $auth.isAuthenticated();\r\n    }\r\n\r\n    function logout() {\r\n        $auth.logout();\r\n        localStorageService.remove(\"currentUser\");\r\n    }\r\n}\r\n\r\n\r\n","'use strict';\r\n\r\nLoginController.$inject = ['$state', '$auth', 'localStorageService'];\r\n\r\n/* @ngInject */\r\nexport default function LoginController($state, $auth, localStorageService) {\r\n    const vm = this;\r\n\r\n    vm.title = 'LoginController';\r\n    vm.incorrectLogin = false;\r\n\r\n    vm.login = login;\r\n\r\n    //////////////////////////////////////\r\n\r\n    function login() {\r\n\r\n        let user = {\r\n            username: vm.user.name,\r\n            password: vm.user.password\r\n        };\r\n\r\n        $auth.login(user)\r\n            .then(function(res) {\r\n                localStorageService.set(\"currentUser\", res.data.user);\r\n                $state.go('home');\r\n            })\r\n            .catch(function(res) {\r\n                console.log('Error: ' + res);\r\n                vm.incorrectLogin = true;\r\n            });\r\n    }\r\n}\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('ProfileEditController', ProfileEditController);\r\n\r\n    ProfileEditController.$inject = ['$state', 'localStorageService', 'UserService', 'Upload', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ProfileEditController($state, localStorageService, UserService, Upload, server) {\r\n        const vm = this;\r\n        vm.title = 'ProfileEditController';\r\n        vm.genders = ['Male', 'Female'];\r\n\r\n        vm.edit = edit;\r\n        vm.upload = upload;\r\n\r\n        let username = localStorageService.get('currentUser').username;\r\n\r\n        init();\r\n\r\n        ////////////////////////////////////////////\r\n\r\n\r\n        function init() {\r\n            UserService.get(username)\r\n                .then(res => {\r\n                    vm.user = res.user;\r\n                    vm.avatarPath = vm.user.avatarPath || 'img/default-avatar.jpg';\r\n                })\r\n                .catch(res => {});\r\n        }\r\n\r\n        function edit() {\r\n            UserService.update(vm.user);\r\n            upload();\r\n            $state.go('home');\r\n        }\r\n\r\n        function upload() {\r\n            let file = vm.file;\r\n\r\n            if (file) {\r\n\r\n                file.upload = Upload.upload({\r\n                    url: server.url + '/users/' + vm.user.username + '/images/avatar',\r\n                    data: {file: file}\r\n                });\r\n\r\n                file.upload.then(function (res) {\r\n                    file.result = res;\r\n                }, res => {\r\n                    if (res.status > 0) {\r\n                        vm.errorMsg = res.status + ': ' + res.data;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    module.exports = ProfileEditController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function RegisterController($state, $auth, UserService, localStorageService) {\r\n        const vm = this;\r\n\r\n        vm.title = 'RegisterController';\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.takenUsername = false;\r\n\r\n        vm.checkUsername = checkUsername;\r\n        vm.register = register;\r\n\r\n        ////////////////\r\n\r\n        function checkUsername() {\r\n            UserService.get(vm.user.username)\r\n                .then(res => {\r\n                    vm.takenUsername = res.user != null;\r\n                })\r\n                .catch(res => {});\r\n        }\r\n\r\n        function register() {\r\n            let user = {\r\n                username: vm.user.username,\r\n                password: vm.user.password,\r\n                firstName: vm.user.firstName,\r\n                lastName: vm.user.lastName,\r\n                age: vm.user.age,\r\n                gender: vm.user.gender\r\n            };\r\n            $auth.signup(user)\r\n                .then(res => {\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    $auth.login(user)\r\n                        .then(res => {\r\n                            $state.go('home');\r\n                        })\r\n                        .catch(res =>{});\r\n                })\r\n                .catch(res =>{});\r\n        }\r\n\r\n    }\r\n\r\n    module.exports = RegisterController;\r\n\r\n})();\r\n\r\n","'use strict';\r\n\r\nimport HomeController from './HomeController';\r\nimport LoginController from './LoginController';\r\n\r\nconst module =\r\n    angular.module('drawbook.common', [\r\n\r\n    ])\r\n        .controller(HomeController)\r\n        .controller(LoginController);\r\n\r\nexport default module;","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('DrawController', DrawController);\r\n\r\n    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function DrawController($state, localStorageService, ImageService) {\r\n        const vm = this;\r\n        vm.title = 'DrawController';\r\n        \r\n        vm.saveImage = saveImage;\r\n\r\n        ///////////////////////////////\r\n\r\n        function saveImage() {\r\n\r\n            let tmpcanvas = $('<canvas>').attr({width: 600, height: 600});\r\n            let tmpcontext = tmpcanvas[0].getContext('2d');\r\n            let arr = [];\r\n\r\n            $('.canvas').each(() => {\r\n                arr.push({\r\n                    canvas: $(this),\r\n                    zindex: parseInt($(this).css(\"z-index\"))\r\n                })\r\n            });\r\n\r\n            arr.sort((a, b) => a.zindex - b.zindex);\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);\r\n            }\r\n\r\n            let img = tmpcanvas[0].toDataURL();\r\n            let username = localStorageService.get(\"currentUser\").username;\r\n\r\n            ImageService.post(username, img, vm.imagetitle)\r\n                .then(res => {\r\n                    $state.go('home');\r\n                })\r\n                .catch(res => {});\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = DrawController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    CommentService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function CommentService($q, $http, server) {\r\n\r\n        return {\r\n            post: (username, imageid, comment, currentUser) => {\r\n                let deferred = $q.defer();\r\n\r\n                $http.post(server.url + '/users/' + username + '/images/' + imageid + '/comments/',\r\n                    {\r\n                        author: currentUser.username,\r\n                        authorAvatar: currentUser.avatarPath,\r\n                        comment: comment\r\n                    })\r\n                    .success(data => {deferred.resolve(data);})\r\n                    .error(data => {deferred.reject(data);});\r\n\r\n                return deferred.promise;\r\n            },\r\n            get: (user, imageid) => {\r\n                let deferred = $q.defer();\r\n\r\n                $http.get(server.url + '/users/' + user.username + '/images/' + imageid)\r\n                    .success(data => {deferred.resolve(data);})\r\n                    .error(data => {deferred.reject(data);});\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = CommentService;\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    ImageService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ImageService($q, $http, server) {\r\n\r\n        return {\r\n            get: (username, id) => {\r\n\r\n                let deferred = $q.defer();\r\n                $http({\r\n                        method: 'GET',\r\n                        url: server.url + 'users/' + username + '/images/' + id,\r\n                        headers: {'Content-Type': 'images/png'}\r\n                    })\r\n                    .then(function (data) {\r\n                        deferred.resolve({data: data, id: id});\r\n                    }, function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            post: function (username, img, title) {\r\n                var deferred = $q.defer();\r\n                $http.post(server.url + 'users/' + username + '/images/', {\r\n                        \"title\": title,\r\n                        \"image\": img\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            delete: function (id, username) {\r\n                var deferred = $q.defer();\r\n                $http.delete(server.url + 'users/' + username + '/images/' + id)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = ImageService;\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    UserService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function UserService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username) {\r\n                var deferred = $q.defer();\r\n                var url = username ? server.url + 'users/' + username : server.url + 'users/';\r\n                $http.get(url)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            update: function(user) {\r\n                var deferred = $q.defer;\r\n                $http.patch(server.url + 'users/' + user.username, {user: user})\r\n                    .success(function (data) {\r\n\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n\r\n    module.exports = UserService;\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserController', UserController);\r\n\r\n    UserController.$inject = ['$stateParams', 'UserService', 'ImageService', 'user'];\r\n\r\n    /* @ngInject */\r\n    function UserController($stateParams, UserService, ImageService, user) {\r\n        var vm = this;\r\n        vm.title = 'UserController';\r\n        vm.images = [];\r\n        vm.user = user.user;\r\n\r\n\r\n        ////////////////\r\n\r\n        /*function deleteImage(_id, index) {\r\n            ImageService.delete(_id, vm.user.username)\r\n                .then(function (res){\r\n                    delete vm.user.images[index];\r\n                })\r\n                .catch(function (res){});\r\n        }*/\r\n    }\r\n\r\n    module.exports = UserController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserGalleryController', UserGalleryController);\r\n\r\n    UserGalleryController.$inject = ['user', 'ImageService', '$state'];\r\n\r\n    /* @ngInject */\r\n    function UserGalleryController(user, ImageService, $state) {\r\n        var vm = this;\r\n        vm.title = 'UserGalleryController';\r\n        vm.user = user.user;\r\n        vm.images = [];\r\n\r\n        const limit = 12;\r\n\r\n        vm.loadMore = loadMore;\r\n\r\n        init();\r\n\r\n        ////////////////////\r\n\r\n        function init(){\r\n            vm.loaded = vm.user.images.length < limit ? vm.user.images.length : limit;\r\n            for (var i = 0; i < vm.loaded; i++) {\r\n                ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push(res.data.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n        }\r\n\r\n        function loadMore() {\r\n            vm.current = vm.loaded;\r\n            vm.loaded = vm.user.images.length < vm.loaded + limit ? vm.user.images.length : vm.loaded + limit;\r\n\r\n            console.log('current: ' + vm.current);\r\n            console.log('loaded: ' + vm.loaded);\r\n\r\n             for (var i = vm.current; i < vm.loaded; i++) {\r\n                ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push(res.data.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n            console.log(vm.images);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    module.exports = UserGalleryController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserImageController', UserImageController);\r\n\r\n    UserImageController.$inject = ['$stateParams', 'ImageService', 'user', '$state', '$scope', 'CommentService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function UserImageController($stateParams, ImageService, user, $state, $scope, CommentService, localStorageService) {\r\n\r\n        var vm = this;\r\n        vm.title = 'UserImageController';\r\n        vm.user = user.user;\r\n        vm.index = $stateParams.index;\r\n        vm.navigate = navigate;\r\n        vm.addComment = addComment;\r\n\r\n        init();\r\n\r\n        ////////////////////////////////////\r\n\r\n        function init() {\r\n\r\n            $(window).on('click', function(event) {\r\n                if ($(event.target).is('.modal')) {\r\n                    $state.go('user.gallery', {user: vm.username})\r\n                        .then(function() {\r\n                            $scope.$hide();\r\n                        });\r\n                }\r\n            });\r\n\r\n            if (vm.index === undefined || vm.index === null) {\r\n                vm.index = vm.user.images.map(function (e) {return e._id}).indexOf($stateParams.id);\r\n            }\r\n\r\n            if (vm.user.images.length == 1) {\r\n                vm.prev = vm.next = undefined;\r\n            } else if (vm.index == 0) {\r\n                vm.next = vm.user.images[vm.index+1]._id;\r\n                vm.prev = undefined;\r\n            } else if (vm.index > 0 && vm.index < vm.user.images.length-1) {\r\n                vm.prev = vm.user.images[vm.index-1]._id;\r\n                vm.next = vm.user.images[vm.index+1]._id;\r\n            } else if (vm.index == vm.user.images.length-1) {\r\n                vm.prev = vm.user.images[vm.index-1]._id;\r\n                vm.next = undefined;\r\n            }\r\n\r\n            ImageService.get(vm.user.username, $stateParams.id)\r\n                .then(function (res) {\r\n                    vm.image = res.data.data;\r\n                })\r\n                .catch(function (res) {});\r\n\r\n            loadComments();\r\n\r\n        }\r\n\r\n        function loadComments() {\r\n            CommentService.get(vm.user.username, $stateParams.id)\r\n                .then(function (res) {\r\n                    vm.comments = res.image.comments;\r\n                    console.log(vm.comments);\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function navigate(keyCode) {\r\n            if (vm.prev != undefined && keyCode == 37) { // left\r\n                $state.go('user.gallery.image', {id: vm.prev, index: vm.index-1})\r\n                    .then(function() {\r\n                        $scope.$hide();\r\n                    });\r\n            } else if (vm.next != undefined && keyCode == 39) { // right\r\n                $state.go('user.gallery.image', {id: vm.next, index: vm.index+1})\r\n                    .then(function() {\r\n                        $scope.$hide();\r\n                    });\r\n            } else if (keyCode == 27) { // escape\r\n                $state.go('user.gallery', {user: vm.username})\r\n                    .then(function() {\r\n                        $scope.$hide();\r\n                    });\r\n            }\r\n        }\r\n\r\n\r\n        function addComment() {\r\n            CommentService.post(vm.user.username, $stateParams.id, vm.comment, localStorageService.get('currentUser'))\r\n                .then(function (res) {\r\n                    vm.comment = \"\";\r\n                    loadComments();\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n    }\r\n\r\n    module.exports = UserImageController;\r\n\r\n})();\r\n\r\n"],"sourceRoot":"/source/"}