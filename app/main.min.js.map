{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/app.auth.js","main.min.js","app/app.constants.js","app/app.js","app/app.routes.js","app/app/common/HomeController.js","app/app/common/LoginController.js","app/app/common/ProfileEditController.js","app/app/common/RegisterController.js","app/app/draw/DrawController.js","app/app/services/ImageService.js","app/app/services/UserService.js","app/app/user/UserController.js","app/app/user/UserGalleryController.js","app/app/user/UserImageController.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","AuthConfig","$authProvider","server","baseUrl","url","signupUrl","loginUrl","$inject",2,3,"angular","constant","factory","config","./app.auth","./app.constants","./app.routes","./app/services/ImageService","./app/services/UserService",4,"DrawboookStates","$stateProvider","$urlRouterProvider","$locationProvider","state","templateUrl","controller","controllerAs","abstract","resolve","user","$stateParams","UserService","get","username","params","index","otherwise","html5Mode","./app/common/HomeController","./app/common/LoginController","./app/common/ProfileEditController","./app/common/RegisterController","./app/draw/DrawController","./app/user/UserController","./app/user/UserGalleryController","./app/user/UserImageController",5,"HomeController","$auth","localStorageService","isAuthenticated","logout","remove","vm","this","title",6,"LoginController","$state","login","name","password","then","res","set","data","go","console","log","incorrectLogin",7,"ProfileEditController","init","edit","update","genders",8,"RegisterController","checkUsername","takenUsername","register","firstName","lastName","age","gender","signup",9,"DrawController","ImageService","saveImage","tmpcanvas","$","attr","width","height","tmpcontext","getContext","arr","each","push","canvas","zindex","parseInt","css","sort","b","drawImage","img","toDataURL","post",10,"$q","$http","id","deferred","defer","method","headers","Content-Type","reject","promise","image","success","error","delete",11,"patch",12,"UserController","images",13,"UserGalleryController","loaded","limit","_id","loadMore","current",14,"UserImageController","undefined","map","indexOf","prev","next"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function () {\r\n    'use strict';\r\n\r\n    AuthConfig.$inject = ['$authProvider', 'server'];\r\n\r\n\r\n    /* @ngInject */\r\n    function AuthConfig ($authProvider, server) {\r\n        $authProvider.baseUrl = server.url;\r\n\r\n        $authProvider.signupUrl = '/users/register';\r\n        $authProvider.loginUrl = '/users/login';\r\n    }\r\n\r\n    module.exports = AuthConfig;\r\n\r\n})();","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    AuthConfig.$inject = ['$authProvider', 'server'];\r\n\r\n\r\n    /* @ngInject */\r\n    function AuthConfig ($authProvider, server) {\r\n        $authProvider.baseUrl = server.url;\r\n\r\n        $authProvider.signupUrl = '/users/register';\r\n        $authProvider.loginUrl = '/users/login';\r\n    }\r\n\r\n    module.exports = AuthConfig;\r\n\r\n})();\n},{}],2:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    module.exports = {\r\n        url: 'http://localhost:5000/api/'\r\n    }\r\n\r\n})();\n},{}],3:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook', [\r\n            'ngAnimate',\r\n            'ui.router',\r\n            'mgcrea.ngStrap',\r\n            'satellizer',\r\n            'LocalStorageModule'\r\n        ])\r\n        .constant('server', require('./app.constants'))\r\n        .factory('UserService', require('./app/services/UserService'))\r\n        .factory('ImageService', require('./app/services/ImageService'))\r\n        .config(require('./app.routes'))\r\n        .config(require('./app.auth'));\r\n})();\n},{\"./app.auth\":1,\"./app.constants\":2,\"./app.routes\":4,\"./app/services/ImageService\":10,\"./app/services/UserService\":11}],4:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    DrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\r\n\r\n\r\n    /* @ngInject */\r\n    function DrawboookStates ($stateProvider, $urlRouterProvider, $locationProvider) {\r\n        $stateProvider.state('home', {\r\n                url: '/',\r\n                templateUrl: '/app/common/home.tpl.html',\r\n                controller: require('./app/common/HomeController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('register', {\r\n                url: '/register',\r\n                templateUrl: '/app/common/register.tpl.html',\r\n                controller: require('./app/common/RegisterController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('login', {\r\n                url: '/login',\r\n                templateUrl: '/app/common/login.tpl.html',\r\n                controller: require('./app/common/LoginController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('draw', {\r\n                url: '/draw',\r\n                templateUrl: '/app/draw/draw.tpl.html',\r\n                controller: require('./app/draw/DrawController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('edit', {\r\n                url: '/edit',\r\n                templateUrl: '/app/common/profile-edit.tpl.html',\r\n                controller: require('./app/common/ProfileEditController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user', {\r\n                abstract: true,\r\n                url: '/:username',\r\n                templateUrl: '/app/user/user.tpl.html',\r\n                controller: require('./app/user/UserController'),\r\n                controllerAs: 'vm',\r\n                resolve: {\r\n                    user: ['$stateParams', 'UserService', function($stateParams, UserService) {\r\n                        return UserService.get($stateParams.username);\r\n                    }]\r\n                }\r\n            })\r\n            .state('user.gallery', {\r\n                url: '/',\r\n                templateUrl: '/app/user/user.gallery.tpl.html',\r\n                controller: require('./app/user/UserGalleryController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user.image', {\r\n                url: '/image/:id',\r\n                templateUrl: '/app/user/user.image.tpl.html',\r\n                controller: require('./app/user/UserImageController'),\r\n                controllerAs: 'vm',\r\n                params: {\r\n                    index: null\r\n                }\r\n            });\r\n\r\n\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        $locationProvider.html5Mode(true);\r\n\r\n    }\r\n\r\n    module.exports = DrawboookStates;\r\n\r\n})();\n},{\"./app/common/HomeController\":5,\"./app/common/LoginController\":6,\"./app/common/ProfileEditController\":7,\"./app/common/RegisterController\":8,\"./app/draw/DrawController\":9,\"./app/user/UserController\":12,\"./app/user/UserGalleryController\":13,\"./app/user/UserImageController\":14}],5:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function HomeController($auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'HomeController';\r\n\r\n        vm.user = localStorageService.get(\"currentUser\");\r\n\r\n        vm.isAuthenticated = isAuthenticated;\r\n        vm.logout = logout;\r\n        \r\n        function isAuthenticated() {\r\n            return $auth.isAuthenticated();\r\n        }\r\n\r\n        function logout() {\r\n            $auth.logout();\r\n            localStorageService.remove(\"currentUser\");\r\n        }\r\n    }\r\n\r\n    module.exports = HomeController;\r\n\r\n})();\r\n\r\n\n},{}],6:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$state', '$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function LoginController($state, $auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'LoginController';\r\n\r\n        vm.login = login;\r\n\r\n        vm.incorrectLogin = false;\r\n\r\n        function login() {\r\n\r\n            var user = {\r\n                username: vm.user.name,\r\n                password: vm.user.password\r\n            };\r\n\r\n            $auth.login(user)\r\n                .then(function(res) {\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    //$window.localStorage.currentUser = JSON.stringify(res.data.user);\r\n                    //$rootScope.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n                    $state.go('home');\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('error: ' + res);\r\n                    vm.incorrectLogin = true;\r\n                });\r\n        }\r\n    }\r\n    module.exports = LoginController;\r\n})();\r\n\r\n\n},{}],7:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('ProfileEditController', ProfileEditController);\r\n\r\n    ProfileEditController.$inject = ['$state', 'localStorageService', 'UserService'];\r\n\r\n    /* @ngInject */\r\n    function ProfileEditController($state, localStorageService, UserService) {\r\n        var vm = this;\r\n        vm.title = 'ProfileEditController';\r\n        vm.edit = edit;\r\n        vm.genders = ['Male', 'Female'];\r\n\r\n        ////////////////////////////////////////////\r\n\r\n        init();\r\n\r\n        function init() {\r\n            UserService.get(localStorageService.get('currentUser').username)\r\n                .then(function (res) {\r\n                    vm.user = res.user;\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function edit() {\r\n            UserService.update(vm.user);\r\n            $state.go('home');\r\n        }\r\n    }\r\n\r\n    module.exports = ProfileEditController;\r\n\r\n})();\r\n\r\n\n},{}],8:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function RegisterController($state, $auth, UserService, localStorageService) {\r\n        var vm = this;\r\n\r\n        vm.title = 'RegisterController';\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.takenUsername = false;\r\n\r\n        vm.checkUsername = checkUsername;\r\n        vm.register = register;\r\n\r\n        ////////////////\r\n\r\n        function checkUsername() {\r\n            UserService.get(vm.user.username)\r\n                .then(function (res) {\r\n                    vm.takenUsername = res.user != null;\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Server problem');\r\n                });\r\n        }\r\n\r\n        function register() {\r\n            var user = {\r\n                username: vm.user.username,\r\n                password: vm.user.password,\r\n                firstName: vm.user.firstName,\r\n                lastName: vm.user.lastName,\r\n                age: vm.user.age,\r\n                gender: vm.user.gender\r\n            };\r\n\r\n            $auth.signup(user)\r\n                .then(function(res) {\r\n                    console.log(res);\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    $auth.login(user)\r\n                        .then(function (res) {\r\n                            $state.go('home');\r\n                        })\r\n                        .catch(function (res) {\r\n                            console.log('Error ' + res);\r\n                        });\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Error ' + res);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    module.exports = RegisterController;\r\n\r\n})();\r\n\r\n\n},{}],9:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('DrawController', DrawController);\r\n\r\n    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function DrawController($state, localStorageService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'DrawController';\r\n        \r\n        vm.saveImage = saveImage;\r\n        //var jq = $.noConflict();\r\n\r\n        ///////////////////////////////\r\n\r\n        function saveImage() {\r\n\r\n\r\n            var tmpcanvas = $('<canvas>').attr({width: 600, height: 600});\r\n            var tmpcontext = tmpcanvas[0].getContext(\"2d\");\r\n\r\n            var arr = [];\r\n\r\n            $('.canvas').each(function() {\r\n                arr.push({\r\n                    canvas: $(this),\r\n                    zindex: parseInt($(this).css(\"z-index\"))\r\n                })\r\n            });\r\n\r\n            arr.sort(function(a, b) {\r\n                return (a.zindex - b.zindex);\r\n            });\r\n\r\n            for (var i = 0; i < arr.length; i++) {\r\n                tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);\r\n            }\r\n\r\n            var img = tmpcanvas[0].toDataURL();\r\n            var username = localStorageService.get(\"currentUser\").username;\r\n\r\n            ImageService.post(username, img)\r\n                .then(function (res) {\r\n                    $state.go('home');\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = DrawController;\r\n\r\n})();\r\n\r\n\n},{}],10:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    ImageService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ImageService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username, id) {\r\n\r\n                var deferred = $q.defer();\r\n                $http({\r\n                        method: 'GET',\r\n                        url: server.url + 'users/' + username + '/images/' + id,\r\n                        headers: {'Content-Type': 'images/png'}\r\n                    })\r\n                    .then(function (data) {\r\n                        deferred.resolve({data: data, id: id});\r\n                    }, function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            post: function (username, img) {\r\n                var deferred = $q.defer();\r\n                $http.post(server.url + 'users/' + username + '/images/', {\r\n                        \"title\": \"teszt kep\",\r\n                        \"image\": img\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            delete: function (id, username) {\r\n                var deferred = $q.defer();\r\n                $http.delete(server.url + 'users/' + username + '/images/' + id)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = ImageService;\r\n\r\n})();\r\n\n},{}],11:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    UserService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function UserService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username) {\r\n                var deferred = $q.defer();\r\n                $http.get(server.url + 'users/' + username)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            update: function(user) {\r\n                var deferred = $q.defer;\r\n                $http.patch(server.url + 'users/' + user.username, {user: user})\r\n                    .success(function (data) {\r\n\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n\r\n    module.exports = UserService;\r\n\r\n})();\r\n\n},{}],12:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserController', UserController);\r\n\r\n    UserController.$inject = ['$stateParams', 'UserService', 'ImageService', 'user'];\r\n\r\n    /* @ngInject */\r\n    function UserController($stateParams, UserService, ImageService, user) {\r\n        var vm = this;\r\n        vm.title = 'UserController';\r\n        vm.images = [];\r\n        vm.user = user.user;\r\n\r\n\r\n        ////////////////\r\n\r\n        /*function deleteImage(_id, index) {\r\n            ImageService.delete(_id, vm.user.username)\r\n                .then(function (res){\r\n                    delete vm.user.images[index];\r\n                })\r\n                .catch(function (res){});\r\n        }*/\r\n    }\r\n\r\n    module.exports = UserController;\r\n\r\n})();\r\n\r\n\n},{}],13:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserGalleryController', UserGalleryController);\r\n\r\n    UserGalleryController.$inject = ['user', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function UserGalleryController(user, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'UserGalleryController';\r\n        vm.user = user.user;\r\n        vm.images = [];\r\n\r\n        const limit = 5;\r\n\r\n        vm.loadMore = loadMore;\r\n\r\n        init();\r\n\r\n        ////////////////////\r\n\r\n        function init(){\r\n            vm.loaded = vm.user.images.length < limit ? vm.user.images.length : limit;\r\n            for (var i = 0; i < vm.loaded; i++) {\r\n                ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push(res.data.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n        }\r\n\r\n        function loadMore() {\r\n            console.log('asd');\r\n            vm.current = vm.loaded;\r\n            vm.loaded = vm.user.images.length < vm.loaded + limit ? vm.user.images.length : vm.loaded + limit;\r\n\r\n            console.log('current: ' + vm.current);\r\n            console.log('loaded: ' + vm.loaded);\r\n\r\n             for (var i = vm.current; i < vm.loaded; i++) {\r\n                ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push(res.data.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n            console.log(vm.images);\r\n        }\r\n\r\n    }\r\n\r\n    module.exports = UserGalleryController;\r\n\r\n})();\r\n\r\n\n},{}],14:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserImageController', UserImageController);\r\n\r\n    UserImageController.$inject = ['$stateParams', 'ImageService', 'user'];\r\n\r\n    /* @ngInject */\r\n    function UserImageController($stateParams, ImageService, user) {\r\n        var vm = this;\r\n        vm.title = 'UserImageController';\r\n        vm.user = user.user;\r\n        vm.index = $stateParams.index;\r\n\r\n        init();\r\n\r\n        ////////////////////////////////////\r\n\r\n        function init() {\r\n\r\n            if (vm.index === undefined || vm.index === null) {\r\n                vm.index = vm.user.images.map(function (e) {return e._id}).indexOf($stateParams.id);\r\n            }\r\n\r\n            if (vm.user.images.length == 1) {\r\n                vm.prev = vm.next = undefined;\r\n            } else if (vm.index == 0) {\r\n                vm.next = vm.user.images[vm.index+1]._id;\r\n                vm.prev = undefined;\r\n            } else if (vm.index > 0 && vm.index < vm.user.images.length-1) {\r\n                vm.prev = vm.user.images[vm.index-1]._id;\r\n                vm.next = vm.user.images[vm.index+1]._id;\r\n            } else if (vm.index == vm.user.images.length-1) {\r\n                vm.prev = vm.user.images[vm.index-1]._id;\r\n                vm.next = undefined;\r\n            }\r\n\r\n            ImageService.get(vm.user.username, $stateParams.id)\r\n                .then(function (res) {\r\n                    vm.image = res.data.data;\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n    }\r\n\r\n    module.exports = UserImageController;\r\n\r\n})();\r\n\r\n\n},{}]},{},[3])\n\n","(function () {\r\n    'use strict';\r\n\r\n    module.exports = {\r\n        url: 'http://localhost:5000/api/'\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook', [\r\n            'ngAnimate',\r\n            'ui.router',\r\n            'mgcrea.ngStrap',\r\n            'satellizer',\r\n            'LocalStorageModule'\r\n        ])\r\n        .constant('server', require('./app.constants'))\r\n        .factory('UserService', require('./app/services/UserService'))\r\n        .factory('ImageService', require('./app/services/ImageService'))\r\n        .config(require('./app.routes'))\r\n        .config(require('./app.auth'));\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    DrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\r\n\r\n\r\n    /* @ngInject */\r\n    function DrawboookStates ($stateProvider, $urlRouterProvider, $locationProvider) {\r\n        $stateProvider.state('home', {\r\n                url: '/',\r\n                templateUrl: '/app/common/home.tpl.html',\r\n                controller: require('./app/common/HomeController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('register', {\r\n                url: '/register',\r\n                templateUrl: '/app/common/register.tpl.html',\r\n                controller: require('./app/common/RegisterController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('login', {\r\n                url: '/login',\r\n                templateUrl: '/app/common/login.tpl.html',\r\n                controller: require('./app/common/LoginController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('draw', {\r\n                url: '/draw',\r\n                templateUrl: '/app/draw/draw.tpl.html',\r\n                controller: require('./app/draw/DrawController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('edit', {\r\n                url: '/edit',\r\n                templateUrl: '/app/common/profile-edit.tpl.html',\r\n                controller: require('./app/common/ProfileEditController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user', {\r\n                abstract: true,\r\n                url: '/:username',\r\n                templateUrl: '/app/user/user.tpl.html',\r\n                controller: require('./app/user/UserController'),\r\n                controllerAs: 'vm',\r\n                resolve: {\r\n                    user: ['$stateParams', 'UserService', function($stateParams, UserService) {\r\n                        return UserService.get($stateParams.username);\r\n                    }]\r\n                }\r\n            })\r\n            .state('user.gallery', {\r\n                url: '/',\r\n                templateUrl: '/app/user/user.gallery.tpl.html',\r\n                controller: require('./app/user/UserGalleryController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user.image', {\r\n                url: '/image/:id',\r\n                templateUrl: '/app/user/user.image.tpl.html',\r\n                controller: require('./app/user/UserImageController'),\r\n                controllerAs: 'vm',\r\n                params: {\r\n                    index: null\r\n                }\r\n            });\r\n\r\n\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        $locationProvider.html5Mode(true);\r\n\r\n    }\r\n\r\n    module.exports = DrawboookStates;\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function HomeController($auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'HomeController';\r\n\r\n        vm.user = localStorageService.get(\"currentUser\");\r\n\r\n        vm.isAuthenticated = isAuthenticated;\r\n        vm.logout = logout;\r\n        \r\n        function isAuthenticated() {\r\n            return $auth.isAuthenticated();\r\n        }\r\n\r\n        function logout() {\r\n            $auth.logout();\r\n            localStorageService.remove(\"currentUser\");\r\n        }\r\n    }\r\n\r\n    module.exports = HomeController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$state', '$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function LoginController($state, $auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'LoginController';\r\n\r\n        vm.login = login;\r\n\r\n        vm.incorrectLogin = false;\r\n\r\n        function login() {\r\n\r\n            var user = {\r\n                username: vm.user.name,\r\n                password: vm.user.password\r\n            };\r\n\r\n            $auth.login(user)\r\n                .then(function(res) {\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    //$window.localStorage.currentUser = JSON.stringify(res.data.user);\r\n                    //$rootScope.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n                    $state.go('home');\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('error: ' + res);\r\n                    vm.incorrectLogin = true;\r\n                });\r\n        }\r\n    }\r\n    module.exports = LoginController;\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('ProfileEditController', ProfileEditController);\r\n\r\n    ProfileEditController.$inject = ['$state', 'localStorageService', 'UserService'];\r\n\r\n    /* @ngInject */\r\n    function ProfileEditController($state, localStorageService, UserService) {\r\n        var vm = this;\r\n        vm.title = 'ProfileEditController';\r\n        vm.edit = edit;\r\n        vm.genders = ['Male', 'Female'];\r\n\r\n        ////////////////////////////////////////////\r\n\r\n        init();\r\n\r\n        function init() {\r\n            UserService.get(localStorageService.get('currentUser').username)\r\n                .then(function (res) {\r\n                    vm.user = res.user;\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function edit() {\r\n            UserService.update(vm.user);\r\n            $state.go('home');\r\n        }\r\n    }\r\n\r\n    module.exports = ProfileEditController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function RegisterController($state, $auth, UserService, localStorageService) {\r\n        var vm = this;\r\n\r\n        vm.title = 'RegisterController';\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.takenUsername = false;\r\n\r\n        vm.checkUsername = checkUsername;\r\n        vm.register = register;\r\n\r\n        ////////////////\r\n\r\n        function checkUsername() {\r\n            UserService.get(vm.user.username)\r\n                .then(function (res) {\r\n                    vm.takenUsername = res.user != null;\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Server problem');\r\n                });\r\n        }\r\n\r\n        function register() {\r\n            var user = {\r\n                username: vm.user.username,\r\n                password: vm.user.password,\r\n                firstName: vm.user.firstName,\r\n                lastName: vm.user.lastName,\r\n                age: vm.user.age,\r\n                gender: vm.user.gender\r\n            };\r\n\r\n            $auth.signup(user)\r\n                .then(function(res) {\r\n                    console.log(res);\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    $auth.login(user)\r\n                        .then(function (res) {\r\n                            $state.go('home');\r\n                        })\r\n                        .catch(function (res) {\r\n                            console.log('Error ' + res);\r\n                        });\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Error ' + res);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    module.exports = RegisterController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('DrawController', DrawController);\r\n\r\n    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function DrawController($state, localStorageService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'DrawController';\r\n        \r\n        vm.saveImage = saveImage;\r\n        //var jq = $.noConflict();\r\n\r\n        ///////////////////////////////\r\n\r\n        function saveImage() {\r\n\r\n\r\n            var tmpcanvas = $('<canvas>').attr({width: 600, height: 600});\r\n            var tmpcontext = tmpcanvas[0].getContext(\"2d\");\r\n\r\n            var arr = [];\r\n\r\n            $('.canvas').each(function() {\r\n                arr.push({\r\n                    canvas: $(this),\r\n                    zindex: parseInt($(this).css(\"z-index\"))\r\n                })\r\n            });\r\n\r\n            arr.sort(function(a, b) {\r\n                return (a.zindex - b.zindex);\r\n            });\r\n\r\n            for (var i = 0; i < arr.length; i++) {\r\n                tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);\r\n            }\r\n\r\n            var img = tmpcanvas[0].toDataURL();\r\n            var username = localStorageService.get(\"currentUser\").username;\r\n\r\n            ImageService.post(username, img)\r\n                .then(function (res) {\r\n                    $state.go('home');\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = DrawController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    ImageService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ImageService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username, id) {\r\n\r\n                var deferred = $q.defer();\r\n                $http({\r\n                        method: 'GET',\r\n                        url: server.url + 'users/' + username + '/images/' + id,\r\n                        headers: {'Content-Type': 'images/png'}\r\n                    })\r\n                    .then(function (data) {\r\n                        deferred.resolve({data: data, id: id});\r\n                    }, function (data) {\r\n                        deferred.reject(data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            post: function (username, img) {\r\n                var deferred = $q.defer();\r\n                $http.post(server.url + 'users/' + username + '/images/', {\r\n                        \"title\": \"teszt kep\",\r\n                        \"image\": img\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            delete: function (id, username) {\r\n                var deferred = $q.defer();\r\n                $http.delete(server.url + 'users/' + username + '/images/' + id)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = ImageService;\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    UserService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function UserService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username) {\r\n                var deferred = $q.defer();\r\n                $http.get(server.url + 'users/' + username)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            },\r\n            update: function(user) {\r\n                var deferred = $q.defer;\r\n                $http.patch(server.url + 'users/' + user.username, {user: user})\r\n                    .success(function (data) {\r\n\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n\r\n    module.exports = UserService;\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserController', UserController);\r\n\r\n    UserController.$inject = ['$stateParams', 'UserService', 'ImageService', 'user'];\r\n\r\n    /* @ngInject */\r\n    function UserController($stateParams, UserService, ImageService, user) {\r\n        var vm = this;\r\n        vm.title = 'UserController';\r\n        vm.images = [];\r\n        vm.user = user.user;\r\n\r\n\r\n        ////////////////\r\n\r\n        /*function deleteImage(_id, index) {\r\n            ImageService.delete(_id, vm.user.username)\r\n                .then(function (res){\r\n                    delete vm.user.images[index];\r\n                })\r\n                .catch(function (res){});\r\n        }*/\r\n    }\r\n\r\n    module.exports = UserController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserGalleryController', UserGalleryController);\r\n\r\n    UserGalleryController.$inject = ['user', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function UserGalleryController(user, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'UserGalleryController';\r\n        vm.user = user.user;\r\n        vm.images = [];\r\n\r\n        const limit = 5;\r\n\r\n        vm.loadMore = loadMore;\r\n\r\n        init();\r\n\r\n        ////////////////////\r\n\r\n        function init(){\r\n            vm.loaded = vm.user.images.length < limit ? vm.user.images.length : limit;\r\n            for (var i = 0; i < vm.loaded; i++) {\r\n                ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push(res.data.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n        }\r\n\r\n        function loadMore() {\r\n            console.log('asd');\r\n            vm.current = vm.loaded;\r\n            vm.loaded = vm.user.images.length < vm.loaded + limit ? vm.user.images.length : vm.loaded + limit;\r\n\r\n            console.log('current: ' + vm.current);\r\n            console.log('loaded: ' + vm.loaded);\r\n\r\n             for (var i = vm.current; i < vm.loaded; i++) {\r\n                ImageService.get(vm.user.username, vm.user.images[i]._id)\r\n                    .then(function (res) {\r\n                        vm.images.push(res.data.data);\r\n                    })\r\n                    .catch(function (res) {});\r\n            }\r\n            console.log(vm.images);\r\n        }\r\n\r\n    }\r\n\r\n    module.exports = UserGalleryController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserImageController', UserImageController);\r\n\r\n    UserImageController.$inject = ['$stateParams', 'ImageService', 'user'];\r\n\r\n    /* @ngInject */\r\n    function UserImageController($stateParams, ImageService, user) {\r\n        var vm = this;\r\n        vm.title = 'UserImageController';\r\n        vm.user = user.user;\r\n        vm.index = $stateParams.index;\r\n\r\n        init();\r\n\r\n        ////////////////////////////////////\r\n\r\n        function init() {\r\n\r\n            if (vm.index === undefined || vm.index === null) {\r\n                vm.index = vm.user.images.map(function (e) {return e._id}).indexOf($stateParams.id);\r\n            }\r\n\r\n            if (vm.user.images.length == 1) {\r\n                vm.prev = vm.next = undefined;\r\n            } else if (vm.index == 0) {\r\n                vm.next = vm.user.images[vm.index+1]._id;\r\n                vm.prev = undefined;\r\n            } else if (vm.index > 0 && vm.index < vm.user.images.length-1) {\r\n                vm.prev = vm.user.images[vm.index-1]._id;\r\n                vm.next = vm.user.images[vm.index+1]._id;\r\n            } else if (vm.index == vm.user.images.length-1) {\r\n                vm.prev = vm.user.images[vm.index-1]._id;\r\n                vm.next = undefined;\r\n            }\r\n\r\n            ImageService.get(vm.user.username, $stateParams.id)\r\n                .then(function (res) {\r\n                    vm.image = res.data.data;\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n    }\r\n\r\n    module.exports = UserImageController;\r\n\r\n})();\r\n\r\n"],"sourceRoot":"/source/"}