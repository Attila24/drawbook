{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/app.auth.js","main.min.js","app/app.constants.js","app/app.js","app/app.routes.js","app/app/common/HomeController.js","app/app/common/LoginController.js","app/app/common/RegisterController.js","app/app/common/UserController.js","app/app/draw/DrawController.js","app/app/services/ImageService.js","app/app/services/UserService.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","AuthConfig","$authProvider","server","baseUrl","url","signupUrl","loginUrl","$inject","2","3","angular","constant","factory","config","./app.auth","./app.constants","./app.routes","./app/services/ImageService","./app/services/UserService","4","DrawboookStates","$stateProvider","$urlRouterProvider","$locationProvider","state","templateUrl","controller","controllerAs","otherwise","html5Mode","./app/common/HomeController","./app/common/LoginController","./app/common/RegisterController","./app/common/UserController","./app/draw/DrawController","5","HomeController","$auth","localStorageService","$state","isAuthenticated","logout","remove","draw","go","vm","this","title","user","get","6","LoginController","login","username","name","password","then","res","set","data","console","log","incorrectLogin","7","RegisterController","UserService","checkUsername","takenUsername","register","firstName","lastName","age","gender","signup","genders","8","UserController","$stateParams","ImageService","init","deleteImage","_id","9","DrawController","saveImage","post","10","$q","$http","deferred","defer","success","resolve","error","reject","promise","delete","id","11"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,GAAAL,GAAA,kBAAAD,UAAAA,OAAA,KAAA,GAAAH,GAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,ICAA,WACA,YAMA,SAAAK,GAAAC,EAAAC,GACAD,EAAAE,QAAAD,EAAAE,GAEAH,GAAAI,UAAA,iBACAJ,GAAAK,SAAA,eARAN,EAAAO,SAAA,gBAAA,SAWAR,GAAAJ,QAAAK,UCIMQ,GAAG,SAASnB,EAAQU,EAAOJ,IClBjC,WACA,YAEAI,GAAAJ,SACAS,IAAA,sCDuBMK,GAAG,SAASpB,EAAQU,EAAOJ,IE3BjC,WACA,YAEAe,SACAX,OAAA,YACA,YACA,YACA,iBACA,aACA,uBAEAY,SAAA,SAAAtB,EAAA,oBACAuB,QAAA,cAAAvB,EAAA,+BACAuB,QAAA,eAAAvB,EAAA,gCACAwB,OAAAxB,EAAA,iBACAwB,OAAAxB,EAAA,oBF8BGyB,aAAa,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,8BAA8B,GAAGC,6BAA6B,KAAKC,GAAG,SAAS9B,EAAQU,EAAOJ,IG7CrJ,WACA,YAMA,SAAAyB,GAAAC,EAAAC,EAAAC,GACAF,EAAAG,MAAA,QACApB,IAAA,IACAqB,YAAA,4BACAC,WAAArC,EAAA,+BACAsC,aAAA,OAEAH,MAAA,YACApB,IAAA,YACAqB,YAAA,gCACAC,WAAArC,EAAA,mCACAsC,aAAA,OAEAH,MAAA,SACApB,IAAA,SACAqB,YAAA,6BACAC,WAAArC,EAAA,gCACAsC,aAAA,OAEAH,MAAA,QACApB,IAAA,QACAqB,YAAA,0BACAC,WAAArC,EAAA,6BACAsC,aAAA,OAEAH,MAAA,QACApB,IAAA,aACAqB,YAAA,4BACAC,WAAArC,EAAA,+BACAsC,aAAA,MAGAL,GAAAM,UAAA,IAEAL,GAAAM,WAAA,GAtCAT,EAAAb,SAAA,iBAAA,qBAAA,oBA0CAR,GAAAJ,QAAAyB,OHiDGU,8BAA8B,EAAEC,+BAA+B,EAAEC,kCAAkC,EAAEC,8BAA8B,EAAEC,4BAA4B,IAAIC,GAAG,SAAS9C,EAAQU,EAAOJ,II9FnM,WACA,YASA,SAAAyC,GAAAC,EAAAC,EAAAC,GAYA,QAAAC,KACA,MAAAH,GAAAG,kBAGA,QAAAC,KACAJ,EAAAI,QACAH,GAAAI,OAAA,eAIA,QAAAC,KACAJ,EAAAK,GAAA,QAtBA,GAAAC,GAAAC,IACAD,GAAAE,MAAA,gBAIAF,GAAAG,KAAAV,EAAAW,IAAA,cAEAJ,GAAAL,gBAAAA,CACAK,GAAAJ,OAAAA,CACAI,GAAAF,KAAAA,EAjBAjC,QACAX,OAAA,YACA2B,WAAA,iBAAAU,EAEAA,GAAA7B,SAAA,QAAA,sBAAA,SA+BAR,GAAAJ,QAAAyC,UJoGMc,GAAG,SAAS7D,EAAQU,EAAOJ,IK1IjC,WACA,YASA,SAAAwD,GAAAZ,EAAAF,EAAAC,GAQA,QAAAc,KAEA,GAAAJ,IACAK,SAAAR,EAAAG,KAAAM,KACAC,SAAAV,EAAAG,KAAAO,SAGAlB,GAAAe,MAAAJ,GACAQ,KAAA,SAAAC,GACAnB,EAAAoB,IAAA,cAAAD,EAAAE,KAAAX,KAGAT,GAAAK,GAAA,UALAP,SAOA,SAAAoB,GACAG,QAAAC,IAAA,UAAAJ,EACAZ,GAAAiB,gBAAA,IAvBA,GAAAjB,GAAAC,IACAD,GAAAE,MAAA,iBAEAF,GAAAO,MAAAA,CAEAP,GAAAiB,gBAAA,EAbApD,QACAX,OAAA,YACA2B,WAAA,kBAAAyB,EAEAA,GAAA5C,SAAA,SAAA,QAAA,sBA+BAR,GAAAJ,QAAAwD,UL+IMY,GAAG,SAAS1E,EAAQU,EAAOJ,IMrLjC,WACA,YASA,SAAAqE,GAAAzB,EAAAF,EAAA4B,EAAA3B,GAYA,QAAA4B,KACAD,EAAAhB,IAAAJ,EAAAG,KAAAM,MACAE,KAAA,SAAAC,GACAZ,EAAAsB,cAAA,MAAAV,EAAAT,OAFAiB,SAIA,SAAAR,GACAG,QAAAC,IAAA,oBAIA,QAAAO,KACA,GAAApB,IACAK,SAAAR,EAAAG,KAAAM,KACAC,SAAAV,EAAAG,KAAAO,SACAc,UAAAxB,EAAAG,KAAAqB,UACAC,SAAAzB,EAAAG,KAAAsB,SACAC,IAAA1B,EAAAG,KAAAuB,IACAC,OAAA3B,EAAAG,KAAAwB,OAGAnC,GAAAoC,OAAAzB,GACAQ,KAAA,SAAAC,GACAG,QAAAC,IAAAJ,EACAnB,GAAAoB,IAAA,cAAAD,EAAAE,KAAAX,KAEAX,GAAAe,MAAAJ,GACAQ,KAAA,SAAAC,GACAlB,EAAAK,GAAA,UAFAP,SAIA,SAAAoB,GACAG,QAAAC,IAAA,SAAAJ,OAVApB,SAaA,SAAAoB,GACAG,QAAAC,IAAA,SAAAJ,KA7CA,GAAAZ,GAAAC,IAEAD,GAAAE,MAAA,oBACAF,GAAA6B,SAAA,OAAA,SACA7B,GAAAsB,eAAA,CAEAtB,GAAAqB,cAAAA,CACArB,GAAAuB,SAAAA,EAfA1D,QACAX,OAAA,YACA2B,WAAA,qBAAAsC,EAEAA,GAAAzD,SAAA,SAAA,QAAA,cAAA,sBAuDAR,GAAAJ,QAAAqE,UN2LMW,GAAG,SAAStF,EAAQU,EAAOJ,IOzPjC,WACA,YASA,SAAAiF,GAAAC,EAAAZ,EAAAa,GAWA,QAAAC,KACAd,EAAAhB,IAAA4B,EAAAxB,UACAG,KAAA,SAAAC,GACAZ,EAAAG,KAAAS,EAAAT,OAFAiB,SAIA,SAAAR,MAGA,QAAAuB,GAAAC,GACAH,EAAAA,UAAAG,EAAApC,EAAAG,KAAAK,UACAG,KAAA,SAAAC,MADAqB,SAEA,SAAArB,MArBA,GAAAZ,GAAAC,IACAD,GAAAE,MAAA,gBAEAF,GAAAkC,KAAAA,CACAlC,GAAAmC,YAAAA,CAEAD,KAdArE,QACAX,OAAA,YACA2B,WAAA,iBAAAkD,EAEAA,GAAArE,SAAA,eAAA,cAAA,eA8BAR,GAAAJ,QAAAiF,UP+PMM,GAAG,SAAS7F,EAAQU,EAAOJ,IQpSjC,WACA,YASA,SAAAwF,GAAA5C,EAAAD,EAAAwC,GAQA,QAAAM,KACA,GAAA/B,GAAAf,EAAAW,IAAA,eAAAI,QAEAyB,GAAAO,KAAAhC,GACAG,KAAA,SAAAC,GACAlB,EAAAK,GAAA,UAFAkC,SAIA,SAAArB,MAdA,GAAAZ,GAAAC,IACAD,GAAAE,MAAA,gBAEAF,GAAAuC,UAAAA,EAXA1E,QACAX,OAAA,YACA2B,WAAA,iBAAAyD,EAEAA,GAAA5E,SAAA,SAAA,sBAAA,eAuBAR,GAAAJ,QAAAwF,UR0SMG,IAAI,SAASjG,EAAQU,EAAOJ,ISxUlC,WACA,YAKA,SAAAmF,GAAAS,EAAAC,EAAAtF,GAEA,OACAmF,KAAA,SAAAhC,GACA,GAAAoC,GAAAF,EAAAG,OACAF,GAAAH,KAAAnF,EAAAE,IAAA,UAAAiD,EAAA,YACAN,MAAA,cAEA4C,QAAA,SAAAhC,GACA8B,EAAAG,QAAAjC,KAEAkC,MAAA,SAAAlC,GACA8B,EAAAK,OAAA,aAAAnC,IAEA,OAAA8B,GAAAM,SAEAC,SAAA,SAAAC,EAAA5C,GACA,GAAAoC,GAAAF,EAAAG,OACAF,GAAAA,UAAAtF,EAAAE,IAAA,UAAAiD,EAAA,WAAA4C,GACAN,QAAA,SAAAhC,GACA8B,EAAAG,QAAAjC,KAEAkC,MAAA,SAAAlC,GACA8B,EAAAK,OAAA,aAAAnC,IAEA,OAAA8B,GAAAM,UA5BAjB,EAAAvE,SAAA,KAAA,QAAA,SAgCAR,GAAAJ,QAAAmF,UT6UMoB,IAAI,SAAS7G,EAAQU,EAAOJ,IUhXlC,WACA,YAKA,SAAAsE,GAAAsB,EAAAC,EAAAtF,GAEA,OACA+C,IAAA,SAAAI,GACA,GAAAoC,GAAAF,EAAAG,OACAF,GAAAvC,IAAA/C,EAAAE,IAAA,SAAAiD,GACAsC,QAAA,SAAAhC,GACA8B,EAAAG,QAAAjC,KAEAkC,MAAA,SAAAlC,GACA8B,EAAAK,OAAA,aAAAnC,IAGA,OAAA8B,GAAAM,UAhBA9B,EAAA1D,SAAA,KAAA,QAAA,SAqBAR,GAAAJ,QAAAsE,eVqXW","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function () {\r\n    'use strict';\r\n\r\n    AuthConfig.$inject = ['$authProvider', 'server'];\r\n\r\n\r\n    /* @ngInject */\r\n    function AuthConfig ($authProvider, server) {\r\n        $authProvider.baseUrl = server.url;\r\n\r\n        $authProvider.signupUrl = '/users/register';\r\n        $authProvider.loginUrl = '/users/login';\r\n    }\r\n\r\n    module.exports = AuthConfig;\r\n\r\n})();","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    AuthConfig.$inject = ['$authProvider', 'server'];\r\n\r\n\r\n    /* @ngInject */\r\n    function AuthConfig ($authProvider, server) {\r\n        $authProvider.baseUrl = server.url;\r\n\r\n        $authProvider.signupUrl = '/users/register';\r\n        $authProvider.loginUrl = '/users/login';\r\n    }\r\n\r\n    module.exports = AuthConfig;\r\n\r\n})();\n},{}],2:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    module.exports = {\r\n        url: 'http://localhost:5000/api/'\r\n    }\r\n\r\n})();\n},{}],3:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook', [\r\n            'ngAnimate',\r\n            'ui.router',\r\n            'mgcrea.ngStrap',\r\n            'satellizer',\r\n            'LocalStorageModule'\r\n        ])\r\n        .constant('server', require('./app.constants'))\r\n        .factory('UserService', require('./app/services/UserService'))\r\n        .factory('ImageService', require('./app/services/ImageService'))\r\n        .config(require('./app.routes'))\r\n        .config(require('./app.auth'));\r\n})();\n},{\"./app.auth\":1,\"./app.constants\":2,\"./app.routes\":4,\"./app/services/ImageService\":10,\"./app/services/UserService\":11}],4:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    DrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\r\n\r\n\r\n    /* @ngInject */\r\n    function DrawboookStates ($stateProvider, $urlRouterProvider, $locationProvider) {\r\n        $stateProvider.state('home', {\r\n                url: '/',\r\n                templateUrl: '/app/common/home.tpl.html',\r\n                controller: require('./app/common/HomeController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('register', {\r\n                url: '/register',\r\n                templateUrl: '/app/common/register.tpl.html',\r\n                controller: require('./app/common/RegisterController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('login', {\r\n                url: '/login',\r\n                templateUrl: '/app/common/login.tpl.html',\r\n                controller: require('./app/common/LoginController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('draw', {\r\n                url: '/draw',\r\n                templateUrl: '/app/draw/draw.tpl.html',\r\n                controller: require('./app/draw/DrawController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user', {\r\n                url: '/:username',\r\n                templateUrl: '/app/common/user.tpl.html',\r\n                controller: require('./app/common/UserController'),\r\n                controllerAs: 'vm'\r\n            });\r\n\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        $locationProvider.html5Mode(true);\r\n\r\n    }\r\n\r\n    module.exports = DrawboookStates;\r\n\r\n})();\n},{\"./app/common/HomeController\":5,\"./app/common/LoginController\":6,\"./app/common/RegisterController\":7,\"./app/common/UserController\":8,\"./app/draw/DrawController\":9}],5:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$auth', 'localStorageService', '$state'];\r\n\r\n    /* @ngInject */\r\n    function HomeController($auth, localStorageService, $state) {\r\n        var vm = this;\r\n        vm.title = 'HomeController';\r\n\r\n        //console.log('rootscope: ' + $rootScope.currentUser);\r\n\r\n        vm.user = localStorageService.get(\"currentUser\");\r\n\r\n        vm.isAuthenticated = isAuthenticated;\r\n        vm.logout = logout;\r\n        vm.draw = draw;\r\n        \r\n        function isAuthenticated() {\r\n            return $auth.isAuthenticated();\r\n        }\r\n\r\n        function logout() {\r\n            $auth.logout();\r\n            localStorageService.remove(\"currentUser\");\r\n            //delete $window.localStorage.currentUser;\r\n        }\r\n        \r\n        function draw() {\r\n            $state.go('draw');\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = HomeController;\r\n\r\n})();\r\n\r\n\n},{}],6:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$state', '$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function LoginController($state, $auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'LoginController';\r\n\r\n        vm.login = login;\r\n\r\n        vm.incorrectLogin = false;\r\n\r\n        function login() {\r\n\r\n            var user = {\r\n                username: vm.user.name,\r\n                password: vm.user.password\r\n            };\r\n\r\n            $auth.login(user)\r\n                .then(function(res) {\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    //$window.localStorage.currentUser = JSON.stringify(res.data.user);\r\n                    //$rootScope.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n                    $state.go('home');\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('error: ' + res);\r\n                    vm.incorrectLogin = true;\r\n                });\r\n        }\r\n    }\r\n    module.exports = LoginController;\r\n})();\r\n\r\n\n},{}],7:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function RegisterController($state, $auth, UserService, localStorageService) {\r\n        var vm = this;\r\n\r\n        vm.title = 'RegisterController';\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.takenUsername = false;\r\n\r\n        vm.checkUsername = checkUsername;\r\n        vm.register = register;\r\n\r\n        ////////////////\r\n\r\n        function checkUsername() {\r\n            UserService.get(vm.user.name)\r\n                .then(function (res) {\r\n                    vm.takenUsername = res.user != null;\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Server problem');\r\n                });\r\n        }\r\n\r\n        function register() {\r\n            var user = {\r\n                username: vm.user.name,\r\n                password: vm.user.password,\r\n                firstName: vm.user.firstName,\r\n                lastName: vm.user.lastName,\r\n                age: vm.user.age,\r\n                gender: vm.user.gender\r\n            };\r\n\r\n            $auth.signup(user)\r\n                .then(function(res) {\r\n                    console.log(res);\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    //$window.localStorage.currentUser = JSON.stringify(res.data.user);\r\n                    $auth.login(user)\r\n                        .then(function (res) {\r\n                            $state.go('home');\r\n                        })\r\n                        .catch(function (res) {\r\n                            console.log('Error ' + res);\r\n                        });\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Error ' + res);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    module.exports = RegisterController;\r\n\r\n})();\r\n\r\n\n},{}],8:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserController', UserController);\r\n\r\n    UserController.$inject = ['$stateParams', 'UserService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function UserController($stateParams, UserService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'UserController';\r\n\r\n        vm.init = init;\r\n        vm.deleteImage = deleteImage;\r\n\r\n        init();\r\n\r\n        ////////////////\r\n\r\n        function init() {\r\n            UserService.get($stateParams.username)\r\n                .then(function (res) {\r\n                    vm.user = res.user;\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function deleteImage(_id) {\r\n            ImageService.delete(_id, vm.user.username)\r\n                .then(function (res){})\r\n                .catch(function (res){});\r\n        }\r\n\r\n    }\r\n\r\n    module.exports = UserController;\r\n\r\n})();\r\n\r\n\n},{}],9:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('DrawController', DrawController);\r\n\r\n    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function DrawController($state, localStorageService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'DrawController';\r\n        \r\n        vm.saveImage = saveImage;\r\n\r\n        ///////////////////////////////\r\n\r\n        function saveImage() {\r\n            var username = localStorageService.get(\"currentUser\").username;\r\n\r\n            ImageService.post(username)\r\n                .then(function (res) {\r\n                    $state.go('home');\r\n                })\r\n                .catch(function (res) {})\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = DrawController;\r\n\r\n})();\r\n\r\n\n},{}],10:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    ImageService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ImageService($q, $http, server) {\r\n\r\n        return {\r\n            post: function (username) {\r\n                var deferred = $q.defer();\r\n                $http.post(server.url + '/users/' + username + '/images/', {\r\n                        \"title\": \"teszt kep\"\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            delete: function (id, username) {\r\n                var deferred = $q.defer();\r\n                $http.delete(server.url + '/users/' + username + '/images/' + id)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = ImageService;\r\n\r\n})();\r\n\n},{}],11:[function(require,module,exports){\n(function () {\r\n    'use strict';\r\n\r\n    UserService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function UserService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username) {\r\n                var deferred = $q.defer();\r\n                $http.get(server.url + 'users/' + username)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n\r\n    module.exports = UserService;\r\n\r\n})();\r\n\n},{}]},{},[3])\n\n","(function () {\r\n    'use strict';\r\n\r\n    module.exports = {\r\n        url: 'http://localhost:5000/api/'\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook', [\r\n            'ngAnimate',\r\n            'ui.router',\r\n            'mgcrea.ngStrap',\r\n            'satellizer',\r\n            'LocalStorageModule'\r\n        ])\r\n        .constant('server', require('./app.constants'))\r\n        .factory('UserService', require('./app/services/UserService'))\r\n        .factory('ImageService', require('./app/services/ImageService'))\r\n        .config(require('./app.routes'))\r\n        .config(require('./app.auth'));\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    DrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];\r\n\r\n\r\n    /* @ngInject */\r\n    function DrawboookStates ($stateProvider, $urlRouterProvider, $locationProvider) {\r\n        $stateProvider.state('home', {\r\n                url: '/',\r\n                templateUrl: '/app/common/home.tpl.html',\r\n                controller: require('./app/common/HomeController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('register', {\r\n                url: '/register',\r\n                templateUrl: '/app/common/register.tpl.html',\r\n                controller: require('./app/common/RegisterController'),\r\n                controllerAs: 'vm'\r\n            }).\r\n            state('login', {\r\n                url: '/login',\r\n                templateUrl: '/app/common/login.tpl.html',\r\n                controller: require('./app/common/LoginController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('draw', {\r\n                url: '/draw',\r\n                templateUrl: '/app/draw/draw.tpl.html',\r\n                controller: require('./app/draw/DrawController'),\r\n                controllerAs: 'vm'\r\n            })\r\n            .state('user', {\r\n                url: '/:username',\r\n                templateUrl: '/app/common/user.tpl.html',\r\n                controller: require('./app/common/UserController'),\r\n                controllerAs: 'vm'\r\n            });\r\n\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        $locationProvider.html5Mode(true);\r\n\r\n    }\r\n\r\n    module.exports = DrawboookStates;\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('HomeController', HomeController);\r\n\r\n    HomeController.$inject = ['$auth', 'localStorageService', '$state'];\r\n\r\n    /* @ngInject */\r\n    function HomeController($auth, localStorageService, $state) {\r\n        var vm = this;\r\n        vm.title = 'HomeController';\r\n\r\n        //console.log('rootscope: ' + $rootScope.currentUser);\r\n\r\n        vm.user = localStorageService.get(\"currentUser\");\r\n\r\n        vm.isAuthenticated = isAuthenticated;\r\n        vm.logout = logout;\r\n        vm.draw = draw;\r\n        \r\n        function isAuthenticated() {\r\n            return $auth.isAuthenticated();\r\n        }\r\n\r\n        function logout() {\r\n            $auth.logout();\r\n            localStorageService.remove(\"currentUser\");\r\n            //delete $window.localStorage.currentUser;\r\n        }\r\n        \r\n        function draw() {\r\n            $state.go('draw');\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = HomeController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('LoginController', LoginController);\r\n\r\n    LoginController.$inject = ['$state', '$auth', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function LoginController($state, $auth, localStorageService) {\r\n        var vm = this;\r\n        vm.title = 'LoginController';\r\n\r\n        vm.login = login;\r\n\r\n        vm.incorrectLogin = false;\r\n\r\n        function login() {\r\n\r\n            var user = {\r\n                username: vm.user.name,\r\n                password: vm.user.password\r\n            };\r\n\r\n            $auth.login(user)\r\n                .then(function(res) {\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    //$window.localStorage.currentUser = JSON.stringify(res.data.user);\r\n                    //$rootScope.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n                    $state.go('home');\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('error: ' + res);\r\n                    vm.incorrectLogin = true;\r\n                });\r\n        }\r\n    }\r\n    module.exports = LoginController;\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('RegisterController', RegisterController);\r\n\r\n    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];\r\n\r\n    /* @ngInject */\r\n    function RegisterController($state, $auth, UserService, localStorageService) {\r\n        var vm = this;\r\n\r\n        vm.title = 'RegisterController';\r\n        vm.genders = ['Male', 'Female'];\r\n        vm.takenUsername = false;\r\n\r\n        vm.checkUsername = checkUsername;\r\n        vm.register = register;\r\n\r\n        ////////////////\r\n\r\n        function checkUsername() {\r\n            UserService.get(vm.user.name)\r\n                .then(function (res) {\r\n                    vm.takenUsername = res.user != null;\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Server problem');\r\n                });\r\n        }\r\n\r\n        function register() {\r\n            var user = {\r\n                username: vm.user.name,\r\n                password: vm.user.password,\r\n                firstName: vm.user.firstName,\r\n                lastName: vm.user.lastName,\r\n                age: vm.user.age,\r\n                gender: vm.user.gender\r\n            };\r\n\r\n            $auth.signup(user)\r\n                .then(function(res) {\r\n                    console.log(res);\r\n                    localStorageService.set(\"currentUser\", res.data.user);\r\n                    //$window.localStorage.currentUser = JSON.stringify(res.data.user);\r\n                    $auth.login(user)\r\n                        .then(function (res) {\r\n                            $state.go('home');\r\n                        })\r\n                        .catch(function (res) {\r\n                            console.log('Error ' + res);\r\n                        });\r\n                })\r\n                .catch(function(res) {\r\n                    console.log('Error ' + res);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    module.exports = RegisterController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('UserController', UserController);\r\n\r\n    UserController.$inject = ['$stateParams', 'UserService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function UserController($stateParams, UserService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'UserController';\r\n\r\n        vm.init = init;\r\n        vm.deleteImage = deleteImage;\r\n\r\n        init();\r\n\r\n        ////////////////\r\n\r\n        function init() {\r\n            UserService.get($stateParams.username)\r\n                .then(function (res) {\r\n                    vm.user = res.user;\r\n                })\r\n                .catch(function (res) {});\r\n        }\r\n\r\n        function deleteImage(_id) {\r\n            ImageService.delete(_id, vm.user.username)\r\n                .then(function (res){})\r\n                .catch(function (res){});\r\n        }\r\n\r\n    }\r\n\r\n    module.exports = UserController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('drawbook')\r\n        .controller('DrawController', DrawController);\r\n\r\n    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];\r\n\r\n    /* @ngInject */\r\n    function DrawController($state, localStorageService, ImageService) {\r\n        var vm = this;\r\n        vm.title = 'DrawController';\r\n        \r\n        vm.saveImage = saveImage;\r\n\r\n        ///////////////////////////////\r\n\r\n        function saveImage() {\r\n            var username = localStorageService.get(\"currentUser\").username;\r\n\r\n            ImageService.post(username)\r\n                .then(function (res) {\r\n                    $state.go('home');\r\n                })\r\n                .catch(function (res) {})\r\n        }\r\n        \r\n    }\r\n\r\n    module.exports = DrawController;\r\n\r\n})();\r\n\r\n","(function () {\r\n    'use strict';\r\n\r\n    ImageService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function ImageService($q, $http, server) {\r\n\r\n        return {\r\n            post: function (username) {\r\n                var deferred = $q.defer();\r\n                $http.post(server.url + '/users/' + username + '/images/', {\r\n                        \"title\": \"teszt kep\"\r\n                    })\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            },\r\n            delete: function (id, username) {\r\n                var deferred = $q.defer();\r\n                $http.delete(server.url + '/users/' + username + '/images/' + id)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n    module.exports = ImageService;\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    UserService.$inject = ['$q', '$http', 'server'];\r\n\r\n    /* @ngInject */\r\n    function UserService($q, $http, server) {\r\n\r\n        return {\r\n            get: function (username) {\r\n                var deferred = $q.defer();\r\n                $http.get(server.url + 'users/' + username)\r\n                    .success(function (data) {\r\n                        deferred.resolve(data);\r\n                    })\r\n                    .error(function (data) {\r\n                        deferred.reject('rejected: ' + data);\r\n                    });\r\n\r\n                return deferred.promise;\r\n            }\r\n        };\r\n    }\r\n\r\n    module.exports = UserService;\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}