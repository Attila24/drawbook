(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    AuthConfig.$inject = ['$authProvider', 'server'];


    /* @ngInject */
    function AuthConfig($authProvider, server) {
        $authProvider.baseUrl = server.url;

        $authProvider.signupUrl = '/users/register';
        $authProvider.loginUrl = '/users/login';
    }

    module.exports = AuthConfig;

})();

},{}],2:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    module.exports = {
        url: 'http://localhost:5000/api/' };


})();

},{}],3:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    angular.
    module('drawbook', [
    'ngAnimate',
    'ui.router',
    'mgcrea.ngStrap',
    'satellizer',
    'LocalStorageModule',
    'ngFileUpload']).

    constant('server', require('./app.constants')).
    factory('UserService', require('./app/services/UserService')).
    factory('ImageService', require('./app/services/ImageService')).
    factory('CommentService', require('./app/services/CommentService')).
    config(require('./app.routes')).
    config(require('./app.auth'));
})();

},{"./app.auth":1,"./app.constants":2,"./app.routes":4,"./app/services/CommentService":10,"./app/services/ImageService":11,"./app/services/UserService":12}],4:[function(require,module,exports){
'use strict';

var _HomeController = require('./app/common/HomeController');var _HomeController2 = _interopRequireDefault(_HomeController);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}


DrawboookStates.$inject = ['$stateProvider', '$urlRouterProvider', '$locationProvider'];

/* @ngInject */
function DrawboookStates($stateProvider, $urlRouterProvider, $locationProvider) {

    $stateProvider.state('home', {
        url: '/',
        templateUrl: '/app/common/home.tpl.html',
        controller: _HomeController2.default,
        controllerAs: 'vm' }).

    state('register', {
        url: '/register',
        templateUrl: '/app/common/register.tpl.html',
        controller: require('./app/common/RegisterController'),
        controllerAs: 'vm' }).

    state('login', {
        url: '/login',
        templateUrl: '/app/common/login.tpl.html',
        controller: require('./app/common/LoginController'),
        controllerAs: 'vm' }).

    state('draw', {
        url: '/draw',
        templateUrl: '/app/draw/draw.tpl.html',
        controller: require('./app/draw/DrawController'),
        controllerAs: 'vm' }).

    state('edit', {
        url: '/edit',
        templateUrl: '/app/common/profile-edit.tpl.html',
        controller: require('./app/common/ProfileEditController'),
        controllerAs: 'vm' }).

    state('user', {
        abstract: true,
        url: '/:username',
        templateUrl: '/app/user/user.tpl.html',
        controller: require('./app/user/UserController'),
        controllerAs: 'vm',
        resolve: {
            user: ['$stateParams', 'UserService', function ($stateParams, UserService) {return UserService.get($stateParams.username);}] } }).



    state('user.gallery', {
        url: '/',
        templateUrl: '/app/user/user.gallery.tpl.html',
        controller: require('./app/user/UserGalleryController'),
        controllerAs: 'vm' }).

    state('user.gallery.image', {
        url: 'image/:id',
        params: { index: null },
        onEnter: ['$modal', '$state', 'user', '$stateParams', function ($modal, $state, _user) {
            $modal({
                templateUrl: '/app/user/user.image.tpl.html',
                controller: require('./app/user/UserImageController'),
                controllerAs: 'vm',
                resolve: {
                    user: function user() {return _user;} },

                container: 'body',
                animation: 'am-fade',
                backdropAnimation: 'backdrop-anim',
                position: 'center',
                keyboard: false,
                backdrop: false });

        }] });


    $urlRouterProvider.otherwise("/");
    $locationProvider.html5Mode(true);

}

module.exports = DrawboookStates;

},{"./app/common/HomeController":5,"./app/common/LoginController":6,"./app/common/ProfileEditController":7,"./app/common/RegisterController":8,"./app/draw/DrawController":9,"./app/user/UserController":13,"./app/user/UserGalleryController":14,"./app/user/UserImageController":15}],5:[function(require,module,exports){
'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.default =








HomeController;angular.module('drawbook').controller('HomeController', HomeController);HomeController.$inject = ['$auth', 'localStorageService', 'UserService']; /* @ngInject */function HomeController($auth, localStorageService, UserService) {
    var vm = this;
    vm.title = 'HomeController';

    vm.user = localStorageService.get("currentUser");

    vm.isAuthenticated = isAuthenticated;
    vm.logout = logout;

    if (isAuthenticated()) init();

    function init() {
        UserService.get().
        then(function (res) {
            vm.users = res;
        });
    }


    function isAuthenticated() {
        return $auth.isAuthenticated();
    }

    function logout() {
        $auth.logout();
        localStorageService.remove("currentUser");
    }
}

},{}],6:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    angular.
    module('drawbook').
    controller('LoginController', LoginController);

    LoginController.$inject = ['$state', '$auth', 'localStorageService'];

    /* @ngInject */
    function LoginController($state, $auth, localStorageService) {
        var vm = this;

        vm.title = 'LoginController';
        vm.incorrectLogin = false;

        vm.login = login;

        //////////////////////////////////////

        function login() {

            var user = {
                username: vm.user.name,
                password: vm.user.password };


            $auth.login(user).
            then(function (res) {
                localStorageService.set("currentUser", res.data.user);
                $state.go('home');
            }).
            catch(function (res) {
                console.log('Error: ' + res);
                vm.incorrectLogin = true;
            });
        }
    }
    module.exports = LoginController;
})();

},{}],7:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    angular.
    module('drawbook').
    controller('ProfileEditController', ProfileEditController);

    ProfileEditController.$inject = ['$state', 'localStorageService', 'UserService', 'Upload', 'server'];

    /* @ngInject */
    function ProfileEditController($state, localStorageService, UserService, Upload, server) {
        var vm = this;
        vm.title = 'ProfileEditController';
        vm.genders = ['Male', 'Female'];

        vm.edit = edit;
        vm.upload = upload;

        var username = localStorageService.get('currentUser').username;

        init();

        ////////////////////////////////////////////


        function init() {
            UserService.get(username).
            then(function (res) {
                vm.user = res.user;
                vm.avatarPath = vm.user.avatarPath || 'img/default-avatar.jpg';
            }).
            catch(function (res) {});
        }

        function edit() {
            UserService.update(vm.user);
            upload();
            $state.go('home');
        }

        function upload() {
            var file = vm.file;

            if (file) {

                file.upload = Upload.upload({
                    url: server.url + '/users/' + vm.user.username + '/images/avatar',
                    data: { file: file } });


                file.upload.then(function (res) {
                    file.result = res;
                }, function (res) {
                    if (res.status > 0) {
                        vm.errorMsg = res.status + ': ' + res.data;
                    }
                });
            }
        }
    }

    module.exports = ProfileEditController;

})();

},{}],8:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    angular.
    module('drawbook').
    controller('RegisterController', RegisterController);

    RegisterController.$inject = ['$state', '$auth', 'UserService', 'localStorageService'];

    /* @ngInject */
    function RegisterController($state, $auth, UserService, localStorageService) {
        var vm = this;

        vm.title = 'RegisterController';
        vm.genders = ['Male', 'Female'];
        vm.takenUsername = false;

        vm.checkUsername = checkUsername;
        vm.register = register;

        ////////////////

        function checkUsername() {
            UserService.get(vm.user.username).
            then(function (res) {
                vm.takenUsername = res.user != null;
            }).
            catch(function (res) {});
        }

        function register() {
            var user = {
                username: vm.user.username,
                password: vm.user.password,
                firstName: vm.user.firstName,
                lastName: vm.user.lastName,
                age: vm.user.age,
                gender: vm.user.gender };

            $auth.signup(user).
            then(function (res) {
                localStorageService.set("currentUser", res.data.user);
                $auth.login(user).
                then(function (res) {
                    $state.go('home');
                }).
                catch(function (res) {});
            }).
            catch(function (res) {});
        }

    }

    module.exports = RegisterController;

})();

},{}],9:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    angular.
    module('drawbook').
    controller('DrawController', DrawController);

    DrawController.$inject = ['$state', 'localStorageService', 'ImageService'];

    /* @ngInject */
    function DrawController($state, localStorageService, ImageService) {
        var vm = this;
        vm.title = 'DrawController';

        vm.saveImage = saveImage;

        ///////////////////////////////

        function saveImage() {var _this = this;

            var tmpcanvas = $('<canvas>').attr({ width: 600, height: 600 });
            var tmpcontext = tmpcanvas[0].getContext('2d');
            var arr = [];

            $('.canvas').each(function () {
                arr.push({
                    canvas: $(_this),
                    zindex: parseInt($(_this).css("z-index")) });

            });

            arr.sort(function (a, b) {return a.zindex - b.zindex;});

            for (var i = 0; i < arr.length; i++) {
                tmpcontext.drawImage(arr[i]['canvas'][0], 0, 0);
            }

            var img = tmpcanvas[0].toDataURL();
            var username = localStorageService.get("currentUser").username;

            ImageService.post(username, img, vm.imagetitle).
            then(function (res) {
                $state.go('home');
            }).
            catch(function (res) {});
        }

    }

    module.exports = DrawController;

})();

},{}],10:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    CommentService.$inject = ['$q', '$http', 'server'];

    /* @ngInject */
    function CommentService($q, $http, server) {

        return {
            post: function post(username, imageid, comment, currentUser) {
                var deferred = $q.defer();

                $http.post(server.url + '/users/' + username + '/images/' + imageid + '/comments/',
                {
                    author: currentUser.username,
                    authorAvatar: currentUser.avatarPath,
                    comment: comment }).

                success(function (data) {deferred.resolve(data);}).
                error(function (data) {deferred.reject(data);});

                return deferred.promise;
            },
            get: function get(user, imageid) {
                var deferred = $q.defer();

                $http.get(server.url + '/users/' + user.username + '/images/' + imageid).
                success(function (data) {deferred.resolve(data);}).
                error(function (data) {deferred.reject(data);});
                return deferred.promise;
            } };

    }
    module.exports = CommentService;

})();

},{}],11:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    ImageService.$inject = ['$q', '$http', 'server'];

    /* @ngInject */
    function ImageService($q, $http, server) {

        return {
            get: function get(username, id) {

                var deferred = $q.defer();
                $http({
                    method: 'GET',
                    url: server.url + 'users/' + username + '/images/' + id,
                    headers: { 'Content-Type': 'images/png' } }).

                then(function (data) {
                    deferred.resolve({ data: data, id: id });
                }, function (data) {
                    deferred.reject(data);
                });

                return deferred.promise;
            },
            post: function post(username, img, title) {
                var deferred = $q.defer();
                $http.post(server.url + 'users/' + username + '/images/', {
                    "title": title,
                    "image": img }).

                success(function (data) {
                    deferred.resolve(data);
                }).
                error(function (data) {
                    deferred.reject('rejected: ' + data);
                });
                return deferred.promise;
            },
            delete: function _delete(id, username) {
                var deferred = $q.defer();
                $http.delete(server.url + 'users/' + username + '/images/' + id).
                success(function (data) {
                    deferred.resolve(data);
                }).
                error(function (data) {
                    deferred.reject('rejected: ' + data);
                });
                return deferred.promise;
            } };

    }
    module.exports = ImageService;

})();

},{}],12:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    UserService.$inject = ['$q', '$http', 'server'];

    /* @ngInject */
    function UserService($q, $http, server) {

        return {
            get: function get(username) {
                var deferred = $q.defer();
                var url = username ? server.url + 'users/' + username : server.url + 'users/';
                $http.get(url).
                success(function (data) {
                    deferred.resolve(data);
                }).
                error(function (data) {
                    deferred.reject('rejected: ' + data);
                });

                return deferred.promise;
            },
            update: function update(user) {
                var deferred = $q.defer;
                $http.patch(server.url + 'users/' + user.username, { user: user }).
                success(function (data) {

                }).
                error(function (data) {
                    deferred.reject('rejected: ' + data);
                });
                return deferred.promise;
            } };

    }

    module.exports = UserService;

})();

},{}],13:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    angular.
    module('drawbook').
    controller('UserController', UserController);

    UserController.$inject = ['$stateParams', 'UserService', 'ImageService', 'user'];

    /* @ngInject */
    function UserController($stateParams, UserService, ImageService, user) {
        var vm = this;
        vm.title = 'UserController';
        vm.images = [];
        vm.user = user.user;


        ////////////////

        /*function deleteImage(_id, index) {
            ImageService.delete(_id, vm.user.username)
                .then(function (res){
                    delete vm.user.images[index];
                })
                .catch(function (res){});
        }*/
    }

    module.exports = UserController;

})();

},{}],14:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    angular.
    module('drawbook').
    controller('UserGalleryController', UserGalleryController);

    UserGalleryController.$inject = ['user', 'ImageService', '$state'];

    /* @ngInject */
    function UserGalleryController(user, ImageService, $state) {
        var vm = this;
        vm.title = 'UserGalleryController';
        vm.user = user.user;
        vm.images = [];

        var limit = 12;

        vm.loadMore = loadMore;

        init();

        ////////////////////

        function init() {
            vm.loaded = vm.user.images.length < limit ? vm.user.images.length : limit;
            for (var i = 0; i < vm.loaded; i++) {
                ImageService.get(vm.user.username, vm.user.images[i]._id).
                then(function (res) {
                    vm.images.push(res.data.data);
                }).
                catch(function (res) {});
            }
        }

        function loadMore() {
            vm.current = vm.loaded;
            vm.loaded = vm.user.images.length < vm.loaded + limit ? vm.user.images.length : vm.loaded + limit;

            console.log('current: ' + vm.current);
            console.log('loaded: ' + vm.loaded);

            for (var i = vm.current; i < vm.loaded; i++) {
                ImageService.get(vm.user.username, vm.user.images[i]._id).
                then(function (res) {
                    vm.images.push(res.data.data);
                }).
                catch(function (res) {});
            }
            console.log(vm.images);
        }



    }

    module.exports = UserGalleryController;

})();

},{}],15:[function(require,module,exports){
'use strict';(function () {
    'use strict';

    angular.
    module('drawbook').
    controller('UserImageController', UserImageController);

    UserImageController.$inject = ['$stateParams', 'ImageService', 'user', '$state', '$scope', 'CommentService', 'localStorageService'];

    /* @ngInject */
    function UserImageController($stateParams, ImageService, user, $state, $scope, CommentService, localStorageService) {

        var vm = this;
        vm.title = 'UserImageController';
        vm.user = user.user;
        vm.index = $stateParams.index;
        vm.navigate = navigate;
        vm.addComment = addComment;

        init();

        ////////////////////////////////////

        function init() {

            $(window).on('click', function (event) {
                if ($(event.target).is('.modal')) {
                    $state.go('user.gallery', { user: vm.username }).
                    then(function () {
                        $scope.$hide();
                    });
                }
            });

            if (vm.index === undefined || vm.index === null) {
                vm.index = vm.user.images.map(function (e) {return e._id;}).indexOf($stateParams.id);
            }

            if (vm.user.images.length == 1) {
                vm.prev = vm.next = undefined;
            } else if (vm.index == 0) {
                vm.next = vm.user.images[vm.index + 1]._id;
                vm.prev = undefined;
            } else if (vm.index > 0 && vm.index < vm.user.images.length - 1) {
                vm.prev = vm.user.images[vm.index - 1]._id;
                vm.next = vm.user.images[vm.index + 1]._id;
            } else if (vm.index == vm.user.images.length - 1) {
                vm.prev = vm.user.images[vm.index - 1]._id;
                vm.next = undefined;
            }

            ImageService.get(vm.user.username, $stateParams.id).
            then(function (res) {
                vm.image = res.data.data;
            }).
            catch(function (res) {});

            loadComments();

        }

        function loadComments() {
            CommentService.get(vm.user.username, $stateParams.id).
            then(function (res) {
                vm.comments = res.image.comments;
                console.log(vm.comments);
            }).
            catch(function (res) {});
        }

        function navigate(keyCode) {
            if (vm.prev != undefined && keyCode == 37) {// left
                $state.go('user.gallery.image', { id: vm.prev, index: vm.index - 1 }).
                then(function () {
                    $scope.$hide();
                });
            } else if (vm.next != undefined && keyCode == 39) {// right
                $state.go('user.gallery.image', { id: vm.next, index: vm.index + 1 }).
                then(function () {
                    $scope.$hide();
                });
            } else if (keyCode == 27) {// escape
                $state.go('user.gallery', { user: vm.username }).
                then(function () {
                    $scope.$hide();
                });
            }
        }


        function addComment() {
            CommentService.post(vm.user.username, $stateParams.id, vm.comment, localStorageService.get('currentUser')).
            then(function (res) {
                vm.comment = "";
                loadComments();
            }).
            catch(function (res) {});
        }
    }

    module.exports = UserImageController;

})();

},{}]},{},[3])


//# sourceMappingURL=main.min.js.map
